/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { SeacowsRouter, SeacowsRouterInterface } from "../SeacowsRouter";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_weth",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_pairs",
        type: "address[]",
      },
      {
        internalType: "uint256[][]",
        name: "idsOuts",
        type: "uint256[][]",
      },
      {
        internalType: "uint256[]",
        name: "amountInMaxs",
        type: "uint256[]",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "batchSwapETHForExactNFTs",
    outputs: [
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_pairs",
        type: "address[]",
      },
      {
        internalType: "uint256[][]",
        name: "idsIns",
        type: "uint256[][]",
      },
      {
        internalType: "uint256[]",
        name: "amountOutMins",
        type: "uint256[]",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "batchSwapExactNFTsForETH",
    outputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_pairs",
        type: "address[]",
      },
      {
        internalType: "uint256[][]",
        name: "idsIns",
        type: "uint256[][]",
      },
      {
        internalType: "uint256[]",
        name: "amountOutMins",
        type: "uint256[]",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "batchSwapExactNFTsForTokens",
    outputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_pairs",
        type: "address[]",
      },
      {
        internalType: "uint256[][]",
        name: "idsOuts",
        type: "uint256[][]",
      },
      {
        internalType: "uint256[]",
        name: "amountInMaxs",
        type: "uint256[]",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "batchSwapTokensForExactNFTs",
    outputs: [
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_pair",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "idsOut",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "amountInMax",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "swapETHForExactNFTs",
    outputs: [
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_pair",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "idsIn",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "amountOutMin",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "swapExactNFTsForETH",
    outputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_pair",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "idsIn",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "amountOutMin",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "swapExactNFTsForTokens",
    outputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_pair",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "idsOut",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "amountInMax",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "swapTokensForExactNFTs",
    outputs: [
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "weth",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051611a6e380380611a6e83398101604081905261002f916100ae565b6001600160a01b0381166100895760405162461bcd60e51b815260206004820152601460248201527f496e76616c696420574554482061646472657373000000000000000000000000604482015260640160405180910390fd5b600080546001600160a01b0319166001600160a01b03929092169190911790556100de565b6000602082840312156100c057600080fd5b81516001600160a01b03811681146100d757600080fd5b9392505050565b611981806100ed6000396000f3fe60806040526004361061008a5760003560e01c806397ce2ef21161005957806397ce2ef214610141578063a0c8b2c514610161578063a8e6bf4c14610174578063ee7ab0f714610194578063fae1132a146101a757600080fd5b8063143cfa3b146100965780633fc8cef3146100c957806359a64de314610101578063798489601461012157600080fd5b3661009157005b600080fd5b3480156100a257600080fd5b506100b66100b13660046113eb565b6101c7565b6040519081526020015b60405180910390f35b3480156100d557600080fd5b506000546100e9906001600160a01b031681565b6040516001600160a01b0390911681526020016100c0565b34801561010d57600080fd5b506100b661011c3660046114b8565b6102f6565b34801561012d57600080fd5b506100b661013c3660046113eb565b610399565b34801561014d57600080fd5b506100b661015c3660046114b8565b6104b1565b6100b661016f3660046114b8565b61083f565b34801561018057600080fd5b506100b661018f3660046114b8565b6109c5565b6100b66101a23660046113eb565b610d5b565b3480156101b357600080fd5b506100b66101c23660046113eb565b610f7e565b600081428110156101f35760405162461bcd60e51b81526004016101ea906115ac565b60405180910390fd5b888714801561020157508685145b61021d5760405162461bcd60e51b81526004016101ea906115dc565b60005b898110156102e8576102ca8b8b8381811061023d5761023d611620565b90506020020160208101906102529190611636565b8a8a8481811061026457610264611620565b9050602002810190610276919061165a565b808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152508c92508b91508690508181106102bc576102bc611620565b9050602002013588886104b1565b6102d490846116ba565b9250806102e0816116d3565b915050610220565b505098975050505050505050565b600081428110156103195760405162461bcd60e51b81526004016101ea906115ac565b61032687878730876109c5565b600054604051632e1a7d4d60e01b8152600481018390529193506001600160a01b031690632e1a7d4d90602401600060405180830381600087803b15801561036d57600080fd5b505af1158015610381573d6000803e3d6000fd5b5050505061038f848361110c565b5095945050505050565b600081428110156103bc5760405162461bcd60e51b81526004016101ea906115ac565b88871480156103ca57508685145b6103e65760405162461bcd60e51b81526004016101ea906115dc565b60005b898110156102e8576104938b8b8381811061040657610406611620565b905060200201602081019061041b9190611636565b8a8a8481811061042d5761042d611620565b905060200281019061043f919061165a565b808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152508c92508b915086905081811061048557610485611620565b9050602002013588886109c5565b61049d90846116ba565b9250806104a9816116d3565b9150506103e9565b600081428110156104d45760405162461bcd60e51b81526004016101ea906115ac565b6000879050600080826001600160a01b0316630902f1ac6040518163ffffffff1660e01b8152600401606060405180830381865afa15801561051a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061053e9190611703565b506001600160701b031691506001600160701b03169150610691836001600160a01b0316639e75baa76040518163ffffffff1660e01b8152600401602060405180830381865afa158015610596573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105ba9190611753565b8a516105c6919061176c565b8383866001600160a01b0316637fd6f15c6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610606573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061062a9190611753565b876001600160a01b031663e256888f6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610668573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061068c9190611753565b6111ab565b9450878511156106f15760405162461bcd60e51b815260206004820152602560248201527f536561636f7773526f757465723a204558434553534956455f494e5055545f416044820152641353d5539560da1b60648201526084016101ea565b826001600160a01b031663fc0c546a6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561072f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107539190611783565b6040516323b872dd60e01b81523360048201526001600160a01b038c811660248301526044820188905291909116906323b872dd906064016020604051808303816000875af11580156107aa573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107ce91906117a0565b506040516312e6eec560e21b81526001600160a01b03841690634b9bbb1490610800906000908d908c906004016117fd565b600060405180830381600087803b15801561081a57600080fd5b505af115801561082e573d6000803e3d6000fd5b505050505050505095945050505050565b600081428110156108625760405162461bcd60e51b81526004016101ea906115ac565b60008054906101000a90046001600160a01b03166001600160a01b031663d0e30db0836040518263ffffffff1660e01b81526004016000604051808303818588803b1580156108b057600080fd5b505af11580156108c4573d6000803e3d6000fd5b505060005460405163a9059cbb60e01b81526001600160a01b038c8116600483015260248201889052909116935063a9059cbb925060440190506020604051808303816000875af115801561091d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061094191906117a0565b5060405163a0c8b2c560e01b8152309063a0c8b2c59061096d908a908a908a908a908a9060040161182e565b6020604051808303816000875af115801561098c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109b09190611753565b915061038f336109c0843461186c565b61110c565b600081428110156109e85760405162461bcd60e51b81526004016101ea906115ac565b6000879050600080826001600160a01b0316630902f1ac6040518163ffffffff1660e01b8152600401606060405180830381865afa158015610a2e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a529190611703565b506001600160701b031691506001600160701b03169150610ba5836001600160a01b0316639e75baa76040518163ffffffff1660e01b8152600401602060405180830381865afa158015610aaa573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ace9190611753565b8a51610ada919061176c565b8383866001600160a01b0316637fd6f15c6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610b1a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b3e9190611753565b876001600160a01b031663e256888f6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610b7c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ba09190611753565b611297565b945087851015610c095760405162461bcd60e51b815260206004820152602960248201527f536561636f7773526f757465723a20494e53554646494349454e545f4f555450604482015268155517d05353d5539560ba1b60648201526084016101ea565b60005b8951811015610d1e57836001600160a01b0316637de1e5366040518163ffffffff1660e01b8152600401602060405180830381865afa158015610c53573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c779190611783565b6001600160a01b03166342842e0e338d8d8581518110610c9957610c99611620565b60209081029190910101516040516001600160e01b031960e086901b1681526001600160a01b0393841660048201529290911660248301526044820152606401600060405180830381600087803b158015610cf357600080fd5b505af1158015610d07573d6000803e3d6000fd5b505050508080610d16906116d3565b915050610c0c565b50604080516000815260208101918290526312e6eec560e21b9091526001600160a01b03841690634b9bbb14906108009088908b602482016117fd565b60008142811015610d7e5760405162461bcd60e51b81526004016101ea906115ac565b8887148015610d8c57508685145b610da85760405162461bcd60e51b81526004016101ea906115dc565b60008054906101000a90046001600160a01b03166001600160a01b031663d0e30db0346040518263ffffffff1660e01b81526004016000604051808303818588803b158015610df657600080fd5b505af1158015610e0a573d6000803e3d6000fd5b505050505060005b89811015610f08573063a0c8b2c58c8c84818110610e3257610e32611620565b9050602002016020810190610e479190611636565b8b8b85818110610e5957610e59611620565b9050602002810190610e6b919061165a565b8b8b87818110610e7d57610e7d611620565b905060200201358a8a6040518763ffffffff1660e01b8152600401610ea79695949392919061187f565b6020604051808303816000875af1158015610ec6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610eea9190611753565b610ef490846116ba565b925080610f00816116d3565b915050610e12565b506000610f15833461186c565b600054604051632e1a7d4d60e01b8152600481018390529192506001600160a01b031690632e1a7d4d90602401600060405180830381600087803b158015610f5c57600080fd5b505af1158015610f70573d6000803e3d6000fd5b505050506102e8338261110c565b60008142811015610fa15760405162461bcd60e51b81526004016101ea906115ac565b8887148015610faf57508685145b610fcb5760405162461bcd60e51b81526004016101ea906115dc565b60005b89811015611096576110788b8b83818110610feb57610feb611620565b90506020020160208101906110009190611636565b8a8a8481811061101257611012611620565b9050602002810190611024919061165a565b808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152508c92508b915086905081811061106a5761106a611620565b9050602002013530886109c5565b61108290846116ba565b92508061108e816116d3565b915050610fce565b50600054604051632e1a7d4d60e01b8152600481018490526001600160a01b0390911690632e1a7d4d90602401600060405180830381600087803b1580156110dd57600080fd5b505af11580156110f1573d6000803e3d6000fd5b505050506110ff848361110c565b5098975050505050505050565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114611159576040519150601f19603f3d011682016040523d82523d6000602084013e61115e565b606091505b50509050806111a65760405162461bcd60e51b81526020600482015260146024820152732330b4b632b2103a379039b2b7321022ba3432b960611b60448201526064016101ea565b505050565b600080861161120f5760405162461bcd60e51b815260206004820152602a60248201527f536561636f77734c6962726172793a20494e53554646494349454e545f4f555460448201526914155517d05353d5539560b21b60648201526084016101ea565b60008511801561121f5750600084115b61123b5760405162461bcd60e51b81526004016101ea906118e3565b600082611248888861176c565b611252919061176c565b90506000611260858561186c565b61126a898861186c565b611274919061176c565b90506112808183611929565b61128b9060016116ba565b98975050505050505050565b60008086116112fa5760405162461bcd60e51b815260206004820152602960248201527f536561636f77734c6962726172793a20494e53554646494349454e545f494e50604482015268155517d05353d5539560ba1b60648201526084016101ea565b60008511801561130a5750600084115b6113265760405162461bcd60e51b81526004016101ea906118e3565b6000611332848461186c565b61133c878961176c565b611346919061176c565b905060008361135589886116ba565b61135f919061176c565b9050600161136d8284611929565b61128b919061186c565b60008083601f84011261138957600080fd5b50813567ffffffffffffffff8111156113a157600080fd5b6020830191508360208260051b85010111156113bc57600080fd5b9250929050565b6001600160a01b03811681146113d857600080fd5b50565b80356113e6816113c3565b919050565b60008060008060008060008060a0898b03121561140757600080fd5b883567ffffffffffffffff8082111561141f57600080fd5b61142b8c838d01611377565b909a50985060208b013591508082111561144457600080fd5b6114508c838d01611377565b909850965060408b013591508082111561146957600080fd5b506114768b828c01611377565b909550935050606089013561148a816113c3565b80925050608089013590509295985092959890939650565b634e487b7160e01b600052604160045260246000fd5b600080600080600060a086880312156114d057600080fd5b85356114db816113c3565b945060208681013567ffffffffffffffff808211156114f957600080fd5b818901915089601f83011261150d57600080fd5b81358181111561151f5761151f6114a2565b8060051b604051601f19603f83011681018181108582111715611544576115446114a2565b60405291825284820192508381018501918c83111561156257600080fd5b938501935b8285101561158057843584529385019392850192611567565b98505050506040880135945061159b915050606087016113db565b949793965091946080013592915050565b60208082526016908201527514d95858dbdddcd49bdd5d195c8e881156141254915160521b604082015260600190565b60208082526024908201527f536561636f7773526f757465723a20494e56414c49445f504152414d535f4c4560408201526309c8ea8960e31b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b60006020828403121561164857600080fd5b8135611653816113c3565b9392505050565b6000808335601e1984360301811261167157600080fd5b83018035915067ffffffffffffffff82111561168c57600080fd5b6020019150600581901b36038213156113bc57600080fd5b634e487b7160e01b600052601160045260246000fd5b808201808211156116cd576116cd6116a4565b92915050565b6000600182016116e5576116e56116a4565b5060010190565b80516001600160701b03811681146113e657600080fd5b60008060006060848603121561171857600080fd5b611721846116ec565b925061172f602085016116ec565b9150604084015163ffffffff8116811461174857600080fd5b809150509250925092565b60006020828403121561176557600080fd5b5051919050565b80820281158282048414176116cd576116cd6116a4565b60006020828403121561179557600080fd5b8151611653816113c3565b6000602082840312156117b257600080fd5b8151801515811461165357600080fd5b600081518084526020808501945080840160005b838110156117f2578151875295820195908201906001016117d6565b509495945050505050565b83815260606020820152600061181660608301856117c2565b905060018060a01b0383166040830152949350505050565b600060018060a01b03808816835260a0602084015261185060a08401886117c2565b6040840196909652939093166060820152608001525092915050565b818103818111156116cd576116cd6116a4565b6001600160a01b03878116825260a06020830181905282018690526000906001600160fb1b038711156118b157600080fd5b8660051b808960c08601376040840196909652939093166060820152608081019190915290910160c001949350505050565b60208082526026908201527f536561636f77734c6962726172793a20494e53554646494349454e545f4c495160408201526555494449545960d01b606082015260800190565b60008261194657634e487b7160e01b600052601260045260246000fd5b50049056fea26469706673582212209d504dec1482b89cb3a7fb4ab0bba3e6936ef034fd9d644538a4f05db8fa049b64736f6c63430008120033";

export class SeacowsRouter__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _weth: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<SeacowsRouter> {
    return super.deploy(_weth, overrides || {}) as Promise<SeacowsRouter>;
  }
  getDeployTransaction(
    _weth: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_weth, overrides || {});
  }
  attach(address: string): SeacowsRouter {
    return super.attach(address) as SeacowsRouter;
  }
  connect(signer: Signer): SeacowsRouter__factory {
    return super.connect(signer) as SeacowsRouter__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SeacowsRouterInterface {
    return new utils.Interface(_abi) as SeacowsRouterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SeacowsRouter {
    return new Contract(address, _abi, signerOrProvider) as SeacowsRouter;
  }
}
