/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  SeacowsPairMetadata,
  SeacowsPairMetadataInterface,
} from "../SeacowsPairMetadata";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_operator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_fromTokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_toTokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "onERC3525Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC721Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610328806100206000396000f3fe608060405234801561001057600080fd5b50600436106100405760003560e01c80629ce20b1461004557806301ffc9a714610082578063150b7a02146100a5575b600080fd5b610064610053366004610130565b629ce20b60e01b9695505050505050565b6040516001600160e01b031990911681526020015b60405180910390f35b6100956100903660046101cf565b6100c3565b6040519015158152602001610079565b6100646100b3366004610216565b630a85bd0160e11b949350505050565b60006301ffc9a760e01b6001600160e01b0319831614806100f457506001600160e01b03198216630a85bd0160e11b145b8061010e57506001600160e01b03198216629ce20b60e01b145b92915050565b80356001600160a01b038116811461012b57600080fd5b919050565b60008060008060008060a0878903121561014957600080fd5b61015287610114565b9550602087013594506040870135935060608701359250608087013567ffffffffffffffff8082111561018457600080fd5b818901915089601f83011261019857600080fd5b8135818111156101a757600080fd5b8a60208285010111156101b957600080fd5b6020830194508093505050509295509295509295565b6000602082840312156101e157600080fd5b81356001600160e01b0319811681146101f957600080fd5b9392505050565b634e487b7160e01b600052604160045260246000fd5b6000806000806080858703121561022c57600080fd5b61023585610114565b935061024360208601610114565b925060408501359150606085013567ffffffffffffffff8082111561026757600080fd5b818701915087601f83011261027b57600080fd5b81358181111561028d5761028d610200565b604051601f8201601f19908116603f011681019083821181831017156102b5576102b5610200565b816040528281528a60208487010111156102ce57600080fd5b8260208601602083013760006020848301015280955050505050509295919450925056fea2646970667358221220edda582584be97beff9b2656929b194b1896dbe5e794b3eb6a9d21ac16469dab64736f6c63430008120033";

export class SeacowsPairMetadata__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<SeacowsPairMetadata> {
    return super.deploy(overrides || {}) as Promise<SeacowsPairMetadata>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): SeacowsPairMetadata {
    return super.attach(address) as SeacowsPairMetadata;
  }
  connect(signer: Signer): SeacowsPairMetadata__factory {
    return super.connect(signer) as SeacowsPairMetadata__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SeacowsPairMetadataInterface {
    return new utils.Interface(_abi) as SeacowsPairMetadataInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SeacowsPairMetadata {
    return new Contract(address, _abi, signerOrProvider) as SeacowsPairMetadata;
  }
}
