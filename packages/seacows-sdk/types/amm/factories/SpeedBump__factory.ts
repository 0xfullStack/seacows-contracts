/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { SpeedBump, SpeedBumpInterface } from "../SpeedBump";

const _abi = [
  {
    inputs: [],
    name: "FM_NON_FEE_MANAGER",
    type: "error",
  },
  {
    inputs: [],
    name: "FM_NON_ROYALTY_FEE_MANAGER",
    type: "error",
  },
  {
    inputs: [],
    name: "RM_NON_ROYALTY_FEE_MANAGER",
    type: "error",
  },
  {
    inputs: [],
    name: "SPMD_ONLY_POSITION_MANAGER",
    type: "error",
  },
  {
    inputs: [],
    name: "SPMD_PAUSED",
    type: "error",
  },
  {
    inputs: [],
    name: "SPM_BELOW_NFT_OUT_MIN_CONSTRAINT",
    type: "error",
  },
  {
    inputs: [],
    name: "SPM_BELOW_TOKEN_OUT_MIN_CONSTRAINT",
    type: "error",
  },
  {
    inputs: [],
    name: "SPM_ETH_TRANSFER_FAILED",
    type: "error",
  },
  {
    inputs: [],
    name: "SPM_EXPIRED",
    type: "error",
  },
  {
    inputs: [],
    name: "SPM_INSUFFICIENT_AMOUNT",
    type: "error",
  },
  {
    inputs: [],
    name: "SPM_INSUFFICIENT_LIQUIDITY",
    type: "error",
  },
  {
    inputs: [],
    name: "SPM_INSUFFICIENT_MINIMUM_LIQUIDITY_AMOUNT",
    type: "error",
  },
  {
    inputs: [],
    name: "SPM_INVALID_TOKEN_ID",
    type: "error",
  },
  {
    inputs: [],
    name: "SPM_ONLY_BURNABLE_WHEN_CLEARED",
    type: "error",
  },
  {
    inputs: [],
    name: "SPM_ONLY_PAIR_CAN_BURN",
    type: "error",
  },
  {
    inputs: [],
    name: "SPM_ONLY_PAIR_CAN_MINT",
    type: "error",
  },
  {
    inputs: [],
    name: "SPM_PAIR_NOT_EXIST",
    type: "error",
  },
  {
    inputs: [],
    name: "SPM_UNAUTHORIZED",
    type: "error",
  },
  {
    inputs: [],
    name: "SSB_ETH_TRANSFER_FAILED",
    type: "error",
  },
  {
    inputs: [],
    name: "SSB_INSUFFICIENT_AMOUNT",
    type: "error",
  },
  {
    inputs: [],
    name: "SSB_ONE_MORE_BLOCK_AT_LEAST",
    type: "error",
  },
  {
    inputs: [],
    name: "SSB_TOKEN_TRANSFER_FAILED",
    type: "error",
  },
  {
    inputs: [],
    name: "SSB_UNAUTHORIZED",
    type: "error",
  },
  {
    inputs: [],
    name: "STPF_PAIR_ALREADY_EXIST",
    type: "error",
  },
  {
    inputs: [],
    name: "STP_EXCEED_NFT_OUT_MAX",
    type: "error",
  },
  {
    inputs: [],
    name: "STP_FEE_OUT_OF_RANGE",
    type: "error",
  },
  {
    inputs: [],
    name: "STP_INSUFFICIENT_INPUT_AMOUNT",
    type: "error",
  },
  {
    inputs: [],
    name: "STP_INSUFFICIENT_LIQUIDITY",
    type: "error",
  },
  {
    inputs: [],
    name: "STP_INSUFFICIENT_LIQUIDITY_BURNED",
    type: "error",
  },
  {
    inputs: [],
    name: "STP_INSUFFICIENT_LIQUIDITY_MINTED",
    type: "error",
  },
  {
    inputs: [],
    name: "STP_INSUFFICIENT_MIN_FEE",
    type: "error",
  },
  {
    inputs: [],
    name: "STP_INSUFFICIENT_NFT_TO_WITHDRAW",
    type: "error",
  },
  {
    inputs: [],
    name: "STP_INSUFFICIENT_OUTPUT_AMOUNT",
    type: "error",
  },
  {
    inputs: [],
    name: "STP_INVALID_FEE",
    type: "error",
  },
  {
    inputs: [],
    name: "STP_INVALID_TO",
    type: "error",
  },
  {
    inputs: [],
    name: "STP_K",
    type: "error",
  },
  {
    inputs: [],
    name: "STP_SKIM_QUANTITY_MISMATCH",
    type: "error",
  },
  {
    inputs: [],
    name: "STP_UNAUTHORIZED",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "RegisterETH",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "collection",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "tokenIds",
        type: "uint256[]",
      },
    ],
    name: "RegisterNFTs",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "RegisterToken",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "WithdrawETH",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "collection",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "tokenIds",
        type: "uint256[]",
      },
    ],
    name: "WithdrawNFTs",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "WithdrawToken",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "collection",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "tokenIds",
        type: "uint256[]",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "batchRegisterNFTs",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "collection",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "tokenIds",
        type: "uint256[]",
      },
    ],
    name: "batchWithdrawNFTs",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "collections",
    outputs: [
      {
        internalType: "uint256",
        name: "blockNumber",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "eths",
    outputs: [
      {
        internalType: "uint256",
        name: "blockNumber",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_positionManager",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC721Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "positionManager",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "registerETH",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "registerToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "tokens",
    outputs: [
      {
        internalType: "uint256",
        name: "blockNumber",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawETH",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "withdrawToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506110e0806100206000396000f3fe6080604052600436106100ab5760003560e01c8063b4dfedd611610064578063b4dfedd614610233578063bec82c5a14610267578063c4d66de814610287578063c96e260e146102a7578063dec07588146102c7578063e086e5ec146102e757600080fd5b8063150b7a02146100b757806349a764cd14610100578063508493bc14610165578063791b98bc146101b957806389476069146101f1578063a43192511461021357600080fd5b366100b257005b600080fd5b3480156100c357600080fd5b506100e26100d2366004610ceb565b630a85bd0160e11b949350505050565b6040516001600160e01b031990911681526020015b60405180910390f35b34801561010c57600080fd5b5061014861011b366004610dab565b6035602090815260009283526040808420909152908252902080546001909101546001600160a01b031682565b604080519283526001600160a01b039091166020830152016100f7565b34801561017157600080fd5b506101a4610180366004610dd5565b60346020908152600092835260408084209091529082529020805460019091015482565b604080519283526020830191909152016100f7565b3480156101c557600080fd5b506036546101d9906001600160a01b031681565b6040516001600160a01b0390911681526020016100f7565b3480156101fd57600080fd5b5061021161020c366004610e08565b6102fc565b005b34801561021f57600080fd5b5061021161022e366004610e2a565b6104a4565b34801561023f57600080fd5b506101a461024e366004610e08565b6033602052600090815260409020805460019091015482565b34801561027357600080fd5b50610211610282366004610ecd565b61059f565b34801561029357600080fd5b506102116102a2366004610e08565b61074f565b3480156102b357600080fd5b506102116102c2366004610f1b565b610878565b3480156102d357600080fd5b506102116102e2366004610f79565b6109be565b3480156102f357600080fd5b50610211610ace565b610304610c2f565b6001600160a01b0381166000908152603460209081526040808320338452825291829020825180840190935280548084526001909101549183019190915243116103615760405163cd9b166560e01b815260040160405180910390fd5b600081602001511161038657604051634629842760e11b815260040160405180910390fd5b6001600160a01b03821660008181526034602090815260408083203380855290835281842084815560010184905591850151905163a9059cbb60e01b81526004810192909252602482015290919063a9059cbb906044016020604051808303816000875af11580156103fc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104209190610fac565b905080151560000361044557604051637e6f4c4d60e11b815260040160405180910390fd5b826001600160a01b0316336001600160a01b03167f037238854fe57fbf51f09946f854fc3916fe83938d6521f09bd05463839f1304846020015160405161048e91815260200190565b60405180910390a350506104a160018055565b50565b6036546001600160a01b031633146104cf5760405163d309f6e160e01b815260040160405180910390fd5b6104d7610c2f565b600082116104f857604051634629842760e11b815260040160405180910390fd5b6001600160a01b038116600090815260336020908152604091829020600101548251808401909352438352919081016105318584610fe4565b90526001600160a01b03831660008181526033602090815260409182902084518155938101516001909401939093555185815290917f0a722758dfd06ae7de52e4e85d24e0baa3a5aefd0f29ecd585ce7a4cab8971c9910160405180910390a25061059b60018055565b5050565b6105a7610c2f565b60005b81518110156106fa5760008282815181106105c7576105c7610ffc565b6020908102919091018101516001600160a01b038087166000908152603584526040808220848352855290819020815180830190925280548252600101549091169281018390529092509033146106315760405163d309f6e160e01b815260040160405180910390fd5b805143116106525760405163cd9b166560e01b815260040160405180910390fd5b6001600160a01b0385166000818152603560209081526040808320868452909152808220918255600190910180546001600160a01b031916905551632142170760e11b8152306004820152336024820152604481018490526342842e0e90606401600060405180830381600087803b1580156106cd57600080fd5b505af11580156106e1573d6000803e3d6000fd5b50505050505080806106f290611012565b9150506105aa565b50816001600160a01b0316336001600160a01b03167fcd9f1ded0cfdcfdbdcc49cec4285b1d6d6053cea04733542863549c2662d92378360405161073e919061102b565b60405180910390a361059b60018055565b600054610100900460ff161580801561076f5750600054600160ff909116105b806107895750303b158015610789575060005460ff166001145b6107f15760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084015b60405180910390fd5b6000805460ff191660011790558015610814576000805461ff0019166101001790555b603680546001600160a01b0319166001600160a01b038416179055801561059b576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15050565b6036546001600160a01b031633146108a35760405163d309f6e160e01b815260040160405180910390fd5b6108ab610c2f565b60005b8251811015610964576040518060400160405280438152602001836001600160a01b031681525060356000866001600160a01b03166001600160a01b03168152602001908152602001600020600085848151811061090e5761090e610ffc565b60209081029190910181015182528181019290925260400160002082518155910151600190910180546001600160a01b0319166001600160a01b039092169190911790558061095c81611012565b9150506108ae565b50826001600160a01b0316816001600160a01b03167ff02b359ab32e70474f86e5d987ba1599cd23980a6cbf2e18b49e98d061d6ea5a846040516109a8919061102b565b60405180910390a36109b960018055565b505050565b6036546001600160a01b031633146109e95760405163d309f6e160e01b815260040160405180910390fd5b6109f1610c2f565b60008211610a1257604051634629842760e11b815260040160405180910390fd5b6001600160a01b03808416600090815260346020908152604080832093851683529281529082902060010154825180840190935243835291908101610a578584610fe4565b90526001600160a01b0385811660008181526034602090815260408083209488168084529482529182902085518155948101516001909501949094555186815290927ff61532473c94377f32c2e507cc7e69b9388bc84d734fb12f2ebc936531432f75910160405180910390a3506109b960018055565b610ad6610c2f565b3360009081526033602090815260409182902082518084019093528054808452600190910154918301919091524311610b225760405163cd9b166560e01b815260040160405180910390fd5b6000816020015111610b4757604051634629842760e11b815260040160405180910390fd5b3360008181526033602090815260408083208381556001018390558482015181518481529283019182905292939291610b7f9161106f565b60006040518083038185875af1925050503d8060008114610bbc576040519150601f19603f3d011682016040523d82523d6000602084013e610bc1565b606091505b5090915050801515600003610be9576040516338525e5f60e01b815260040160405180910390fd5b60208083015160405190815233917f566e45b1c8057e725bf62796a7f1d37ae294393cab069725a09daddd1af98b79910160405180910390a25050610c2d60018055565b565b600260015403610c815760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016107e8565b6002600155565b80356001600160a01b0381168114610c9f57600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715610ce357610ce3610ca4565b604052919050565b60008060008060808587031215610d0157600080fd5b610d0a85610c88565b93506020610d19818701610c88565b935060408601359250606086013567ffffffffffffffff80821115610d3d57600080fd5b818801915088601f830112610d5157600080fd5b813581811115610d6357610d63610ca4565b610d75601f8201601f19168501610cba565b91508082528984828501011115610d8b57600080fd5b808484018584013760008482840101525080935050505092959194509250565b60008060408385031215610dbe57600080fd5b610dc783610c88565b946020939093013593505050565b60008060408385031215610de857600080fd5b610df183610c88565b9150610dff60208401610c88565b90509250929050565b600060208284031215610e1a57600080fd5b610e2382610c88565b9392505050565b60008060408385031215610e3d57600080fd5b82359150610dff60208401610c88565b600082601f830112610e5e57600080fd5b8135602067ffffffffffffffff821115610e7a57610e7a610ca4565b8160051b610e89828201610cba565b9283528481018201928281019087851115610ea357600080fd5b83870192505b84831015610ec257823582529183019190830190610ea9565b979650505050505050565b60008060408385031215610ee057600080fd5b610ee983610c88565b9150602083013567ffffffffffffffff811115610f0557600080fd5b610f1185828601610e4d565b9150509250929050565b600080600060608486031215610f3057600080fd5b610f3984610c88565b9250602084013567ffffffffffffffff811115610f5557600080fd5b610f6186828701610e4d565b925050610f7060408501610c88565b90509250925092565b600080600060608486031215610f8e57600080fd5b610f9784610c88565b925060208401359150610f7060408501610c88565b600060208284031215610fbe57600080fd5b81518015158114610e2357600080fd5b634e487b7160e01b600052601160045260246000fd5b60008219821115610ff757610ff7610fce565b500190565b634e487b7160e01b600052603260045260246000fd5b60006001820161102457611024610fce565b5060010190565b6020808252825182820181905260009190848201906040850190845b8181101561106357835183529284019291840191600101611047565b50909695505050505050565b6000825160005b818110156110905760208186018101518583015201611076565b8181111561109f576000828501525b50919091019291505056fea264697066735822122092786aeb6055acc2bdeefb2547a24434c5f55ba15ce7ee8db51cd0627a8d25b264736f6c634300080d0033";

export class SpeedBump__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<SpeedBump> {
    return super.deploy(overrides || {}) as Promise<SpeedBump>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): SpeedBump {
    return super.attach(address) as SpeedBump;
  }
  connect(signer: Signer): SpeedBump__factory {
    return super.connect(signer) as SpeedBump__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SpeedBumpInterface {
    return new utils.Interface(_abi) as SpeedBumpInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SpeedBump {
    return new Contract(address, _abi, signerOrProvider) as SpeedBump;
  }
}
