/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  RoyaltyManagement,
  RoyaltyManagementInterface,
} from "../RoyaltyManagement";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    inputs: [],
    name: "MAX_PROTOCOL_FEE_PERCENT",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ONE_PERCENT",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PERCENTAGE_PRECISION",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "POINT_FIVE_PERCENT",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "SCALE_FACTOR",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "collection",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "getRoyaltyRecipient",
    outputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isRoyaltySupported",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minRoyaltyFeePercent",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_operator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_fromTokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_toTokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "onERC3525Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC721Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "positionManager",
    outputs: [
      {
        internalType: "contract ISeacowsPositionManager",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "royaltyFeeManager",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "royaltyRegistry",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_percent",
        type: "uint256",
      },
    ],
    name: "setMinRoyaltyFeePercent",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "slot",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610b6d806100206000396000f3fe608060405234801561001057600080fd5b50600436106101365760003560e01c806387e4401f116100b8578063bb2eb4d21161007c578063bb2eb4d2146102a1578063ce4b5bbe146102a9578063e256888f146102b2578063e5f9e83b146102bb578063f78db9b8146102c4578063fc0c546a146102cc57600080fd5b806387e4401f146102495780639cc7f70814610251578063a015a3d814610264578063a11b071214610277578063a74d5f301461027f57600080fd5b80631a88bc66116100ff5780631a88bc66146101e45780631da8afb3146101ec5780636352211e146101f4578063791b98bc1461021f5780637de1e5361461023057600080fd5b80629ce20b1461013b57806301ffc9a7146101785780630c6bc62b1461019b578063150b7a02146101b057806318160ddd146101ce575b600080fd5b61015a6101493660046108d0565b629ce20b60e01b9695505050505050565b6040516001600160e01b031990911681526020015b60405180910390f35b61018b610186366004610971565b6102df565b604051901515815260200161016f565b6101ae6101a93660046109a2565b610330565b005b61015a6101be3660046109d1565b630a85bd0160e11b949350505050565b6101d66103a1565b60405190815260200161016f565b6101d661042f565b61018b610471565b6102076102023660046109a2565b610567565b6040516001600160a01b03909116815260200161016f565b6003546001600160a01b0316610207565b600054610207906201000090046001600160a01b031681565b6102076105e9565b6101d661025f3660046109a2565b61065e565b6102076102723660046109a2565b6106e0565b610207610867565b6102886103e881565b60405167ffffffffffffffff909116815260200161016f565b610288606481565b6101d660025481565b61028861271081565b6101d660045481565b610288603281565b600154610207906001600160a01b031681565b60006301ffc9a760e01b6001600160e01b03198316148061031057506001600160e01b03198216630a85bd0160e11b145b8061032a57506001600160e01b03198216629ce20b60e01b145b92915050565b6103386105e9565b6001600160a01b0316336001600160a01b03161461039c5760405162461bcd60e51b815260206004820152601c60248201527f526f79616c74794d616e6167656d656e743a20464f5242494444454e00000000604482015260640160405180910390fd5b600455565b60006103b56003546001600160a01b031690565b6001600160a01b03166388200bb96103cb61042f565b6040518263ffffffff1660e01b81526004016103e991815260200190565b602060405180830381865afa158015610406573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061042a9190610ab1565b905090565b60006104436003546001600160a01b031690565b60405163add21d2560e01b81523060048201526001600160a01b03919091169063add21d25906024016103e9565b60008061047c610867565b60005460405163de5488af60e01b81526001600160a01b03620100009092048216600482015291169063de5488af90602401602060405180830381865afa1580156104cb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104ef9190610aca565b6040516301ffc9a760e01b815263152a902d60e11b60048201529091506001600160a01b038216906301ffc9a790602401602060405180830381865afa15801561053d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105619190610ae7565b91505090565b600061057b6003546001600160a01b031690565b6001600160a01b0316636352211e836040518263ffffffff1660e01b81526004016105a891815260200190565b602060405180830381865afa1580156105c5573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061032a9190610aca565b60006105fd6003546001600160a01b031690565b6001600160a01b03166387e4401f6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561063a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061042a9190610aca565b60006106726003546001600160a01b031690565b6001600160a01b0316639cc7f708836040518263ffffffff1660e01b815260040161069f91815260200190565b602060405180830381865afa1580156106bc573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061032a9190610ab1565b6000806106eb610867565b6001600160a01b031614610862576000610703610867565b60005460405163de5488af60e01b81526001600160a01b03620100009092048216600482015291169063de5488af90602401602060405180830381865afa158015610752573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107769190610aca565b6040516301ffc9a760e01b815263152a902d60e11b60048201529091506001600160a01b038216906301ffc9a790602401602060405180830381865afa1580156107c4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107e89190610ae7565b156108605760405163152a902d60e11b815260048101849052600060248201526001600160a01b03821690632a55205a906044016040805180830381865afa158015610838573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061085c9190610b09565b5091505b505b919050565b600061087b6003546001600160a01b031690565b6001600160a01b031663a11b07126040518163ffffffff1660e01b8152600401602060405180830381865afa15801561063a573d6000803e3d6000fd5b6001600160a01b03811681146108cd57600080fd5b50565b60008060008060008060a087890312156108e957600080fd5b86356108f4816108b8565b9550602087013594506040870135935060608701359250608087013567ffffffffffffffff8082111561092657600080fd5b818901915089601f83011261093a57600080fd5b81358181111561094957600080fd5b8a602082850101111561095b57600080fd5b6020830194508093505050509295509295509295565b60006020828403121561098357600080fd5b81356001600160e01b03198116811461099b57600080fd5b9392505050565b6000602082840312156109b457600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b600080600080608085870312156109e757600080fd5b84356109f2816108b8565b93506020850135610a02816108b8565b925060408501359150606085013567ffffffffffffffff80821115610a2657600080fd5b818701915087601f830112610a3a57600080fd5b813581811115610a4c57610a4c6109bb565b604051601f8201601f19908116603f01168101908382118183101715610a7457610a746109bb565b816040528281528a6020848701011115610a8d57600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b600060208284031215610ac357600080fd5b5051919050565b600060208284031215610adc57600080fd5b815161099b816108b8565b600060208284031215610af957600080fd5b8151801515811461099b57600080fd5b60008060408385031215610b1c57600080fd5b8251610b27816108b8565b602093909301519294929350505056fea2646970667358221220dac7a9e9f85c06896bf830d4c7eac3c2f487588b0fbec8fc9781df716aaacbe764736f6c63430008120033";

export class RoyaltyManagement__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<RoyaltyManagement> {
    return super.deploy(overrides || {}) as Promise<RoyaltyManagement>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): RoyaltyManagement {
    return super.attach(address) as RoyaltyManagement;
  }
  connect(signer: Signer): RoyaltyManagement__factory {
    return super.connect(signer) as RoyaltyManagement__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RoyaltyManagementInterface {
    return new utils.Interface(_abi) as RoyaltyManagementInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RoyaltyManagement {
    return new Contract(address, _abi, signerOrProvider) as RoyaltyManagement;
  }
}
