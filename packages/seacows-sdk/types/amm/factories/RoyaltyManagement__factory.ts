/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  RoyaltyManagement,
  RoyaltyManagementInterface,
} from "../RoyaltyManagement";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    inputs: [],
    name: "MAX_PROTOCOL_FEE_PERCENT",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ONE_PERCENT",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PERCENTAGE_PRECISION",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "POINT_FIVE_PERCENT",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "collection",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "getRoyaltyRecipient",
    outputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isRoyaltySupported",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minRoyaltyFeePercent",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_operator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_fromTokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_toTokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "onERC3525Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC721Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "positionManager",
    outputs: [
      {
        internalType: "contract ISeacowsPositionManager",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "royaltyFeeManager",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "royaltyRegistry",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_percent",
        type: "uint256",
      },
    ],
    name: "setMinRoyaltyFeePercent",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "slot",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610b77806100206000396000f3fe608060405234801561001057600080fd5b506004361061012b5760003560e01c806387e4401f116100ad578063bb2eb4d211610071578063bb2eb4d214610296578063e256888f1461029e578063e5f9e83b146102a7578063f78db9b8146102b0578063fc0c546a146102b857600080fd5b806387e4401f1461023e5780639cc7f70814610246578063a015a3d814610259578063a11b07121461026c578063a74d5f301461027457600080fd5b80631a88bc66116100f45780631a88bc66146101d95780631da8afb3146101e15780636352211e146101e9578063791b98bc146102145780637de1e5361461022557600080fd5b80629ce20b1461013057806301ffc9a71461016d5780630c6bc62b14610190578063150b7a02146101a557806318160ddd146101c3575b600080fd5b61014f61013e3660046108da565b629ce20b60e01b9695505050505050565b6040516001600160e01b031990911681526020015b60405180910390f35b61018061017b36600461097b565b6102cb565b6040519015158152602001610164565b6101a361019e3660046109ac565b61031c565b005b61014f6101b33660046109db565b630a85bd0160e11b949350505050565b6101cb61038d565b604051908152602001610164565b6101cb61041b565b61018061045d565b6101fc6101f73660046109ac565b610571565b6040516001600160a01b039091168152602001610164565b6002546001600160a01b03166101fc565b6000546101fc906201000090046001600160a01b031681565b6101fc6105f3565b6101cb6102543660046109ac565b610668565b6101fc6102673660046109ac565b6106ea565b6101fc610871565b61027d6103e881565b60405167ffffffffffffffff9091168152602001610164565b61027d606481565b61027d61271081565b6101cb60035481565b61027d603281565b6001546101fc906001600160a01b031681565b60006301ffc9a760e01b6001600160e01b0319831614806102fc57506001600160e01b03198216630a85bd0160e11b145b8061031657506001600160e01b03198216629ce20b60e01b145b92915050565b6103246105f3565b6001600160a01b0316336001600160a01b0316146103885760405162461bcd60e51b815260206004820152601c60248201527f526f79616c74794d616e6167656d656e743a20464f5242494444454e00000000604482015260640160405180910390fd5b600355565b60006103a16002546001600160a01b031690565b6001600160a01b03166388200bb96103b761041b565b6040518263ffffffff1660e01b81526004016103d591815260200190565b602060405180830381865afa1580156103f2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104169190610abb565b905090565b600061042f6002546001600160a01b031690565b60405163add21d2560e01b81523060048201526001600160a01b03919091169063add21d25906024016103d5565b600080610468610871565b6001600160a01b03161461056b576000610480610871565b60005460405163de5488af60e01b81526001600160a01b03620100009092048216600482015291169063de5488af90602401602060405180830381865afa1580156104cf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104f39190610ad4565b6040516301ffc9a760e01b815263152a902d60e11b60048201529091506001600160a01b038216906301ffc9a790602401602060405180830381865afa158015610541573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105659190610af1565b91505090565b50600090565b60006105856002546001600160a01b031690565b6001600160a01b0316636352211e836040518263ffffffff1660e01b81526004016105b291815260200190565b602060405180830381865afa1580156105cf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103169190610ad4565b60006106076002546001600160a01b031690565b6001600160a01b03166387e4401f6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610644573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104169190610ad4565b600061067c6002546001600160a01b031690565b6001600160a01b0316639cc7f708836040518263ffffffff1660e01b81526004016106a991815260200190565b602060405180830381865afa1580156106c6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103169190610abb565b6000806106f5610871565b6001600160a01b03161461086c57600061070d610871565b60005460405163de5488af60e01b81526001600160a01b03620100009092048216600482015291169063de5488af90602401602060405180830381865afa15801561075c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107809190610ad4565b6040516301ffc9a760e01b815263152a902d60e11b60048201529091506001600160a01b038216906301ffc9a790602401602060405180830381865afa1580156107ce573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107f29190610af1565b1561086a5760405163152a902d60e11b815260048101849052600060248201526001600160a01b03821690632a55205a906044016040805180830381865afa158015610842573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108669190610b13565b5091505b505b919050565b60006108856002546001600160a01b031690565b6001600160a01b031663a11b07126040518163ffffffff1660e01b8152600401602060405180830381865afa158015610644573d6000803e3d6000fd5b6001600160a01b03811681146108d757600080fd5b50565b60008060008060008060a087890312156108f357600080fd5b86356108fe816108c2565b9550602087013594506040870135935060608701359250608087013567ffffffffffffffff8082111561093057600080fd5b818901915089601f83011261094457600080fd5b81358181111561095357600080fd5b8a602082850101111561096557600080fd5b6020830194508093505050509295509295509295565b60006020828403121561098d57600080fd5b81356001600160e01b0319811681146109a557600080fd5b9392505050565b6000602082840312156109be57600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b600080600080608085870312156109f157600080fd5b84356109fc816108c2565b93506020850135610a0c816108c2565b925060408501359150606085013567ffffffffffffffff80821115610a3057600080fd5b818701915087601f830112610a4457600080fd5b813581811115610a5657610a566109c5565b604051601f8201601f19908116603f01168101908382118183101715610a7e57610a7e6109c5565b816040528281528a6020848701011115610a9757600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b600060208284031215610acd57600080fd5b5051919050565b600060208284031215610ae657600080fd5b81516109a5816108c2565b600060208284031215610b0357600080fd5b815180151581146109a557600080fd5b60008060408385031215610b2657600080fd5b8251610b31816108c2565b602093909301519294929350505056fea26469706673582212205c3cde48ea977ebc0a8dd118a460ad2b6ab0a4e71863d9299dc72a3beb6295b264736f6c63430008120033";

export class RoyaltyManagement__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<RoyaltyManagement> {
    return super.deploy(overrides || {}) as Promise<RoyaltyManagement>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): RoyaltyManagement {
    return super.attach(address) as RoyaltyManagement;
  }
  connect(signer: Signer): RoyaltyManagement__factory {
    return super.connect(signer) as RoyaltyManagement__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RoyaltyManagementInterface {
    return new utils.Interface(_abi) as RoyaltyManagementInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RoyaltyManagement {
    return new Contract(address, _abi, signerOrProvider) as RoyaltyManagement;
  }
}
