/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  SeacowsRewarder,
  SeacowsRewarderInterface,
} from "../SeacowsRewarder";

const _abi = [
  {
    inputs: [],
    name: "FM_NON_FEE_MANAGER",
    type: "error",
  },
  {
    inputs: [],
    name: "FM_NON_ROYALTY_FEE_MANAGER",
    type: "error",
  },
  {
    inputs: [],
    name: "RM_NON_ROYALTY_FEE_MANAGER",
    type: "error",
  },
  {
    inputs: [],
    name: "SPM_BELOW_NFT_OUT_MIN_CONSTRAINT",
    type: "error",
  },
  {
    inputs: [],
    name: "SPM_BELOW_TOKEN_OUT_MIN_CONSTRAINT",
    type: "error",
  },
  {
    inputs: [],
    name: "SPM_ETH_TRANSFER_FAILED",
    type: "error",
  },
  {
    inputs: [],
    name: "SPM_EXPIRED",
    type: "error",
  },
  {
    inputs: [],
    name: "SPM_INSUFFICIENT_AMOUNT",
    type: "error",
  },
  {
    inputs: [],
    name: "SPM_INSUFFICIENT_LIQUIDITY",
    type: "error",
  },
  {
    inputs: [],
    name: "SPM_INSUFFICIENT_MINIMUM_LIQUIDITY_AMOUNT",
    type: "error",
  },
  {
    inputs: [],
    name: "SPM_INVALID_TOKEN_ID",
    type: "error",
  },
  {
    inputs: [],
    name: "SPM_ONLY_BURNABLE_WHEN_CLEARED",
    type: "error",
  },
  {
    inputs: [],
    name: "SPM_ONLY_PAIR_CAN_BURN",
    type: "error",
  },
  {
    inputs: [],
    name: "SPM_ONLY_PAIR_CAN_MINT",
    type: "error",
  },
  {
    inputs: [],
    name: "SPM_ONLY_POSITION_MANAGER",
    type: "error",
  },
  {
    inputs: [],
    name: "SPM_PAIR_NOT_EXIST",
    type: "error",
  },
  {
    inputs: [],
    name: "SPM_UNAUTHORIZED",
    type: "error",
  },
  {
    inputs: [],
    name: "SSB_ETH_TRANSFER_FAILED",
    type: "error",
  },
  {
    inputs: [],
    name: "SSB_INSUFFICIENT_AMOUNT",
    type: "error",
  },
  {
    inputs: [],
    name: "SSB_ONE_MORE_BLOCK_AT_LEAST",
    type: "error",
  },
  {
    inputs: [],
    name: "SSB_TOKEN_TRANSFER_FAILED",
    type: "error",
  },
  {
    inputs: [],
    name: "SSB_UNAUTHORIZED",
    type: "error",
  },
  {
    inputs: [],
    name: "STPF_PAIR_ALREADY_EXIST",
    type: "error",
  },
  {
    inputs: [],
    name: "STP_EXCEED_NFT_OUT_MAX",
    type: "error",
  },
  {
    inputs: [],
    name: "STP_FEE_OUT_OF_RANGE",
    type: "error",
  },
  {
    inputs: [],
    name: "STP_INSUFFICIENT_INPUT_AMOUNT",
    type: "error",
  },
  {
    inputs: [],
    name: "STP_INSUFFICIENT_LIQUIDITY",
    type: "error",
  },
  {
    inputs: [],
    name: "STP_INSUFFICIENT_LIQUIDITY_BURNED",
    type: "error",
  },
  {
    inputs: [],
    name: "STP_INSUFFICIENT_LIQUIDITY_MINTED",
    type: "error",
  },
  {
    inputs: [],
    name: "STP_INSUFFICIENT_MIN_FEE",
    type: "error",
  },
  {
    inputs: [],
    name: "STP_INSUFFICIENT_NFT_TO_WITHDRAW",
    type: "error",
  },
  {
    inputs: [],
    name: "STP_INSUFFICIENT_OUTPUT_AMOUNT",
    type: "error",
  },
  {
    inputs: [],
    name: "STP_INVALID_FEE",
    type: "error",
  },
  {
    inputs: [],
    name: "STP_INVALID_TO",
    type: "error",
  },
  {
    inputs: [],
    name: "STP_K",
    type: "error",
  },
  {
    inputs: [],
    name: "STP_OVERFLOW",
    type: "error",
  },
  {
    inputs: [],
    name: "STP_SKIM_QUANTITY_MISMATCH",
    type: "error",
  },
  {
    inputs: [],
    name: "STP_UNAUTHORIZED",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "fee",
        type: "uint256",
      },
    ],
    name: "CollectFee",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    inputs: [],
    name: "ACC_REWARD_PER_SHARE_PRECISION",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_PROTOCOL_FEE_PERCENT",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ONE_PERCENT",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PERCENTAGE_PRECISION",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "POINT_FIVE_PERCENT",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "accRewardPerShare",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "collect",
    outputs: [
      {
        internalType: "uint256",
        name: "_fee",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "collection",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feeBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "getPendingFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastFeeBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_operator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_fromTokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_toTokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "onERC3525Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC721Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "positionInfos",
    outputs: [
      {
        internalType: "uint256",
        name: "feeDebt",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "unclaimedFee",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "positionManager",
    outputs: [
      {
        internalType: "contract ISeacowsPositionManager",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "slot",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "updatePositionFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "updatePositionFeeDebt",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "updateSwapFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610bfa806100206000396000f3fe608060405234801561001057600080fd5b50600436106101575760003560e01c80637de1e536116100c3578063c0463ac51161007c578063c0463ac514610307578063ce3f865f1461031a578063e256888f1461032d578063f78db9b814610336578063f88638981461033e578063fc0c546a1461035157600080fd5b80637de1e5361461029f578063939d6237146102b85780639cc7f708146102c1578063a1cb5a8a146102d4578063a74d5f30146102dd578063bb2eb4d2146102ff57600080fd5b80631a88bc66116101155780631a88bc66146102365780633c97d5ae1461023e57806354fb39211461024757806360b71d4e1461025a5780636352211e14610263578063791b98bc1461028e57600080fd5b80629ce20b1461015c57806301ffc9a7146101995780630c472afd146101bc578063150b7a02146101c657806317893e3c146101e457806318160ddd14610220575b600080fd5b61017b61016a366004610916565b629ce20b60e01b9695505050505050565b6040516001600160e01b031990911681526020015b60405180910390f35b6101ac6101a73660046109b7565b610364565b6040519015158152602001610190565b6101c46103b5565b005b61017b6101d43660046109fe565b630a85bd0160e11b949350505050565b61020b6101f2366004610ade565b6006602052600090815260409020805460019091015482565b60408051928352602083019190915201610190565b610228610420565b604051908152602001610190565b6102286104ae565b61022861271081565b6101c4610255366004610ade565b6104f0565b61022860045481565b610276610271366004610ade565b610590565b6040516001600160a01b039091168152602001610190565b6002546001600160a01b0316610276565b600054610276906201000090046001600160a01b031681565b61022860035481565b6102286102cf366004610ade565b610612565b61022860055481565b6102e66103e881565b60405167ffffffffffffffff9091168152602001610190565b6102e6606481565b6101c4610315366004610ade565b610694565b610228610328366004610ade565b6106fb565b6102e661271081565b6102e6603281565b61022861034c366004610ade565b610862565b600154610276906001600160a01b031681565b60006301ffc9a760e01b6001600160e01b03198316148061039557506001600160e01b03198216630a85bd0160e11b145b806103af57506001600160e01b03198216629ce20b60e01b145b92915050565b60006103bf610420565b905060055460045414806103d1575080155b156103d95750565b806127106005546004546103ed9190610b0d565b6103f79190610b20565b6104019190610b37565b600360008282546104129190610b59565b909155505060045460055550565b60006104346002546001600160a01b031690565b6001600160a01b03166388200bb961044a6104ae565b6040518263ffffffff1660e01b815260040161046891815260200190565b602060405180830381865afa158015610485573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104a99190610b6c565b905090565b60006104c26002546001600160a01b031690565b60405163add21d2560e01b81523060048201526001600160a01b03919091169063add21d2590602401610468565b6002546001600160a01b0316331461051b5760405163214f500360e01b815260040160405180910390fd5b60008181526006602052604081209061053383610612565b9050801561058b5760008260000154612710600354846105539190610b20565b61055d9190610b37565b6105679190610b0d565b9050801561058957808360010160008282546105839190610b59565b90915550505b505b505050565b60006105a46002546001600160a01b031690565b6001600160a01b0316636352211e836040518263ffffffff1660e01b81526004016105d191815260200190565b602060405180830381865afa1580156105ee573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103af9190610b85565b60006106266002546001600160a01b031690565b6001600160a01b0316639cc7f708836040518263ffffffff1660e01b815260040161065391815260200190565b602060405180830381865afa158015610670573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103af9190610b6c565b6002546001600160a01b031633146106bf5760405163214f500360e01b815260040160405180910390fd5b6000818152600660205260408120906106d783610612565b9050612710600354826106ea9190610b20565b6106f49190610b37565b9091555050565b60006107056103b5565b600061071083610862565b60008481526006602052604081206001810191909155600354919250906127109061073a86610612565b6107449190610b20565b61074e9190610b37565b8155600454821161075f5781610763565b6004545b925082600560008282546107779190610b0d565b9250508190555082600460008282546107909190610b0d565b90915550506001546001600160a01b031663a9059cbb6107af86610590565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602481018690526044016020604051808303816000875af11580156107fc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108209190610ba2565b50837f38436c42bcfd74414acafc159a381bf74b9880bc4c1c9f922686fc7161d9c7ad8460405161085391815260200190565b60405180910390a25050919050565b6000818152600660205260408120600354600554600454146108ba57610886610420565b6127106005546004546108999190610b0d565b6108a39190610b20565b6108ad9190610b37565b6108b79082610b59565b90505b8154612710826108c987610612565b6108d39190610b20565b6108dd9190610b37565b83600101546108ec9190610b59565b6108f69190610b0d565b949350505050565b6001600160a01b038116811461091357600080fd5b50565b60008060008060008060a0878903121561092f57600080fd5b863561093a816108fe565b9550602087013594506040870135935060608701359250608087013567ffffffffffffffff8082111561096c57600080fd5b818901915089601f83011261098057600080fd5b81358181111561098f57600080fd5b8a60208285010111156109a157600080fd5b6020830194508093505050509295509295509295565b6000602082840312156109c957600080fd5b81356001600160e01b0319811681146109e157600080fd5b9392505050565b634e487b7160e01b600052604160045260246000fd5b60008060008060808587031215610a1457600080fd5b8435610a1f816108fe565b93506020850135610a2f816108fe565b925060408501359150606085013567ffffffffffffffff80821115610a5357600080fd5b818701915087601f830112610a6757600080fd5b813581811115610a7957610a796109e8565b604051601f8201601f19908116603f01168101908382118183101715610aa157610aa16109e8565b816040528281528a6020848701011115610aba57600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b600060208284031215610af057600080fd5b5035919050565b634e487b7160e01b600052601160045260246000fd5b818103818111156103af576103af610af7565b80820281158282048414176103af576103af610af7565b600082610b5457634e487b7160e01b600052601260045260246000fd5b500490565b808201808211156103af576103af610af7565b600060208284031215610b7e57600080fd5b5051919050565b600060208284031215610b9757600080fd5b81516109e1816108fe565b600060208284031215610bb457600080fd5b815180151581146109e157600080fdfea26469706673582212204faeb896f42d2324d459d825a60684757d30e07ba23aa5b6d885f0fa295fbc3f64736f6c63430008120033";

export class SeacowsRewarder__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<SeacowsRewarder> {
    return super.deploy(overrides || {}) as Promise<SeacowsRewarder>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): SeacowsRewarder {
    return super.attach(address) as SeacowsRewarder;
  }
  connect(signer: Signer): SeacowsRewarder__factory {
    return super.connect(signer) as SeacowsRewarder__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SeacowsRewarderInterface {
    return new utils.Interface(_abi) as SeacowsRewarderInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SeacowsRewarder {
    return new Contract(address, _abi, signerOrProvider) as SeacowsRewarder;
  }
}
