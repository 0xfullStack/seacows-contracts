/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  SeacowsRewarder,
  SeacowsRewarderInterface,
} from "../SeacowsRewarder";

const _abi = [
  {
    inputs: [],
    name: "FM_NON_FEE_MANAGER",
    type: "error",
  },
  {
    inputs: [],
    name: "FM_NON_ROYALTY_FEE_MANAGER",
    type: "error",
  },
  {
    inputs: [],
    name: "RM_NON_ROYALTY_FEE_MANAGER",
    type: "error",
  },
  {
    inputs: [],
    name: "SPMD_ONLY_POSITION_MANAGER",
    type: "error",
  },
  {
    inputs: [],
    name: "SPMD_PAUSED",
    type: "error",
  },
  {
    inputs: [],
    name: "SPM_BELOW_NFT_OUT_MIN_CONSTRAINT",
    type: "error",
  },
  {
    inputs: [],
    name: "SPM_BELOW_TOKEN_OUT_MIN_CONSTRAINT",
    type: "error",
  },
  {
    inputs: [],
    name: "SPM_ETH_TRANSFER_FAILED",
    type: "error",
  },
  {
    inputs: [],
    name: "SPM_EXPIRED",
    type: "error",
  },
  {
    inputs: [],
    name: "SPM_INSUFFICIENT_AMOUNT",
    type: "error",
  },
  {
    inputs: [],
    name: "SPM_INSUFFICIENT_LIQUIDITY",
    type: "error",
  },
  {
    inputs: [],
    name: "SPM_INSUFFICIENT_MINIMUM_LIQUIDITY_AMOUNT",
    type: "error",
  },
  {
    inputs: [],
    name: "SPM_INVALID_TOKEN_ID",
    type: "error",
  },
  {
    inputs: [],
    name: "SPM_ONLY_BURNABLE_WHEN_CLEARED",
    type: "error",
  },
  {
    inputs: [],
    name: "SPM_ONLY_PAIR_CAN_BURN",
    type: "error",
  },
  {
    inputs: [],
    name: "SPM_ONLY_PAIR_CAN_MINT",
    type: "error",
  },
  {
    inputs: [],
    name: "SPM_PAIR_NOT_EXIST",
    type: "error",
  },
  {
    inputs: [],
    name: "SPM_UNAUTHORIZED",
    type: "error",
  },
  {
    inputs: [],
    name: "SSB_ETH_TRANSFER_FAILED",
    type: "error",
  },
  {
    inputs: [],
    name: "SSB_INSUFFICIENT_AMOUNT",
    type: "error",
  },
  {
    inputs: [],
    name: "SSB_ONE_MORE_BLOCK_AT_LEAST",
    type: "error",
  },
  {
    inputs: [],
    name: "SSB_TOKEN_TRANSFER_FAILED",
    type: "error",
  },
  {
    inputs: [],
    name: "SSB_UNAUTHORIZED",
    type: "error",
  },
  {
    inputs: [],
    name: "STPF_PAIR_ALREADY_EXIST",
    type: "error",
  },
  {
    inputs: [],
    name: "STP_EXCEED_NFT_OUT_MAX",
    type: "error",
  },
  {
    inputs: [],
    name: "STP_FEE_OUT_OF_RANGE",
    type: "error",
  },
  {
    inputs: [],
    name: "STP_INSUFFICIENT_INPUT_AMOUNT",
    type: "error",
  },
  {
    inputs: [],
    name: "STP_INSUFFICIENT_LIQUIDITY",
    type: "error",
  },
  {
    inputs: [],
    name: "STP_INSUFFICIENT_LIQUIDITY_BURNED",
    type: "error",
  },
  {
    inputs: [],
    name: "STP_INSUFFICIENT_LIQUIDITY_MINTED",
    type: "error",
  },
  {
    inputs: [],
    name: "STP_INSUFFICIENT_MIN_FEE",
    type: "error",
  },
  {
    inputs: [],
    name: "STP_INSUFFICIENT_NFT_TO_WITHDRAW",
    type: "error",
  },
  {
    inputs: [],
    name: "STP_INSUFFICIENT_OUTPUT_AMOUNT",
    type: "error",
  },
  {
    inputs: [],
    name: "STP_INVALID_FEE",
    type: "error",
  },
  {
    inputs: [],
    name: "STP_INVALID_TO",
    type: "error",
  },
  {
    inputs: [],
    name: "STP_K",
    type: "error",
  },
  {
    inputs: [],
    name: "STP_SKIM_QUANTITY_MISMATCH",
    type: "error",
  },
  {
    inputs: [],
    name: "STP_UNAUTHORIZED",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "fee",
        type: "uint256",
      },
    ],
    name: "CollectFee",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    inputs: [],
    name: "ACC_REWARD_PER_SHARE_PRECISION",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_PROTOCOL_FEE_PERCENT",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ONE_PERCENT",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PERCENTAGE_PRECISION",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "POINT_FIVE_PERCENT",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "accRewardPerShare",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "collect",
    outputs: [
      {
        internalType: "uint256",
        name: "_fee",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "collection",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feeBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "getPendingFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastFeeBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_operator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_fromTokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_toTokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "onERC3525Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC721Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "positionInfos",
    outputs: [
      {
        internalType: "uint256",
        name: "feeDebt",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "unclaimedFee",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "positionManager",
    outputs: [
      {
        internalType: "contract ISeacowsPositionManager",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "slot",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "updatePositionFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "updatePositionFeeDebt",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "updateSwapFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610ca3806100206000396000f3fe608060405234801561001057600080fd5b50600436106101725760003560e01c8063791b98bc116100de578063bb2eb4d211610097578063e256888f11610071578063e256888f14610350578063f78db9b814610359578063f886389814610361578063fc0c546a1461037457600080fd5b8063bb2eb4d214610322578063c0463ac51461032a578063ce3f865f1461033d57600080fd5b8063791b98bc146102b15780637de1e536146102c2578063939d6237146102db5780639cc7f708146102e4578063a1cb5a8a146102f7578063a74d5f301461030057600080fd5b80631a88bc66116101305780631a88bc66146102515780633c97d5ae1461025957806354fb3921146102625780635c975abb1461027557806360b71d4e1461027d5780636352211e1461028657600080fd5b80629ce20b1461017757806301ffc9a7146101b45780630c472afd146101d7578063150b7a02146101e157806317893e3c146101ff57806318160ddd1461023b575b600080fd5b6101966101853660046109ae565b629ce20b60e01b9695505050505050565b6040516001600160e01b031990911681526020015b60405180910390f35b6101c76101c2366004610a4f565b610387565b60405190151581526020016101ab565b6101df6103d8565b005b6101966101ef366004610a96565b630a85bd0160e11b949350505050565b61022661020d366004610b76565b6006602052600090815260409020805460019091015482565b604080519283526020830191909152016101ab565b610243610443565b6040519081526020016101ab565b6102436104d1565b61024361271081565b6101df610270366004610b76565b610513565b6101c76105b3565b61024360045481565b610299610294366004610b76565b610628565b6040516001600160a01b0390911681526020016101ab565b6002546001600160a01b0316610299565b600054610299906201000090046001600160a01b031681565b61024360035481565b6102436102f2366004610b76565b6106aa565b61024360055481565b6103096103e881565b60405167ffffffffffffffff90911681526020016101ab565b610309606481565b6101df610338366004610b76565b61072c565b61024361034b366004610b76565b610793565b61030961271081565b610309603281565b61024361036f366004610b76565b6108fa565b600154610299906001600160a01b031681565b60006301ffc9a760e01b6001600160e01b0319831614806103b857506001600160e01b03198216630a85bd0160e11b145b806103d257506001600160e01b03198216629ce20b60e01b145b92915050565b60006103e2610443565b905060055460045414806103f4575080155b156103fc5750565b806127106005546004546104109190610ba5565b61041a9190610bbc565b6104249190610bdb565b600360008282546104359190610bfd565b909155505060045460055550565b60006104576002546001600160a01b031690565b6001600160a01b03166388200bb961046d6104d1565b6040518263ffffffff1660e01b815260040161048b91815260200190565b602060405180830381865afa1580156104a8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104cc9190610c15565b905090565b60006104e56002546001600160a01b031690565b60405163add21d2560e01b81523060048201526001600160a01b03919091169063add21d259060240161048b565b6002546001600160a01b0316331461053e5760405163975e14bb60e01b815260040160405180910390fd5b600081815260066020526040812090610556836106aa565b905080156105ae5760008260000154612710600354846105769190610bbc565b6105809190610bdb565b61058a9190610ba5565b905080156105ac57808360010160008282546105a69190610bfd565b90915550505b505b505050565b60006105c76002546001600160a01b031690565b6001600160a01b031663b187bd266040518163ffffffff1660e01b8152600401602060405180830381865afa158015610604573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104cc9190610c2e565b600061063c6002546001600160a01b031690565b6001600160a01b0316636352211e836040518263ffffffff1660e01b815260040161066991815260200190565b602060405180830381865afa158015610686573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103d29190610c50565b60006106be6002546001600160a01b031690565b6001600160a01b0316639cc7f708836040518263ffffffff1660e01b81526004016106eb91815260200190565b602060405180830381865afa158015610708573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103d29190610c15565b6002546001600160a01b031633146107575760405163975e14bb60e01b815260040160405180910390fd5b60008181526006602052604081209061076f836106aa565b9050612710600354826107829190610bbc565b61078c9190610bdb565b9091555050565b600061079d6103d8565b60006107a8836108fa565b6000848152600660205260408120600181019190915560035491925090612710906107d2866106aa565b6107dc9190610bbc565b6107e69190610bdb565b815560045482116107f757816107fb565b6004545b9250826005600082825461080f9190610ba5565b9250508190555082600460008282546108289190610ba5565b90915550506001546001600160a01b031663a9059cbb61084786610628565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602481018690526044016020604051808303816000875af1158015610894573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108b89190610c2e565b50837f38436c42bcfd74414acafc159a381bf74b9880bc4c1c9f922686fc7161d9c7ad846040516108eb91815260200190565b60405180910390a25050919050565b6000818152600660205260408120600354600554600454146109525761091e610443565b6127106005546004546109319190610ba5565b61093b9190610bbc565b6109459190610bdb565b61094f9082610bfd565b90505b815461271082610961876106aa565b61096b9190610bbc565b6109759190610bdb565b83600101546109849190610bfd565b61098e9190610ba5565b949350505050565b6001600160a01b03811681146109ab57600080fd5b50565b60008060008060008060a087890312156109c757600080fd5b86356109d281610996565b9550602087013594506040870135935060608701359250608087013567ffffffffffffffff80821115610a0457600080fd5b818901915089601f830112610a1857600080fd5b813581811115610a2757600080fd5b8a6020828501011115610a3957600080fd5b6020830194508093505050509295509295509295565b600060208284031215610a6157600080fd5b81356001600160e01b031981168114610a7957600080fd5b9392505050565b634e487b7160e01b600052604160045260246000fd5b60008060008060808587031215610aac57600080fd5b8435610ab781610996565b93506020850135610ac781610996565b925060408501359150606085013567ffffffffffffffff80821115610aeb57600080fd5b818701915087601f830112610aff57600080fd5b813581811115610b1157610b11610a80565b604051601f8201601f19908116603f01168101908382118183101715610b3957610b39610a80565b816040528281528a6020848701011115610b5257600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b600060208284031215610b8857600080fd5b5035919050565b634e487b7160e01b600052601160045260246000fd5b600082821015610bb757610bb7610b8f565b500390565b6000816000190483118215151615610bd657610bd6610b8f565b500290565b600082610bf857634e487b7160e01b600052601260045260246000fd5b500490565b60008219821115610c1057610c10610b8f565b500190565b600060208284031215610c2757600080fd5b5051919050565b600060208284031215610c4057600080fd5b81518015158114610a7957600080fd5b600060208284031215610c6257600080fd5b8151610a798161099656fea26469706673582212208ce476c76c208ea7669816896f41b7105a957ae27add01341e37b9fba70408df64736f6c634300080d0033";

export class SeacowsRewarder__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<SeacowsRewarder> {
    return super.deploy(overrides || {}) as Promise<SeacowsRewarder>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): SeacowsRewarder {
    return super.attach(address) as SeacowsRewarder;
  }
  connect(signer: Signer): SeacowsRewarder__factory {
    return super.connect(signer) as SeacowsRewarder__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SeacowsRewarderInterface {
    return new utils.Interface(_abi) as SeacowsRewarderInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SeacowsRewarder {
    return new Contract(address, _abi, signerOrProvider) as SeacowsRewarder;
  }
}
