/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  SeacowsRewarder,
  SeacowsRewarderInterface,
} from "../SeacowsRewarder";

const _abi = [
  {
    inputs: [],
    name: "FM_NON_FEE_MANAGER",
    type: "error",
  },
  {
    inputs: [],
    name: "FM_NON_ROYALTY_FEE_MANAGER",
    type: "error",
  },
  {
    inputs: [],
    name: "RM_NON_ROYALTY_FEE_MANAGER",
    type: "error",
  },
  {
    inputs: [],
    name: "SPMD_ONLY_POSITION_MANAGER",
    type: "error",
  },
  {
    inputs: [],
    name: "SPMD_PAUSED",
    type: "error",
  },
  {
    inputs: [],
    name: "SPM_BELOW_NFT_OUT_MIN_CONSTRAINT",
    type: "error",
  },
  {
    inputs: [],
    name: "SPM_BELOW_TOKEN_OUT_MIN_CONSTRAINT",
    type: "error",
  },
  {
    inputs: [],
    name: "SPM_ETH_TRANSFER_FAILED",
    type: "error",
  },
  {
    inputs: [],
    name: "SPM_EXPIRED",
    type: "error",
  },
  {
    inputs: [],
    name: "SPM_INSUFFICIENT_AMOUNT",
    type: "error",
  },
  {
    inputs: [],
    name: "SPM_INSUFFICIENT_LIQUIDITY",
    type: "error",
  },
  {
    inputs: [],
    name: "SPM_INSUFFICIENT_MINIMUM_LIQUIDITY_AMOUNT",
    type: "error",
  },
  {
    inputs: [],
    name: "SPM_INVALID_TOKEN_ID",
    type: "error",
  },
  {
    inputs: [],
    name: "SPM_ONLY_BURNABLE_WHEN_CLEARED",
    type: "error",
  },
  {
    inputs: [],
    name: "SPM_ONLY_PAIR_CAN_BURN",
    type: "error",
  },
  {
    inputs: [],
    name: "SPM_ONLY_PAIR_CAN_MINT",
    type: "error",
  },
  {
    inputs: [],
    name: "SPM_PAIR_NOT_EXIST",
    type: "error",
  },
  {
    inputs: [],
    name: "SPM_TOKEN_TRANSFER_FAILED",
    type: "error",
  },
  {
    inputs: [],
    name: "SPM_UNAUTHORIZED",
    type: "error",
  },
  {
    inputs: [],
    name: "SSB_ETH_TRANSFER_FAILED",
    type: "error",
  },
  {
    inputs: [],
    name: "SSB_INSUFFICIENT_AMOUNT",
    type: "error",
  },
  {
    inputs: [],
    name: "SSB_ONE_MORE_BLOCK_AT_LEAST",
    type: "error",
  },
  {
    inputs: [],
    name: "SSB_UNAUTHORIZED",
    type: "error",
  },
  {
    inputs: [],
    name: "STPF_PAIR_ALREADY_EXIST",
    type: "error",
  },
  {
    inputs: [],
    name: "STP_EXCEED_NFT_OUT_MAX",
    type: "error",
  },
  {
    inputs: [],
    name: "STP_FEE_OUT_OF_RANGE",
    type: "error",
  },
  {
    inputs: [],
    name: "STP_INSUFFICIENT_INPUT_AMOUNT",
    type: "error",
  },
  {
    inputs: [],
    name: "STP_INSUFFICIENT_LIQUIDITY",
    type: "error",
  },
  {
    inputs: [],
    name: "STP_INSUFFICIENT_LIQUIDITY_BURNED",
    type: "error",
  },
  {
    inputs: [],
    name: "STP_INSUFFICIENT_LIQUIDITY_MINTED",
    type: "error",
  },
  {
    inputs: [],
    name: "STP_INSUFFICIENT_MIN_FEE",
    type: "error",
  },
  {
    inputs: [],
    name: "STP_INSUFFICIENT_NFT_TO_WITHDRAW",
    type: "error",
  },
  {
    inputs: [],
    name: "STP_INSUFFICIENT_OUTPUT_AMOUNT",
    type: "error",
  },
  {
    inputs: [],
    name: "STP_INVALID_FEE",
    type: "error",
  },
  {
    inputs: [],
    name: "STP_INVALID_TO",
    type: "error",
  },
  {
    inputs: [],
    name: "STP_K",
    type: "error",
  },
  {
    inputs: [],
    name: "STP_SKIM_QUANTITY_MISMATCH",
    type: "error",
  },
  {
    inputs: [],
    name: "STP_UNAUTHORIZED",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "fee",
        type: "uint256",
      },
    ],
    name: "CollectFee",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    inputs: [],
    name: "ACC_REWARD_PER_SHARE_PRECISION",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_PROTOCOL_FEE_PERCENT",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ONE_PERCENT",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PERCENTAGE_PRECISION",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "POINT_FIVE_PERCENT",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "accRewardPerShare",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "collect",
    outputs: [
      {
        internalType: "uint256",
        name: "_fee",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "collection",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feeBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "getPendingFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastFeeBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_operator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_fromTokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_toTokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "onERC3525Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC721Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "positionInfos",
    outputs: [
      {
        internalType: "uint256",
        name: "feeDebt",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "unclaimedFee",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "positionManager",
    outputs: [
      {
        internalType: "contract ISeacowsPositionManager",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "slot",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "updatePositionFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "updatePositionFeeDebt",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "updateSwapFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610ee8806100206000396000f3fe608060405234801561001057600080fd5b50600436106101725760003560e01c8063791b98bc116100de578063bb2eb4d211610097578063e256888f11610071578063e256888f14610345578063f78db9b81461034e578063f886389814610356578063fc0c546a1461036957600080fd5b8063bb2eb4d214610317578063c0463ac51461031f578063ce3f865f1461033257600080fd5b8063791b98bc146102a65780637de1e536146102b7578063939d6237146102d05780639cc7f708146102d9578063a1cb5a8a146102ec578063a74d5f30146102f557600080fd5b80631a88bc66116101305780631a88bc66146102465780633c97d5ae1461024e57806354fb3921146102575780635c975abb1461026a57806360b71d4e146102725780636352211e1461027b57600080fd5b80629ce20b1461017757806301ffc9a7146101b45780630c472afd146101d7578063150b7a02146101e157806317893e3c146101f457806318160ddd14610230575b600080fd5b610196610185366004610b78565b629ce20b60e01b9695505050505050565b6040516001600160e01b031990911681526020015b60405180910390f35b6101c76101c2366004610c19565b61037c565b60405190151581526020016101ab565b6101df6103cd565b005b6101966101ef366004610c60565b610438565b61021b610202366004610d40565b6006602052600090815260409020805460019091015482565b604080519283526020830191909152016101ab565b610238610449565b6040519081526020016101ab565b6102386104d7565b61023861271081565b6101df610265366004610d40565b610519565b6101c76105b9565b61023860045481565b61028e610289366004610d40565b61062e565b6040516001600160a01b0390911681526020016101ab565b6002546001600160a01b031661028e565b60005461028e906201000090046001600160a01b031681565b61023860035481565b6102386102e7366004610d40565b6106b0565b61023860055481565b6102fe6103e881565b60405167ffffffffffffffff90911681526020016101ab565b6102fe606481565b6101df61032d366004610d40565b610732565b610238610340366004610d40565b610799565b6102fe61271081565b6102fe603281565b610238610364366004610d40565b610894565b60015461028e906001600160a01b031681565b60006301ffc9a760e01b6001600160e01b0319831614806103ad57506001600160e01b03198216630a85bd0160e11b145b806103c757506001600160e01b03198216629ce20b60e01b145b92915050565b60006103d7610449565b905060055460045414806103e9575080155b156103f15750565b806127106005546004546104059190610d6f565b61040f9190610d86565b6104199190610da5565b6003600082825461042a9190610dc7565b909155505060045460055550565b630a85bd0160e11b5b949350505050565b600061045d6002546001600160a01b031690565b6001600160a01b03166388200bb96104736104d7565b6040518263ffffffff1660e01b815260040161049191815260200190565b602060405180830381865afa1580156104ae573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104d29190610ddf565b905090565b60006104eb6002546001600160a01b031690565b60405163add21d2560e01b81523060048201526001600160a01b03919091169063add21d2590602401610491565b6002546001600160a01b031633146105445760405163975e14bb60e01b815260040160405180910390fd5b60008181526006602052604081209061055c836106b0565b905080156105b457600082600001546127106003548461057c9190610d86565b6105869190610da5565b6105909190610d6f565b905080156105b257808360010160008282546105ac9190610dc7565b90915550505b505b505050565b60006105cd6002546001600160a01b031690565b6001600160a01b031663b187bd266040518163ffffffff1660e01b8152600401602060405180830381865afa15801561060a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104d29190610df8565b60006106426002546001600160a01b031690565b6001600160a01b0316636352211e836040518263ffffffff1660e01b815260040161066f91815260200190565b602060405180830381865afa15801561068c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103c79190610e1a565b60006106c46002546001600160a01b031690565b6001600160a01b0316639cc7f708836040518263ffffffff1660e01b81526004016106f191815260200190565b602060405180830381865afa15801561070e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103c79190610ddf565b6002546001600160a01b0316331461075d5760405163975e14bb60e01b815260040160405180910390fd5b600081815260066020526040812090610775836106b0565b9050612710600354826107889190610d86565b6107929190610da5565b9091555050565b60006107a36103cd565b60006107ae83610894565b6000848152600660205260408120600181019190915560035491925090612710906107d8866106b0565b6107e29190610d86565b6107ec9190610da5565b815560045482116107fd5781610801565b6004545b925082600560008282546108159190610d6f565b92505081905550826004600082825461082e9190610d6f565b9091555061085390506108408561062e565b6001546001600160a01b03169085610928565b837f38436c42bcfd74414acafc159a381bf74b9880bc4c1c9f922686fc7161d9c7ad8460405161088591815260200190565b60405180910390a25050919050565b6000818152600660205260408120600354600554600454146108ec576108b8610449565b6127106005546004546108cb9190610d6f565b6108d59190610d86565b6108df9190610da5565b6108e99082610dc7565b90505b8154612710826108fb876106b0565b6109059190610d86565b61090f9190610da5565b836001015461091e9190610dc7565b6104419190610d6f565b604080516001600160a01b03848116602483015260448083018590528351808403909101815260649092018352602080830180516001600160e01b031663a9059cbb60e01b17905283518085019094528084527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564908401526105b4928692916000916109b8918516908490610a3d565b90508051600014806109d95750808060200190518101906109d99190610df8565b6105b45760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084015b60405180910390fd5b6060610441848460008585600080866001600160a01b03168587604051610a649190610e63565b60006040518083038185875af1925050503d8060008114610aa1576040519150601f19603f3d011682016040523d82523d6000602084013e610aa6565b606091505b5091509150610ab787838387610ac2565b979650505050505050565b60608315610b31578251600003610b2a576001600160a01b0385163b610b2a5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610a34565b5081610441565b6104418383815115610b465781518083602001fd5b8060405162461bcd60e51b8152600401610a349190610e7f565b6001600160a01b0381168114610b7557600080fd5b50565b60008060008060008060a08789031215610b9157600080fd5b8635610b9c81610b60565b9550602087013594506040870135935060608701359250608087013567ffffffffffffffff80821115610bce57600080fd5b818901915089601f830112610be257600080fd5b813581811115610bf157600080fd5b8a6020828501011115610c0357600080fd5b6020830194508093505050509295509295509295565b600060208284031215610c2b57600080fd5b81356001600160e01b031981168114610c4357600080fd5b9392505050565b634e487b7160e01b600052604160045260246000fd5b60008060008060808587031215610c7657600080fd5b8435610c8181610b60565b93506020850135610c9181610b60565b925060408501359150606085013567ffffffffffffffff80821115610cb557600080fd5b818701915087601f830112610cc957600080fd5b813581811115610cdb57610cdb610c4a565b604051601f8201601f19908116603f01168101908382118183101715610d0357610d03610c4a565b816040528281528a6020848701011115610d1c57600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b600060208284031215610d5257600080fd5b5035919050565b634e487b7160e01b600052601160045260246000fd5b600082821015610d8157610d81610d59565b500390565b6000816000190483118215151615610da057610da0610d59565b500290565b600082610dc257634e487b7160e01b600052601260045260246000fd5b500490565b60008219821115610dda57610dda610d59565b500190565b600060208284031215610df157600080fd5b5051919050565b600060208284031215610e0a57600080fd5b81518015158114610c4357600080fd5b600060208284031215610e2c57600080fd5b8151610c4381610b60565b60005b83811015610e52578181015183820152602001610e3a565b838111156105b25750506000910152565b60008251610e75818460208701610e37565b9190910192915050565b6020815260008251806020840152610e9e816040850160208701610e37565b601f01601f1916919091016040019291505056fea26469706673582212209c92f10d2323db421d1b342387f85ce91cdad0f65e6949ebf48537baa1bfc9db64736f6c634300080d0033";

export class SeacowsRewarder__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<SeacowsRewarder> {
    return super.deploy(overrides || {}) as Promise<SeacowsRewarder>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): SeacowsRewarder {
    return super.attach(address) as SeacowsRewarder;
  }
  connect(signer: Signer): SeacowsRewarder__factory {
    return super.connect(signer) as SeacowsRewarder__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SeacowsRewarderInterface {
    return new utils.Interface(_abi) as SeacowsRewarderInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SeacowsRewarder {
    return new Contract(address, _abi, signerOrProvider) as SeacowsRewarder;
  }
}
