/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  SeacowsRewarder,
  SeacowsRewarderInterface,
} from "../SeacowsRewarder";

const _abi = [
  {
    inputs: [],
    name: "FM_NON_FEE_MANAGER",
    type: "error",
  },
  {
    inputs: [],
    name: "FM_NON_ROYALTY_FEE_MANAGER",
    type: "error",
  },
  {
    inputs: [],
    name: "RM_NON_ROYALTY_FEE_MANAGER",
    type: "error",
  },
  {
    inputs: [],
    name: "SPMD_ONLY_POSITION_MANAGER",
    type: "error",
  },
  {
    inputs: [],
    name: "SPM_BELOW_NFT_OUT_MIN_CONSTRAINT",
    type: "error",
  },
  {
    inputs: [],
    name: "SPM_BELOW_TOKEN_OUT_MIN_CONSTRAINT",
    type: "error",
  },
  {
    inputs: [],
    name: "SPM_ETH_TRANSFER_FAILED",
    type: "error",
  },
  {
    inputs: [],
    name: "SPM_EXPIRED",
    type: "error",
  },
  {
    inputs: [],
    name: "SPM_INSUFFICIENT_AMOUNT",
    type: "error",
  },
  {
    inputs: [],
    name: "SPM_INSUFFICIENT_LIQUIDITY",
    type: "error",
  },
  {
    inputs: [],
    name: "SPM_INSUFFICIENT_MINIMUM_LIQUIDITY_AMOUNT",
    type: "error",
  },
  {
    inputs: [],
    name: "SPM_INVALID_TOKEN_ID",
    type: "error",
  },
  {
    inputs: [],
    name: "SPM_ONLY_BURNABLE_WHEN_CLEARED",
    type: "error",
  },
  {
    inputs: [],
    name: "SPM_ONLY_PAIR_CAN_BURN",
    type: "error",
  },
  {
    inputs: [],
    name: "SPM_ONLY_PAIR_CAN_MINT",
    type: "error",
  },
  {
    inputs: [],
    name: "SPM_PAIR_NOT_EXIST",
    type: "error",
  },
  {
    inputs: [],
    name: "SPM_TOKEN_TRANSFER_FAILED",
    type: "error",
  },
  {
    inputs: [],
    name: "SSB_ETH_TRANSFER_FAILED",
    type: "error",
  },
  {
    inputs: [],
    name: "SSB_INSUFFICIENT_AMOUNT",
    type: "error",
  },
  {
    inputs: [],
    name: "SSB_ONE_MORE_BLOCK_AT_LEAST",
    type: "error",
  },
  {
    inputs: [],
    name: "SSB_UNAUTHORIZED",
    type: "error",
  },
  {
    inputs: [],
    name: "STPF_PAIR_ALREADY_EXIST",
    type: "error",
  },
  {
    inputs: [],
    name: "STPF_ZERO_ADDRESS",
    type: "error",
  },
  {
    inputs: [],
    name: "STP_EXCEED_NFT_OUT_MAX",
    type: "error",
  },
  {
    inputs: [],
    name: "STP_FEE_OUT_OF_RANGE",
    type: "error",
  },
  {
    inputs: [],
    name: "STP_INSUFFICIENT_INPUT_AMOUNT",
    type: "error",
  },
  {
    inputs: [],
    name: "STP_INSUFFICIENT_LIQUIDITY",
    type: "error",
  },
  {
    inputs: [],
    name: "STP_INSUFFICIENT_LIQUIDITY_BURNED",
    type: "error",
  },
  {
    inputs: [],
    name: "STP_INSUFFICIENT_LIQUIDITY_MINTED",
    type: "error",
  },
  {
    inputs: [],
    name: "STP_INSUFFICIENT_MIN_FEE",
    type: "error",
  },
  {
    inputs: [],
    name: "STP_INSUFFICIENT_NFT_TO_WITHDRAW",
    type: "error",
  },
  {
    inputs: [],
    name: "STP_INSUFFICIENT_OUTPUT_AMOUNT",
    type: "error",
  },
  {
    inputs: [],
    name: "STP_INVALID_FEE",
    type: "error",
  },
  {
    inputs: [],
    name: "STP_INVALID_TO",
    type: "error",
  },
  {
    inputs: [],
    name: "STP_K",
    type: "error",
  },
  {
    inputs: [],
    name: "STP_SKIM_QUANTITY_MISMATCH",
    type: "error",
  },
  {
    inputs: [],
    name: "STP_UNAUTHORIZED",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "fee",
        type: "uint256",
      },
    ],
    name: "CollectFee",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    inputs: [],
    name: "ACC_REWARD_PER_SHARE_PRECISION",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_PROTOCOL_FEE_PERCENT",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ONE_PERCENT",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PERCENTAGE_PRECISION",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "POINT_FIVE_PERCENT",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "accRewardPerShare",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "collect",
    outputs: [
      {
        internalType: "uint256",
        name: "_fee",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "collection",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feeBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "getPendingFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastFeeBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_operator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_fromTokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_toTokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "onERC3525Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC721Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "positionInfos",
    outputs: [
      {
        internalType: "uint256",
        name: "feeDebt",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "unclaimedFee",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "positionManager",
    outputs: [
      {
        internalType: "contract ISeacowsPositionManager",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "slot",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "updatePositionFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "updatePositionFeeDebt",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "updateSwapFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610e50806100206000396000f3fe608060405234801561001057600080fd5b50600436106101575760003560e01c80637de1e536116100c3578063c0463ac51161007c578063c0463ac5146102fc578063ce3f865f1461030f578063e256888f14610322578063f78db9b81461032b578063f886389814610333578063fc0c546a1461034657600080fd5b80637de1e53614610294578063939d6237146102ad5780639cc7f708146102b6578063a1cb5a8a146102c9578063a74d5f30146102d2578063bb2eb4d2146102f457600080fd5b80631a88bc66116101155780631a88bc661461022b5780633c97d5ae1461023357806354fb39211461023c57806360b71d4e1461024f5780636352211e14610258578063791b98bc1461028357600080fd5b80629ce20b1461015c57806301ffc9a7146101995780630c472afd146101bc578063150b7a02146101c657806317893e3c146101d957806318160ddd14610215575b600080fd5b61017b61016a366004610ae0565b629ce20b60e01b9695505050505050565b6040516001600160e01b031990911681526020015b60405180910390f35b6101ac6101a7366004610b81565b610359565b6040519015158152602001610190565b6101c46103aa565b005b61017b6101d4366004610bc8565b610415565b6102006101e7366004610ca8565b6006602052600090815260409020805460019091015482565b60408051928352602083019190915201610190565b61021d610426565b604051908152602001610190565b61021d6104b4565b61021d61271081565b6101c461024a366004610ca8565b6104f6565b61021d60045481565b61026b610266366004610ca8565b610596565b6040516001600160a01b039091168152602001610190565b6002546001600160a01b031661026b565b60005461026b906201000090046001600160a01b031681565b61021d60035481565b61021d6102c4366004610ca8565b610618565b61021d60055481565b6102db6103e881565b60405167ffffffffffffffff9091168152602001610190565b6102db606481565b6101c461030a366004610ca8565b61069a565b61021d61031d366004610ca8565b610701565b6102db61271081565b6102db603281565b61021d610341366004610ca8565b6107fc565b60015461026b906001600160a01b031681565b60006301ffc9a760e01b6001600160e01b03198316148061038a57506001600160e01b03198216630a85bd0160e11b145b806103a457506001600160e01b03198216629ce20b60e01b145b92915050565b60006103b4610426565b905060055460045414806103c6575080155b156103ce5750565b806127106005546004546103e29190610cd7565b6103ec9190610cee565b6103f69190610d0d565b600360008282546104079190610d2f565b909155505060045460055550565b630a85bd0160e11b5b949350505050565b600061043a6002546001600160a01b031690565b6001600160a01b03166388200bb96104506104b4565b6040518263ffffffff1660e01b815260040161046e91815260200190565b602060405180830381865afa15801561048b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104af9190610d47565b905090565b60006104c86002546001600160a01b031690565b60405163add21d2560e01b81523060048201526001600160a01b03919091169063add21d259060240161046e565b6002546001600160a01b031633146105215760405163975e14bb60e01b815260040160405180910390fd5b60008181526006602052604081209061053983610618565b905080156105915760008260000154612710600354846105599190610cee565b6105639190610d0d565b61056d9190610cd7565b9050801561058f57808360010160008282546105899190610d2f565b90915550505b505b505050565b60006105aa6002546001600160a01b031690565b6001600160a01b0316636352211e836040518263ffffffff1660e01b81526004016105d791815260200190565b602060405180830381865afa1580156105f4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103a49190610d60565b600061062c6002546001600160a01b031690565b6001600160a01b0316639cc7f708836040518263ffffffff1660e01b815260040161065991815260200190565b602060405180830381865afa158015610676573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103a49190610d47565b6002546001600160a01b031633146106c55760405163975e14bb60e01b815260040160405180910390fd5b6000818152600660205260408120906106dd83610618565b9050612710600354826106f09190610cee565b6106fa9190610d0d565b9091555050565b600061070b6103aa565b6000610716836107fc565b60008481526006602052604081206001810191909155600354919250906127109061074086610618565b61074a9190610cee565b6107549190610d0d565b815560045482116107655781610769565b6004545b9250826005600082825461077d9190610cd7565b9250508190555082600460008282546107969190610cd7565b909155506107bb90506107a885610596565b6001546001600160a01b03169085610890565b837f38436c42bcfd74414acafc159a381bf74b9880bc4c1c9f922686fc7161d9c7ad846040516107ed91815260200190565b60405180910390a25050919050565b60008181526006602052604081206003546005546004541461085457610820610426565b6127106005546004546108339190610cd7565b61083d9190610cee565b6108479190610d0d565b6108519082610d2f565b90505b81546127108261086387610618565b61086d9190610cee565b6108779190610d0d565b83600101546108869190610d2f565b61041e9190610cd7565b604080516001600160a01b03848116602483015260448083018590528351808403909101815260649092018352602080830180516001600160e01b031663a9059cbb60e01b17905283518085019094528084527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c656490840152610591928692916000916109209185169084906109a5565b90508051600014806109415750808060200190518101906109419190610d7d565b6105915760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084015b60405180910390fd5b606061041e848460008585600080866001600160a01b031685876040516109cc9190610dcb565b60006040518083038185875af1925050503d8060008114610a09576040519150601f19603f3d011682016040523d82523d6000602084013e610a0e565b606091505b5091509150610a1f87838387610a2a565b979650505050505050565b60608315610a99578251600003610a92576001600160a01b0385163b610a925760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161099c565b508161041e565b61041e8383815115610aae5781518083602001fd5b8060405162461bcd60e51b815260040161099c9190610de7565b6001600160a01b0381168114610add57600080fd5b50565b60008060008060008060a08789031215610af957600080fd5b8635610b0481610ac8565b9550602087013594506040870135935060608701359250608087013567ffffffffffffffff80821115610b3657600080fd5b818901915089601f830112610b4a57600080fd5b813581811115610b5957600080fd5b8a6020828501011115610b6b57600080fd5b6020830194508093505050509295509295509295565b600060208284031215610b9357600080fd5b81356001600160e01b031981168114610bab57600080fd5b9392505050565b634e487b7160e01b600052604160045260246000fd5b60008060008060808587031215610bde57600080fd5b8435610be981610ac8565b93506020850135610bf981610ac8565b925060408501359150606085013567ffffffffffffffff80821115610c1d57600080fd5b818701915087601f830112610c3157600080fd5b813581811115610c4357610c43610bb2565b604051601f8201601f19908116603f01168101908382118183101715610c6b57610c6b610bb2565b816040528281528a6020848701011115610c8457600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b600060208284031215610cba57600080fd5b5035919050565b634e487b7160e01b600052601160045260246000fd5b600082821015610ce957610ce9610cc1565b500390565b6000816000190483118215151615610d0857610d08610cc1565b500290565b600082610d2a57634e487b7160e01b600052601260045260246000fd5b500490565b60008219821115610d4257610d42610cc1565b500190565b600060208284031215610d5957600080fd5b5051919050565b600060208284031215610d7257600080fd5b8151610bab81610ac8565b600060208284031215610d8f57600080fd5b81518015158114610bab57600080fd5b60005b83811015610dba578181015183820152602001610da2565b8381111561058f5750506000910152565b60008251610ddd818460208701610d9f565b9190910192915050565b6020815260008251806020840152610e06816040850160208701610d9f565b601f01601f1916919091016040019291505056fea26469706673582212200aa741e555fea561b0c2468fda934b78682a6a28dd2ba499d52c5361ce00d92364736f6c634300080d0033";

export class SeacowsRewarder__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<SeacowsRewarder> {
    return super.deploy(overrides || {}) as Promise<SeacowsRewarder>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): SeacowsRewarder {
    return super.attach(address) as SeacowsRewarder;
  }
  connect(signer: Signer): SeacowsRewarder__factory {
    return super.connect(signer) as SeacowsRewarder__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SeacowsRewarderInterface {
    return new utils.Interface(_abi) as SeacowsRewarderInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SeacowsRewarder {
    return new Contract(address, _abi, signerOrProvider) as SeacowsRewarder;
  }
}
