/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { MockERC721, MockERC721Interface } from "../MockERC721";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "salePrice",
        type: "uint256",
      },
    ],
    name: "royaltyInfo",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604080518082018252600b81526a4d6f636b2045524337323160a81b6020808301918252835180850190945260078452664d45524337323160c81b90840152815191929162000064916000916200019b565b5080516200007a9060019060208401906200019b565b505050620000903360646200009660201b60201c565b6200027d565b6127106001600160601b03821611156200010a5760405162461bcd60e51b815260206004820152602a60248201527f455243323938313a20726f79616c7479206665652077696c6c206578636565646044820152692073616c65507269636560b01b60648201526084015b60405180910390fd5b6001600160a01b038216620001625760405162461bcd60e51b815260206004820152601960248201527f455243323938313a20696e76616c696420726563656976657200000000000000604482015260640162000101565b604080518082019091526001600160a01b039092168083526001600160601b039091166020909201829052600160a01b90910217600655565b828054620001a99062000241565b90600052602060002090601f016020900481019282620001cd576000855562000218565b82601f10620001e857805160ff191683800117855562000218565b8280016001018555821562000218579182015b8281111562000218578251825591602001919060010190620001fb565b50620002269291506200022a565b5090565b5b808211156200022657600081556001016200022b565b600181811c908216806200025657607f821691505b6020821081036200027757634e487b7160e01b600052602260045260246000fd5b50919050565b61147c806200028d6000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c80636352211e11610097578063a22cb46511610066578063a22cb4651461021e578063b88d4fde14610231578063c87b56dd14610244578063e985e9c51461025757600080fd5b80636352211e146101cf5780636a627842146101e257806370a08231146101f557806395d89b411461021657600080fd5b8063095ea7b3116100d3578063095ea7b31461016257806323b872dd146101775780632a55205a1461018a57806342842e0e146101bc57600080fd5b806301ffc9a7146100fa57806306fdde0314610122578063081812fc14610137575b600080fd5b61010d610108366004610f8f565b610293565b60405190151581526020015b60405180910390f35b61012a6102be565b6040516101199190611004565b61014a610145366004611017565b610350565b6040516001600160a01b039091168152602001610119565b61017561017036600461104c565b610377565b005b610175610185366004611076565b610491565b61019d6101983660046110b2565b6104c2565b604080516001600160a01b039093168352602083019190915201610119565b6101756101ca366004611076565b61056e565b61014a6101dd366004611017565b610589565b6101756101f03660046110d4565b6105e9565b6102086102033660046110d4565b61060c565b604051908152602001610119565b61012a610692565b61017561022c3660046110ef565b6106a1565b61017561023f366004611141565b6106b0565b61012a610252366004611017565b6106e8565b61010d61026536600461121d565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b60006001600160e01b0319821663152a902d60e11b14806102b857506102b88261075c565b92915050565b6060600080546102cd90611250565b80601f01602080910402602001604051908101604052809291908181526020018280546102f990611250565b80156103465780601f1061031b57610100808354040283529160200191610346565b820191906000526020600020905b81548152906001019060200180831161032957829003601f168201915b5050505050905090565b600061035b82610781565b506000908152600460205260409020546001600160a01b031690565b600061038282610589565b9050806001600160a01b0316836001600160a01b0316036103f45760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084015b60405180910390fd5b336001600160a01b038216148061041057506104108133610265565b6104825760405162461bcd60e51b815260206004820152603d60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c00000060648201526084016103eb565b61048c83836107e0565b505050565b61049b338261084e565b6104b75760405162461bcd60e51b81526004016103eb9061128a565b61048c8383836108cd565b60008281526007602090815260408083208151808301909252546001600160a01b038116808352600160a01b9091046001600160601b03169282019290925282916105375750604080518082019091526006546001600160a01b0381168252600160a01b90046001600160601b031660208201525b602081015160009061271090610556906001600160601b0316876112d7565b6105609190611304565b915196919550909350505050565b61048c838383604051806020016040528060008152506106b0565b6000818152600260205260408120546001600160a01b0316806102b85760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b60448201526064016103eb565b6105fb816105f660085490565b610a31565b610609600880546001019055565b50565b60006001600160a01b0382166106765760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b60648201526084016103eb565b506001600160a01b031660009081526003602052604090205490565b6060600180546102cd90611250565b6106ac338383610bbc565b5050565b6106ba338361084e565b6106d65760405162461bcd60e51b81526004016103eb9061128a565b6106e284848484610c8a565b50505050565b60606106f382610781565b600061070a60408051602081019091526000815290565b9050600081511161072a5760405180602001604052806000815250610755565b8061073484610cbd565b604051602001610745929190611326565b6040516020818303038152906040525b9392505050565b60006001600160e01b0319821663152a902d60e11b14806102b857506102b882610d50565b6000818152600260205260409020546001600160a01b03166106095760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b60448201526064016103eb565b600081815260046020526040902080546001600160a01b0319166001600160a01b038416908117909155819061081582610589565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b60008061085a83610589565b9050806001600160a01b0316846001600160a01b031614806108a157506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b806108c55750836001600160a01b03166108ba84610350565b6001600160a01b0316145b949350505050565b826001600160a01b03166108e082610589565b6001600160a01b0316146109065760405162461bcd60e51b81526004016103eb90611355565b6001600160a01b0382166109685760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b60648201526084016103eb565b826001600160a01b031661097b82610589565b6001600160a01b0316146109a15760405162461bcd60e51b81526004016103eb90611355565b600081815260046020908152604080832080546001600160a01b03199081169091556001600160a01b0387811680865260038552838620805460001901905590871680865283862080546001019055868652600290945282852080549092168417909155905184937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6001600160a01b038216610a875760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f206164647265737360448201526064016103eb565b6000818152600260205260409020546001600160a01b031615610aec5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000060448201526064016103eb565b6000818152600260205260409020546001600160a01b031615610b515760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000060448201526064016103eb565b6001600160a01b038216600081815260036020908152604080832080546001019055848352600290915280822080546001600160a01b0319168417905551839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b816001600160a01b0316836001600160a01b031603610c1d5760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c65720000000000000060448201526064016103eb565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b610c958484846108cd565b610ca184848484610da0565b6106e25760405162461bcd60e51b81526004016103eb9061139a565b60606000610cca83610ea1565b600101905060008167ffffffffffffffff811115610cea57610cea61112b565b6040519080825280601f01601f191660200182016040528015610d14576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a8504945084610d1e57509392505050565b60006001600160e01b031982166380ac58cd60e01b1480610d8157506001600160e01b03198216635b5e139f60e01b145b806102b857506301ffc9a760e01b6001600160e01b03198316146102b8565b60006001600160a01b0384163b15610e9657604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290610de49033908990889088906004016113ec565b6020604051808303816000875af1925050508015610e1f575060408051601f3d908101601f19168201909252610e1c91810190611429565b60015b610e7c573d808015610e4d576040519150601f19603f3d011682016040523d82523d6000602084013e610e52565b606091505b508051600003610e745760405162461bcd60e51b81526004016103eb9061139a565b805181602001fd5b6001600160e01b031916630a85bd0160e11b1490506108c5565b506001949350505050565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b8310610ee05772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef81000000008310610f0c576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc100008310610f2a57662386f26fc10000830492506010015b6305f5e1008310610f42576305f5e100830492506008015b6127108310610f5657612710830492506004015b60648310610f68576064830492506002015b600a83106102b85760010192915050565b6001600160e01b03198116811461060957600080fd5b600060208284031215610fa157600080fd5b813561075581610f79565b60005b83811015610fc7578181015183820152602001610faf565b838111156106e25750506000910152565b60008151808452610ff0816020860160208601610fac565b601f01601f19169290920160200192915050565b6020815260006107556020830184610fd8565b60006020828403121561102957600080fd5b5035919050565b80356001600160a01b038116811461104757600080fd5b919050565b6000806040838503121561105f57600080fd5b61106883611030565b946020939093013593505050565b60008060006060848603121561108b57600080fd5b61109484611030565b92506110a260208501611030565b9150604084013590509250925092565b600080604083850312156110c557600080fd5b50508035926020909101359150565b6000602082840312156110e657600080fd5b61075582611030565b6000806040838503121561110257600080fd5b61110b83611030565b91506020830135801515811461112057600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b6000806000806080858703121561115757600080fd5b61116085611030565b935061116e60208601611030565b925060408501359150606085013567ffffffffffffffff8082111561119257600080fd5b818701915087601f8301126111a657600080fd5b8135818111156111b8576111b861112b565b604051601f8201601f19908116603f011681019083821181831017156111e0576111e061112b565b816040528281528a60208487010111156111f957600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b6000806040838503121561123057600080fd5b61123983611030565b915061124760208401611030565b90509250929050565b600181811c9082168061126457607f821691505b60208210810361128457634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252602d908201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560408201526c1c881bdc88185c1c1c9bdd9959609a1b606082015260800190565b60008160001904831182151516156112ff57634e487b7160e01b600052601160045260246000fd5b500290565b60008261132157634e487b7160e01b600052601260045260246000fd5b500490565b60008351611338818460208801610fac565b83519083019061134c818360208801610fac565b01949350505050565b60208082526025908201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060408201526437bbb732b960d91b606082015260800190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061141f90830184610fd8565b9695505050505050565b60006020828403121561143b57600080fd5b815161075581610f7956fea2646970667358221220062fdfc01e8bf79caf5849d031f5a41ba1974417a0a28ca22f92ea1fd9244c8c64736f6c634300080d0033";

export class MockERC721__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MockERC721> {
    return super.deploy(overrides || {}) as Promise<MockERC721>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): MockERC721 {
    return super.attach(address) as MockERC721;
  }
  connect(signer: Signer): MockERC721__factory {
    return super.connect(signer) as MockERC721__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockERC721Interface {
    return new utils.Interface(_abi) as MockERC721Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockERC721 {
    return new Contract(address, _abi, signerOrProvider) as MockERC721;
  }
}
