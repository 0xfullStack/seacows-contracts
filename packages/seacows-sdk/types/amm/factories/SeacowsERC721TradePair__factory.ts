/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  SeacowsERC721TradePair,
  SeacowsERC721TradePairInterface,
} from "../SeacowsERC721TradePair";

const _abi = [
  {
    inputs: [],
    name: "FM_NON_FEE_MANAGER",
    type: "error",
  },
  {
    inputs: [],
    name: "FM_NON_ROYALTY_FEE_MANAGER",
    type: "error",
  },
  {
    inputs: [],
    name: "RM_NON_ROYALTY_FEE_MANAGER",
    type: "error",
  },
  {
    inputs: [],
    name: "SPMD_ONLY_POSITION_MANAGER",
    type: "error",
  },
  {
    inputs: [],
    name: "SPM_BELOW_NFT_OUT_MIN_CONSTRAINT",
    type: "error",
  },
  {
    inputs: [],
    name: "SPM_BELOW_TOKEN_OUT_MIN_CONSTRAINT",
    type: "error",
  },
  {
    inputs: [],
    name: "SPM_ETH_TRANSFER_FAILED",
    type: "error",
  },
  {
    inputs: [],
    name: "SPM_EXPIRED",
    type: "error",
  },
  {
    inputs: [],
    name: "SPM_INSUFFICIENT_AMOUNT",
    type: "error",
  },
  {
    inputs: [],
    name: "SPM_INSUFFICIENT_LIQUIDITY",
    type: "error",
  },
  {
    inputs: [],
    name: "SPM_INSUFFICIENT_MINIMUM_LIQUIDITY_AMOUNT",
    type: "error",
  },
  {
    inputs: [],
    name: "SPM_INVALID_TOKEN_ID",
    type: "error",
  },
  {
    inputs: [],
    name: "SPM_ONLY_BURNABLE_WHEN_CLEARED",
    type: "error",
  },
  {
    inputs: [],
    name: "SPM_ONLY_PAIR_CAN_BURN",
    type: "error",
  },
  {
    inputs: [],
    name: "SPM_ONLY_PAIR_CAN_MINT",
    type: "error",
  },
  {
    inputs: [],
    name: "SPM_PAIR_NOT_EXIST",
    type: "error",
  },
  {
    inputs: [],
    name: "SPM_TOKEN_TRANSFER_FAILED",
    type: "error",
  },
  {
    inputs: [],
    name: "SSB_ETH_TRANSFER_FAILED",
    type: "error",
  },
  {
    inputs: [],
    name: "SSB_INSUFFICIENT_AMOUNT",
    type: "error",
  },
  {
    inputs: [],
    name: "SSB_ONE_MORE_BLOCK_AT_LEAST",
    type: "error",
  },
  {
    inputs: [],
    name: "SSB_UNAUTHORIZED",
    type: "error",
  },
  {
    inputs: [],
    name: "STPF_PAIR_ALREADY_EXIST",
    type: "error",
  },
  {
    inputs: [],
    name: "STPF_ZERO_ADDRESS",
    type: "error",
  },
  {
    inputs: [],
    name: "STP_EXCEED_NFT_OUT_MAX",
    type: "error",
  },
  {
    inputs: [],
    name: "STP_FEE_OUT_OF_RANGE",
    type: "error",
  },
  {
    inputs: [],
    name: "STP_INSUFFICIENT_INPUT_AMOUNT",
    type: "error",
  },
  {
    inputs: [],
    name: "STP_INSUFFICIENT_LIQUIDITY",
    type: "error",
  },
  {
    inputs: [],
    name: "STP_INSUFFICIENT_LIQUIDITY_BURNED",
    type: "error",
  },
  {
    inputs: [],
    name: "STP_INSUFFICIENT_LIQUIDITY_MINTED",
    type: "error",
  },
  {
    inputs: [],
    name: "STP_INSUFFICIENT_MIN_FEE",
    type: "error",
  },
  {
    inputs: [],
    name: "STP_INSUFFICIENT_NFT_TO_WITHDRAW",
    type: "error",
  },
  {
    inputs: [],
    name: "STP_INSUFFICIENT_OUTPUT_AMOUNT",
    type: "error",
  },
  {
    inputs: [],
    name: "STP_INVALID_FEE",
    type: "error",
  },
  {
    inputs: [],
    name: "STP_INVALID_TO",
    type: "error",
  },
  {
    inputs: [],
    name: "STP_K",
    type: "error",
  },
  {
    inputs: [],
    name: "STP_SKIM_QUANTITY_MISMATCH",
    type: "error",
  },
  {
    inputs: [],
    name: "STP_UNAUTHORIZED",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "cTokenOut",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "cNftOut",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenAmountOut",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "idsOut",
        type: "uint256[]",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "Burn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "fee",
        type: "uint256",
      },
    ],
    name: "CollectFee",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "nftAmount",
        type: "uint256",
      },
    ],
    name: "Mint",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenIn",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "nftIn",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenOut",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "nftOut",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "Swap",
    type: "event",
  },
  {
    inputs: [],
    name: "ACC_REWARD_PER_SHARE_PRECISION",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "COMPLEMENT_PRECISION",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "COMPLEMENT_PRECISION_DIGITS",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_PROTOCOL_FEE_PERCENT",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ONE_PERCENT",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PERCENTAGE_PRECISION",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "POINT_FIVE_PERCENT",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "accRewardPerShare",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "_ids",
        type: "uint256[]",
      },
    ],
    name: "burn",
    outputs: [
      {
        internalType: "uint256",
        name: "cTokenOut",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "cNftOut",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "tokenOut",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "idsOut",
        type: "uint256[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenBalance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_nftBalance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_tokenExpectedOut",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_nftExpectedOut",
        type: "uint256",
      },
    ],
    name: "caculateAssetsOutAfterComplemented",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "collect",
    outputs: [
      {
        internalType: "uint256",
        name: "_fee",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "collection",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feeBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feePercent",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getBalances",
    outputs: [
      {
        internalType: "uint256",
        name: "_balance0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_balance1",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "getPendingFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getReserves",
    outputs: [
      {
        internalType: "uint256",
        name: "_reserve0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_reserve1",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "getRoyaltyRecipient",
    outputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token_",
        type: "address",
      },
      {
        internalType: "address",
        name: "collection_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "fee_",
        type: "uint256",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "isRoyaltySupported",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastFeeBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minRoyaltyFeePercent",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minTotalFeePercent",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "toTokenId",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [
      {
        internalType: "uint256",
        name: "liquidity",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_operator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_fromTokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_toTokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "onERC3525Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC721Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "positionInfos",
    outputs: [
      {
        internalType: "uint256",
        name: "feeDebt",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "unclaimedFee",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "positionManager",
    outputs: [
      {
        internalType: "contract ISeacowsPositionManager",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "protocolFeePercent",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "royaltyFeeManager",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "royaltyRegistry",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_percent",
        type: "uint256",
      },
    ],
    name: "setMinRoyaltyFeePercent",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_protocolFee",
        type: "uint256",
      },
    ],
    name: "setProtocolFeePercent",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "skim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "slot",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenAmountOut",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "idsOut",
        type: "uint256[]",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "swap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "updatePositionFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "updatePositionFeeDebt",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "updateSwapFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50612f1d806100206000396000f3fe608060405234801561001057600080fd5b50600436106102725760003560e01c80639cc7f70811610151578063c07bff9f116100c3578063e5d4088e11610087578063e5d4088e1461054e578063e5f9e83b14610561578063e86a83191461056a578063f78db9b814610572578063f88638981461057a578063fc0c546a1461058d57600080fd5b8063c07bff9f146104fc578063ce3f865f1461050f578063d6e6eb9f14610522578063db8cd5891461052b578063e256888f1461054557600080fd5b8063a1cb5a8a11610115578063a1cb5a8a14610480578063a498342114610489578063a74d5f301461049c578063bb2eb4d2146104be578063bfb7f05e146104c6578063c0463ac5146104e957600080fd5b80639cc7f708146104305780639e75baa714610443578063a015a3d814610452578063a0712d6814610465578063a11b07121461047857600080fd5b80631da8afb3116101ea5780636352211e116101ae5780636352211e146103c7578063791b98bc146103f25780637de1e536146104035780637fd6f15c1461041657806387e4401f1461041f578063939d62371461042757600080fd5b80631da8afb3146103875780633c97d5ae1461038f57806354fb3921146103985780635c2454b4146103ab57806360b71d4e146103be57600080fd5b80630c6bc62b1161023c5780630c6bc62b14610309578063150b7a021461031c57806317893e3c1461032f5780631794bb3c1461035657806318160ddd146103695780631a88bc661461037f57600080fd5b8062113e08146102775780629ce20b1461029957806301ffc9a7146102d15780630902f1ac146102f45780630c472afd146102ff575b600080fd5b61027f6105a0565b604080519283526020830191909152015b60405180910390f35b6102b86102a7366004612786565b629ce20b60e01b9695505050505050565b6040516001600160e01b03199091168152602001610290565b6102e46102df3660046127f9565b6106a9565b6040519015158152602001610290565b603d54603e5461027f565b6103076106d5565b005b610307610317366004612823565b610740565b6102b861032a366004612883565b61077e565b61027f61033d366004612823565b6039602052600090815260409020805460019091015482565b610307610364366004612947565b61078f565b6103716108ed565b604051908152602001610290565b61037161097b565b6102e46109bd565b61037161271081565b6103076103a6366004612823565b610acb565b61027f6103b9366004612988565b610b6a565b61037160375481565b6103da6103d5366004612823565b610b86565b6040516001600160a01b039091168152602001610290565b6035546001600160a01b03166103da565b6033546103da906001600160a01b031681565b610371603b5481565b6103da610c08565b61037160365481565b61037161043e366004612823565b610c7d565b610371670de0b6b3a764000081565b6103da610460366004612823565b610cff565b610371610473366004612823565b610e80565b6103da610fac565b61037160385481565b610307610497366004612823565b610ffd565b6104a56103e881565b60405167ffffffffffffffff9091168152602001610290565b6104a5606481565b6104d96104d4366004612a49565b6110c0565b6040516102909493929190612aab565b6103076104f7366004612823565b611676565b61030761050a366004612b07565b6116dd565b61037161051d366004612823565b611b55565b610371603c5481565b610533601281565b60405160ff9091168152602001610290565b6104a561271081565b61030761055c366004612b90565b611c50565b610371603a5481565b610371611d9a565b6104a5603281565b610371610588366004612823565b611e47565b6034546103da906001600160a01b031681565b6037546034546040516370a0823160e01b8152306004820152600092839290916001600160a01b03909116906370a0823190602401602060405180830381865afa1580156105f2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106169190612be0565b6106209190612c0f565b6033546040516370a0823160e01b8152306004820152919350670de0b6b3a7640000916001600160a01b03909116906370a0823190602401602060405180830381865afa158015610675573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106999190612be0565b6106a39190612c26565b90509091565b60006106b482611edb565b806106cf575063cc9278d360e01b6001600160e01b03198316145b92915050565b60006106df6108ed565b905060385460375414806106f1575080155b156106f95750565b8061271060385460375461070d9190612c0f565b6107179190612c26565b6107219190612c5b565b603660008282546107329190612c7d565b909155505060375460385550565b610748610c08565b6001600160a01b0316336001600160a01b03161461077957604051632a9e285560e11b815260040160405180910390fd5b603a55565b630a85bd0160e11b5b949350505050565b600054610100900460ff16158080156107af5750600054600160ff909116105b806107c95750303b1580156107c9575060005460ff166001145b6108315760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084015b60405180910390fd5b6000805460ff191660011790558015610854576000805461ff0019166101001790555b60648214801590610866575060328214155b1561088457604051636301f06d60e11b815260040160405180910390fd5b603b8290556003603c55610899338585611f2b565b6108a1611f94565b80156108e7576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50505050565b60006109016035546001600160a01b031690565b6001600160a01b03166388200bb961091761097b565b6040518263ffffffff1660e01b815260040161093591815260200190565b602060405180830381865afa158015610952573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109769190612be0565b905090565b600061098f6035546001600160a01b031690565b60405163add21d2560e01b81523060048201526001600160a01b03919091169063add21d2590602401610935565b6000806109c8610fac565b6001600160a01b031614610ac55760006109e0610fac565b60335460405163de5488af60e01b81526001600160a01b03918216600482015291169063de5488af90602401602060405180830381865afa158015610a29573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a4d9190612c95565b6040516301ffc9a760e01b815263152a902d60e11b60048201529091506001600160a01b038216906301ffc9a790602401602060405180830381865afa158015610a9b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610abf9190612cb2565b91505090565b50600090565b6035546001600160a01b03163314610af65760405163975e14bb60e01b815260040160405180910390fd5b600081815260396020526040812090610b0e83610c7d565b90508015610b65576000826000015461271060365484610b2e9190612c26565b610b389190612c5b565b610b429190612c0f565b905080156108e75780836001016000828254610b5e9190612c7d565b9091555050505b505050565b600080610b7986868686611fc5565b9150915094509492505050565b6000610b9a6035546001600160a01b031690565b6001600160a01b0316636352211e836040518263ffffffff1660e01b8152600401610bc791815260200190565b602060405180830381865afa158015610be4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106cf9190612c95565b6000610c1c6035546001600160a01b031690565b6001600160a01b03166387e4401f6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610c59573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109769190612c95565b6000610c916035546001600160a01b031690565b6001600160a01b0316639cc7f708836040518263ffffffff1660e01b8152600401610cbe91815260200190565b602060405180830381865afa158015610cdb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106cf9190612be0565b600080610d0a610fac565b6001600160a01b031614610e7b576000610d22610fac565b60335460405163de5488af60e01b81526001600160a01b03918216600482015291169063de5488af90602401602060405180830381865afa158015610d6b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d8f9190612c95565b6040516301ffc9a760e01b815263152a902d60e11b60048201529091506001600160a01b038216906301ffc9a790602401602060405180830381865afa158015610ddd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e019190612cb2565b15610e795760405163152a902d60e11b815260048101849052600060248201526001600160a01b03821690632a55205a906044016040805180830381865afa158015610e51573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e759190612cd4565b5091505b505b919050565b6000610e8a612059565b600080610e9a603d54603e549091565b91509150600080610ea96105a0565b90925090506000610eba8584612c0f565b90506000610ec88584612c0f565b90506000610ed46108ed565b905080600003610ef757610ef0610eeb8385612c26565b6120b2565b9750610f2c565b610f2987610f058386612c26565b610f0f9190612c5b565b87610f1a8486612c26565b610f249190612c5b565b6121a1565b97505b60008811610f4d57604051632c82cdd360e11b815260040160405180910390fd5b610f5789896121b7565b603d859055603e849055604080518481526020810184905233917f4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f910160405180910390a250505050505050610e7b60018055565b6000610fc06035546001600160a01b031690565b6001600160a01b031663a11b07126040518163ffffffff1660e01b8152600401602060405180830381865afa158015610c59573d6000803e3d6000fd5b336110106035546001600160a01b031690565b6001600160a01b031663d0fb02036040518163ffffffff1660e01b8152600401602060405180830381865afa15801561104d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110719190612c95565b6001600160a01b031614611098576040516333cf93eb60e11b815260040160405180910390fd5b6103e88111156110bb57604051630737667760e11b815260040160405180910390fd5b603c55565b600080600060606110cf612059565b6000806110da6105a0565b9150915060006110f26035546001600160a01b031690565b6040516321761c7160e11b815230600482015290915060009081906001600160a01b03841690639cc7f7089082906342ec38e290602401602060405180830381865afa158015611146573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061116a9190612be0565b6040518263ffffffff1660e01b815260040161118891815260200190565b602060405180830381865afa1580156111a5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111c99190612be0565b90506111d36108ed565b6111dd8683612c26565b6111e79190612c5b565b98506111f16108ed565b6111fb8583612c26565b6112059190612c5b565b9750881580611212575087155b1561123057604051633f04d0db60e11b815260040160405180910390fd5b600061123e86868c8c611fc5565b6040516321761c7160e11b815230600482015291995091506112b5906001600160a01b038616906342ec38e290602401602060405180830381865afa15801561128b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112af9190612be0565b83612227565b6112c7670de0b6b3a764000082612c5b565b6034546040516370a0823160e01b81523060048201529194506001600160a01b0316906370a0823190602401602060405180830381865afa158015611310573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113349190612be0565b8811156113aa576034546040516370a0823160e01b81523060048201526001600160a01b03909116906370a0823190602401602060405180830381865afa158015611383573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113a79190612be0565b97505b505080895110156113ce57604051630f19e6dd60e41b815260040160405180910390fd5b6034546113e5906001600160a01b03168b8861225f565b8067ffffffffffffffff8111156113fe576113fe61283c565b604051908082528060200260200182016040528015611427578160200160208202803683370190505b5094506000805b828210801561143d57508a5181105b156115d6576033548b5130916001600160a01b031690636352211e908e908590811061146b5761146b612d02565b60200260200101516040518263ffffffff1660e01b815260040161149191815260200190565b602060405180830381865afa1580156114ae573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114d29190612c95565b6001600160a01b0316036115c4576033548b516001600160a01b03909116906342842e0e9030908f908f908690811061150d5761150d612d02565b60209081029190910101516040516001600160e01b031960e086901b1681526001600160a01b0393841660048201529290911660248301526044820152606401600060405180830381600087803b15801561156757600080fd5b505af115801561157b573d6000803e3d6000fd5b505050508a818151811061159157611591612d02565b60200260200101518783815181106115ab576115ab612d02565b6020908102919091010152816115c081612d18565b9250505b806115ce81612d18565b91505061142e565b8282146115f657604051631796524360e31b815260040160405180910390fd5b50506116006105a0565b603d829055603e8190559094509250896001600160a01b0316336001600160a01b03167f8c54d40e52af817976c5f2b138403a5ff53b552d179dc91099fd8d789ebf70738a8a8a8a6040516116589493929190612aab565b60405180910390a35050505061166d60018055565b93509350935093565b6035546001600160a01b031633146116a15760405163975e14bb60e01b815260040160405180910390fd5b6000818152603960205260408120906116b983610c7d565b9050612710603654826116cc9190612c26565b6116d69190612c5b565b9091555050565b6116e5612059565b841580156116f257508351155b15611710576040516335e1f2d160e11b815260040160405180910390fd5b6000806060600080611725603d54603e549091565b91509150818a10158061174c575080670de0b6b3a76400008a516117499190612c26565b10155b1561176a576040516341cb3f0b60e01b815260040160405180910390fd5b6040516341bc698d60e01b815260009033906341bc698d90611792908b908b90600401612d31565b6000604051808303816000875af11580156117b1573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526117d99190810190612d60565b94509050801580156117ea57508351155b15611808576040516397bc6fa360e01b815260040160405180910390fd5b6034546001600160a01b038a81169116148061183157506033546001600160a01b038a81169116145b1561184f57604051631ec8b2d360e11b815260040160405180910390fd5b8a1561186c5760345461186c906001600160a01b03168a8d61225f565b8951156119335760005b8a51811015611931576033548b516001600160a01b03909116906342842e0e9030908d908f90869081106118ac576118ac612d02565b60209081029190910101516040516001600160e01b031960e086901b1681526001600160a01b0393841660048201529290911660248301526044820152606401600060405180830381600087803b15801561190657600080fd5b505af115801561191a573d6000803e3d6000fd5b50505050808061192990612d18565b915050611876565b505b60008061193e6105a0565b9092509050600061194f8587612c26565b6119598385612c26565b6119639190612c0f565b9050858311611973576000611993565b808261197f8886612c0f565b6119899190612c26565b6119939190612c0f565b98508286116119a35760006119c3565b80826119af8589612c0f565b6119b99190612c26565b6119c39190612c7d565b975060006119d18a8a6122b1565b90506119df61271083612c26565b6119e7611d9a565b6119f19083612c26565b1115611a10576040516310fb985b60e11b815260040160405180910390fd5b611a1a8383612c5b565b9150611a26838b612c5b565b9950611a32838a612c5b565b9850611a3e8a8a6122b1565b9050611a49816122c0565b611a539083612c0f565b9150611a5e8161237c565b611a689083612c0f565b915050611a7681888f6123b2565b611a7e6105a0565b9093509150611a8d8587612c26565b611a978385612c26565b1015611ab6576040516378be6e7360e01b815260040160405180910390fd5b50603d91909155603e55505081516001600160a01b038816915033907fd78ad95fa46c994b6551d0da85fc275fe613ce37657fb8d5e3d130840159d822908690611b0990670de0b6b3a764000090612c26565b86670de0b6b3a76400008d51611b1f9190612c26565b60408051948552602085019390935291830152606082015260800160405180910390a3505050611b4e60018055565b5050505050565b6000611b5f6106d5565b6000611b6a83611e47565b600084815260396020526040812060018101919091556036549192509061271090611b9486610c7d565b611b9e9190612c26565b611ba89190612c5b565b81556037548211611bb95781611bbd565b6037545b92508260386000828254611bd19190612c0f565b925050819055508260376000828254611bea9190612c0f565b90915550611c0f9050611bfc85610b86565b6034546001600160a01b0316908561225f565b837f38436c42bcfd74414acafc159a381bf74b9880bc4c1c9f922686fc7161d9c7ad84604051611c4191815260200190565b60405180910390a25050919050565b611c58612059565b600080611c636105a0565b91509150670de0b6b3a76400008351611c7c9190612c26565b603e54611c899083612c0f565b14611ca7576040516332848fe160e21b815260040160405180910390fd5b611ccc84603d5484611cb99190612c0f565b6034546001600160a01b0316919061225f565b60005b8351811015611d8a5760335484516001600160a01b03909116906342842e0e9030908890889086908110611d0557611d05612d02565b60209081029190910101516040516001600160e01b031960e086901b1681526001600160a01b0393841660048201529290911660248301526044820152606401600060405180830381600087803b158015611d5f57600080fd5b505af1158015611d73573d6000803e3d6000fd5b505050508080611d8290612d18565b915050611ccf565b505050611d9660018055565b5050565b600080611daf6035546001600160a01b031690565b6001600160a01b031663017e7e586040518163ffffffff1660e01b8152600401602060405180830381865afa158015611dec573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e109190612c95565b603a54603c54919250906001600160a01b038316611e2f576000611e33565b603b545b611e3d9190612c7d565b610abf9190612c7d565b600081815260396020526040812060365460385460375414611e9f57611e6b6108ed565b612710603854603754611e7e9190612c0f565b611e889190612c26565b611e929190612c5b565b611e9c9082612c7d565b90505b815461271082611eae87610c7d565b611eb89190612c26565b611ec29190612c5b565b8360010154611ed19190612c7d565b6107879190612c0f565b60006301ffc9a760e01b6001600160e01b031983161480611f0c57506001600160e01b03198216630a85bd0160e11b145b806106cf57506001600160e01b03198216629ce20b60e01b1492915050565b600054610100900460ff16611f525760405162461bcd60e51b815260040161082890612dfd565b603480546001600160a01b039384166001600160a01b031991821617909155603380549284169282169290921790915560358054939092169216919091179055565b600054610100900460ff16611fbb5760405162461bcd60e51b815260040161082890612dfd565b611fc3612472565b565b604051633d27eded60e11b81526004810185905260248101849052604481018390526064810182905260126084820152600090819073__$7361758c0d185160b6cca64507b9678c39$__90637a4fdbda9060a4016040805180830381865af4158015612035573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b799190612e48565b6002600154036120ab5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610828565b6002600155565b6000816000036120c457506000919050565b600060016120d184612499565b901c6001901b905060018184816120ea576120ea612c45565b048201901c9050600181848161210257612102612c45565b048201901c9050600181848161211a5761211a612c45565b048201901c9050600181848161213257612132612c45565b048201901c9050600181848161214a5761214a612c45565b048201901c9050600181848161216257612162612c45565b048201901c9050600181848161217a5761217a612c45565b048201901c905061219a8182858161219457612194612c45565b046121a1565b9392505050565b60008183106121b0578161219a565b5090919050565b60355460405163f0e88e7f60e01b815260048101849052602481018390526001600160a01b039091169063f0e88e7f906044015b600060405180830381600087803b15801561220557600080fd5b505af1158015612219573d6000803e3d6000fd5b505050505050565b60018055565b6035546040516387fe861160e01b815260048101849052602481018390526001600160a01b03909116906387fe8611906044016121eb565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b179052610b6590849061252d565b60008183116121b0578161219a565b6000806122d56035546001600160a01b031690565b6001600160a01b031663017e7e586040518163ffffffff1660e01b8152600401602060405180830381865afa158015612312573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123369190612c95565b603c549091506127109061234a9085612c26565b6123549190612c5b565b91506001600160a01b03811615610e7957603454610e79906001600160a01b0316828461225f565b603b54600090612710906123909084612c26565b61239a9190612c5b565b9050806037546123aa9190612c7d565b603755919050565b82158015906123c457506123c46109bd565b15610b65576000825182516123d99190612c7d565b6123e39085612c5b565b905060005b825181101561243b5761242961241684838151811061240957612409612d02565b6020026020010151610cff565b6034546001600160a01b0316908461225f565b8061243381612d18565b9150506123e8565b5060005b8351811015611b4e5761246061241685838151811061240957612409612d02565b8061246a81612d18565b91505061243f565b600054610100900460ff166122215760405162461bcd60e51b815260040161082890612dfd565b600080608083901c156124ae57608092831c92015b604083901c156124c057604092831c92015b602083901c156124d257602092831c92015b601083901c156124e457601092831c92015b600883901c156124f657600892831c92015b600483901c1561250857600492831c92015b600283901c1561251a57600292831c92015b600183901c156106cf5760010192915050565b6000612582826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166126029092919063ffffffff16565b90508051600014806125a35750808060200190518101906125a39190612cb2565b610b655760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610828565b6060610787848460008585600080866001600160a01b031685876040516126299190612e98565b60006040518083038185875af1925050503d8060008114612666576040519150601f19603f3d011682016040523d82523d6000602084013e61266b565b606091505b509150915061267c87838387612687565b979650505050505050565b606083156126f65782516000036126ef576001600160a01b0385163b6126ef5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610828565b5081610787565b610787838381511561270b5781518083602001fd5b8060405162461bcd60e51b81526004016108289190612eb4565b6001600160a01b038116811461273a57600080fd5b50565b60008083601f84011261274f57600080fd5b50813567ffffffffffffffff81111561276757600080fd5b60208301915083602082850101111561277f57600080fd5b9250929050565b60008060008060008060a0878903121561279f57600080fd5b86356127aa81612725565b9550602087013594506040870135935060608701359250608087013567ffffffffffffffff8111156127db57600080fd5b6127e789828a0161273d565b979a9699509497509295939492505050565b60006020828403121561280b57600080fd5b81356001600160e01b03198116811461219a57600080fd5b60006020828403121561283557600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561287b5761287b61283c565b604052919050565b6000806000806080858703121561289957600080fd5b84356128a481612725565b93506020858101356128b581612725565b935060408601359250606086013567ffffffffffffffff808211156128d957600080fd5b818801915088601f8301126128ed57600080fd5b8135818111156128ff576128ff61283c565b612911601f8201601f19168501612852565b9150808252898482850101111561292757600080fd5b808484018584013760008482840101525080935050505092959194509250565b60008060006060848603121561295c57600080fd5b833561296781612725565b9250602084013561297781612725565b929592945050506040919091013590565b6000806000806080858703121561299e57600080fd5b5050823594602084013594506040840135936060013592509050565b600067ffffffffffffffff8211156129d4576129d461283c565b5060051b60200190565b600082601f8301126129ef57600080fd5b81356020612a046129ff836129ba565b612852565b82815260059290921b84018101918181019086841115612a2357600080fd5b8286015b84811015612a3e5780358352918301918301612a27565b509695505050505050565b600080600060608486031215612a5e57600080fd5b8335612a6981612725565b92506020840135612a7981612725565b9150604084013567ffffffffffffffff811115612a9557600080fd5b612aa1868287016129de565b9150509250925092565b600060808201868352602086818501528560408501526080606085015281855180845260a086019150828701935060005b81811015612af857845183529383019391830191600101612adc565b50909998505050505050505050565b600080600080600060808688031215612b1f57600080fd5b85359450602086013567ffffffffffffffff80821115612b3e57600080fd5b612b4a89838a016129de565b955060408801359150612b5c82612725565b90935060608701359080821115612b7257600080fd5b50612b7f8882890161273d565b969995985093965092949392505050565b60008060408385031215612ba357600080fd5b8235612bae81612725565b9150602083013567ffffffffffffffff811115612bca57600080fd5b612bd6858286016129de565b9150509250929050565b600060208284031215612bf257600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b600082821015612c2157612c21612bf9565b500390565b6000816000190483118215151615612c4057612c40612bf9565b500290565b634e487b7160e01b600052601260045260246000fd5b600082612c7857634e487b7160e01b600052601260045260246000fd5b500490565b60008219821115612c9057612c90612bf9565b500190565b600060208284031215612ca757600080fd5b815161219a81612725565b600060208284031215612cc457600080fd5b8151801515811461219a57600080fd5b60008060408385031215612ce757600080fd5b8251612cf281612725565b6020939093015192949293505050565b634e487b7160e01b600052603260045260246000fd5b600060018201612d2a57612d2a612bf9565b5060010190565b60208152816020820152818360408301376000818301604090810191909152601f909201601f19160101919050565b60008060408385031215612d7357600080fd5b8251915060208084015167ffffffffffffffff811115612d9257600080fd5b8401601f81018613612da357600080fd5b8051612db16129ff826129ba565b81815260059190911b82018301908381019088831115612dd057600080fd5b928401925b82841015612dee57835182529284019290840190612dd5565b80955050505050509250929050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b60008060408385031215612e5b57600080fd5b505080516020909101519092909150565b60005b83811015612e87578181015183820152602001612e6f565b838111156108e75750506000910152565b60008251612eaa818460208701612e6c565b9190910192915050565b6020815260008251806020840152612ed3816040850160208701612e6c565b601f01601f1916919091016040019291505056fea2646970667358221220e16603f7b87a795292b6bd8ccf3115687b5cd2bc9ee587e47489ee4a4bd91bbd64736f6c634300080d0033";

type SeacowsERC721TradePairConstructorParams =
  | [
      linkLibraryAddresses: SeacowsERC721TradePairLibraryAddresses,
      signer?: Signer
    ]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SeacowsERC721TradePairConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class SeacowsERC721TradePair__factory extends ContractFactory {
  constructor(...args: SeacowsERC721TradePairConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        SeacowsERC721TradePair__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: SeacowsERC721TradePairLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$7361758c0d185160b6cca64507b9678c39\\$__", "g"),
      linkLibraryAddresses["contracts/lib/PricingKernel.sol:PricingKernel"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<SeacowsERC721TradePair> {
    return super.deploy(overrides || {}) as Promise<SeacowsERC721TradePair>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): SeacowsERC721TradePair {
    return super.attach(address) as SeacowsERC721TradePair;
  }
  connect(signer: Signer): SeacowsERC721TradePair__factory {
    return super.connect(signer) as SeacowsERC721TradePair__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SeacowsERC721TradePairInterface {
    return new utils.Interface(_abi) as SeacowsERC721TradePairInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SeacowsERC721TradePair {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as SeacowsERC721TradePair;
  }
}

export interface SeacowsERC721TradePairLibraryAddresses {
  ["contracts/lib/PricingKernel.sol:PricingKernel"]: string;
}
