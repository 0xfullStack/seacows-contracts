/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  SeacowsERC721TradePair,
  SeacowsERC721TradePairInterface,
} from "../SeacowsERC721TradePair";

const _abi = [
  {
    inputs: [],
    name: "FM_NON_FEE_MANAGER",
    type: "error",
  },
  {
    inputs: [],
    name: "FM_NON_ROYALTY_FEE_MANAGER",
    type: "error",
  },
  {
    inputs: [],
    name: "RM_NON_ROYALTY_FEE_MANAGER",
    type: "error",
  },
  {
    inputs: [],
    name: "SPMD_ONLY_POSITION_MANAGER",
    type: "error",
  },
  {
    inputs: [],
    name: "SPMD_PAUSED",
    type: "error",
  },
  {
    inputs: [],
    name: "SPM_BELOW_NFT_OUT_MIN_CONSTRAINT",
    type: "error",
  },
  {
    inputs: [],
    name: "SPM_BELOW_TOKEN_OUT_MIN_CONSTRAINT",
    type: "error",
  },
  {
    inputs: [],
    name: "SPM_ETH_TRANSFER_FAILED",
    type: "error",
  },
  {
    inputs: [],
    name: "SPM_EXPIRED",
    type: "error",
  },
  {
    inputs: [],
    name: "SPM_INSUFFICIENT_AMOUNT",
    type: "error",
  },
  {
    inputs: [],
    name: "SPM_INSUFFICIENT_LIQUIDITY",
    type: "error",
  },
  {
    inputs: [],
    name: "SPM_INSUFFICIENT_MINIMUM_LIQUIDITY_AMOUNT",
    type: "error",
  },
  {
    inputs: [],
    name: "SPM_INVALID_TOKEN_ID",
    type: "error",
  },
  {
    inputs: [],
    name: "SPM_ONLY_BURNABLE_WHEN_CLEARED",
    type: "error",
  },
  {
    inputs: [],
    name: "SPM_ONLY_PAIR_CAN_BURN",
    type: "error",
  },
  {
    inputs: [],
    name: "SPM_ONLY_PAIR_CAN_MINT",
    type: "error",
  },
  {
    inputs: [],
    name: "SPM_PAIR_NOT_EXIST",
    type: "error",
  },
  {
    inputs: [],
    name: "SPM_UNAUTHORIZED",
    type: "error",
  },
  {
    inputs: [],
    name: "SSB_ETH_TRANSFER_FAILED",
    type: "error",
  },
  {
    inputs: [],
    name: "SSB_INSUFFICIENT_AMOUNT",
    type: "error",
  },
  {
    inputs: [],
    name: "SSB_ONE_MORE_BLOCK_AT_LEAST",
    type: "error",
  },
  {
    inputs: [],
    name: "SSB_TOKEN_TRANSFER_FAILED",
    type: "error",
  },
  {
    inputs: [],
    name: "SSB_UNAUTHORIZED",
    type: "error",
  },
  {
    inputs: [],
    name: "STPF_PAIR_ALREADY_EXIST",
    type: "error",
  },
  {
    inputs: [],
    name: "STP_EXCEED_NFT_OUT_MAX",
    type: "error",
  },
  {
    inputs: [],
    name: "STP_FEE_OUT_OF_RANGE",
    type: "error",
  },
  {
    inputs: [],
    name: "STP_INSUFFICIENT_INPUT_AMOUNT",
    type: "error",
  },
  {
    inputs: [],
    name: "STP_INSUFFICIENT_LIQUIDITY",
    type: "error",
  },
  {
    inputs: [],
    name: "STP_INSUFFICIENT_LIQUIDITY_BURNED",
    type: "error",
  },
  {
    inputs: [],
    name: "STP_INSUFFICIENT_LIQUIDITY_MINTED",
    type: "error",
  },
  {
    inputs: [],
    name: "STP_INSUFFICIENT_MIN_FEE",
    type: "error",
  },
  {
    inputs: [],
    name: "STP_INSUFFICIENT_NFT_TO_WITHDRAW",
    type: "error",
  },
  {
    inputs: [],
    name: "STP_INSUFFICIENT_OUTPUT_AMOUNT",
    type: "error",
  },
  {
    inputs: [],
    name: "STP_INVALID_FEE",
    type: "error",
  },
  {
    inputs: [],
    name: "STP_INVALID_TO",
    type: "error",
  },
  {
    inputs: [],
    name: "STP_K",
    type: "error",
  },
  {
    inputs: [],
    name: "STP_OVERFLOW",
    type: "error",
  },
  {
    inputs: [],
    name: "STP_SKIM_QUANTITY_MISMATCH",
    type: "error",
  },
  {
    inputs: [],
    name: "STP_UNAUTHORIZED",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "cTokenOut",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "cNftOut",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenAmountOut",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "idsOut",
        type: "uint256[]",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "Burn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "fee",
        type: "uint256",
      },
    ],
    name: "CollectFee",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "nftAmount",
        type: "uint256",
      },
    ],
    name: "Mint",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenIn",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "nftIn",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenOut",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "nftOut",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "Swap",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "reserve0",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "reserve1",
        type: "uint256",
      },
    ],
    name: "Sync",
    type: "event",
  },
  {
    inputs: [],
    name: "ACC_REWARD_PER_SHARE_PRECISION",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "COMPLEMENT_PRECISION",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "COMPLEMENT_PRECISION_DIGITS",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_PROTOCOL_FEE_PERCENT",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ONE_PERCENT",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PERCENTAGE_PRECISION",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "POINT_FIVE_PERCENT",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "accRewardPerShare",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "_ids",
        type: "uint256[]",
      },
    ],
    name: "burn",
    outputs: [
      {
        internalType: "uint256",
        name: "cTokenOut",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "cNftOut",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "tokenOut",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "idsOut",
        type: "uint256[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenBalance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_nftBalance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_tokenExpectedOut",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_nftExpectedOut",
        type: "uint256",
      },
    ],
    name: "caculateAssetsOutAfterComplemented",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "collect",
    outputs: [
      {
        internalType: "uint256",
        name: "_fee",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "collection",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feeBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feePercent",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getComplementedBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "tokenBalance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "nftBalance",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "getPendingFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getReserves",
    outputs: [
      {
        internalType: "uint256",
        name: "_reserve0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_reserve1",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "_blockTimestampLast",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "getRoyaltyRecipient",
    outputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token_",
        type: "address",
      },
      {
        internalType: "address",
        name: "collection_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "fee_",
        type: "uint256",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "isRoyaltySupported",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastFeeBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minRoyaltyFeePercent",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minTotalFeePercent",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "toTokenId",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [
      {
        internalType: "uint256",
        name: "liquidity",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_operator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_fromTokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_toTokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "onERC3525Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC721Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "positionInfos",
    outputs: [
      {
        internalType: "uint256",
        name: "feeDebt",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "unclaimedFee",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "positionManager",
    outputs: [
      {
        internalType: "contract ISeacowsPositionManager",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "price0CumulativeLast",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "price1CumulativeLast",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "protocolFeePercent",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "royaltyFeeManager",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "royaltyRegistry",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_percent",
        type: "uint256",
      },
    ],
    name: "setMinRoyaltyFeePercent",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_protocolFee",
        type: "uint256",
      },
    ],
    name: "setProtocolFeePercent",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "skim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "slot",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenAmountOut",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "idsOut",
        type: "uint256[]",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "swap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "sync",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "updatePositionFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "updatePositionFeeDebt",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "updateSwapFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50613243806100206000396000f3fe608060405234801561001057600080fd5b506004361061029f5760003560e01c80639cc7f70811610167578063c07bff9f116100ce578063e5f9e83b11610087578063e5f9e83b146105d2578063e86a8319146105db578063f78db9b8146105e3578063f8863898146105eb578063fc0c546a146105fe578063fff6cae91461061157600080fd5b8063c07bff9f1461056d578063ce3f865f14610580578063d6e6eb9f14610593578063db8cd5891461059c578063e256888f146105b6578063e5d4088e146105bf57600080fd5b8063a498342111610120578063a4983421146104f2578063a7439ac414610505578063a74d5f301461050d578063bb2eb4d21461052f578063bfb7f05e14610537578063c0463ac51461055a57600080fd5b80639cc7f708146104995780639e75baa7146104ac578063a015a3d8146104bb578063a0712d68146104ce578063a11b0712146104e1578063a1cb5a8a146104e957600080fd5b806354fb39211161020b5780636352211e116101c45780636352211e14610430578063791b98bc1461045b5780637de1e5361461046c5780637fd6f15c1461047f57806387e4401f14610488578063939d62371461049057600080fd5b806354fb3921146103e75780635909c0d5146103fa5780635a3d5493146104035780635c2454b41461040c5780635c975abb1461041f57806360b71d4e1461042757600080fd5b806317893e3c1161025d57806317893e3c146103695780631794bb3c146103a557806318160ddd146103b85780631a88bc66146103ce5780631da8afb3146103d65780633c97d5ae146103de57600080fd5b80629ce20b146102a457806301ffc9a7146102e15780630902f1ac146103045780630c472afd1461032e5780630c6bc62b14610338578063150b7a021461034b575b600080fd5b6102c36102b2366004612afc565b629ce20b60e01b9695505050505050565b6040516001600160e01b031990911681526020015b60405180910390f35b6102f46102ef366004612b6f565b610619565b60405190151581526020016102d8565b603d54603e54603f5460408051938452602084019290925263ffffffff16908201526060016102d8565b610336610645565b005b610336610346366004612b99565b6106b0565b6102c3610359366004612bf9565b630a85bd0160e11b949350505050565b610390610377366004612b99565b6039602052600090815260409020805460019091015482565b604080519283526020830191909152016102d8565b6103366103b3366004612cbd565b6106ee565b6103c061084c565b6040519081526020016102d8565b6103c06108da565b6102f461091c565b6103c061271081565b6103366103f5366004612b99565b610a2a565b6103c060405481565b6103c060415481565b61039061041a366004612cfe565b610ac9565b6102f4610ae5565b6103c060375481565b61044361043e366004612b99565b610b5a565b6040516001600160a01b0390911681526020016102d8565b6035546001600160a01b0316610443565b603354610443906001600160a01b031681565b6103c0603b5481565b610443610bdc565b6103c060365481565b6103c06104a7366004612b99565b610c51565b6103c0670de0b6b3a764000081565b6104436104c9366004612b99565b610cd3565b6103c06104dc366004612b99565b610e54565b610443610f9a565b6103c060385481565b610336610500366004612b99565b610feb565b6103906110ae565b6105166103e881565b60405167ffffffffffffffff90911681526020016102d8565b610516606481565b61054a610545366004612dbf565b6111b7565b6040516102d89493929190612e21565b610336610568366004612b99565b611800565b61033661057b366004612e7d565b611867565b6103c061058e366004612b99565b611d8a565b6103c0603c5481565b6105a4601281565b60405160ff90911681526020016102d8565b61051661271081565b6103366105cd366004612f06565b611ef1565b6103c0603a5481565b6103c06120aa565b610516603281565b6103c06105f9366004612b99565b612157565b603454610443906001600160a01b031681565b6103366121f3565b600061062482612227565b8061063f5750636bc0dc1f60e01b6001600160e01b03198316145b92915050565b600061064f61084c565b90506038546037541480610661575080155b156106695750565b8061271060385460375461067d9190612f6c565b6106879190612f83565b6106919190612fb8565b603660008282546106a29190612fcc565b909155505060375460385550565b6106b8610bdc565b6001600160a01b0316336001600160a01b0316146106e957604051632a9e285560e11b815260040160405180910390fd5b603a55565b600054610100900460ff161580801561070e5750600054600160ff909116105b806107285750303b158015610728575060005460ff166001145b6107905760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084015b60405180910390fd5b6000805460ff1916600117905580156107b3576000805461ff0019166101001790555b606482148015906107c5575060328214155b156107e357604051636301f06d60e11b815260040160405180910390fd5b603b8290556003603c556107f8338585612277565b6108006122e0565b8015610846576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50505050565b60006108606035546001600160a01b031690565b6001600160a01b03166388200bb96108766108da565b6040518263ffffffff1660e01b815260040161089491815260200190565b602060405180830381865afa1580156108b1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108d59190612fe4565b905090565b60006108ee6035546001600160a01b031690565b60405163add21d2560e01b81523060048201526001600160a01b03919091169063add21d2590602401610894565b600080610927610f9a565b6001600160a01b031614610a2457600061093f610f9a565b60335460405163de5488af60e01b81526001600160a01b03918216600482015291169063de5488af90602401602060405180830381865afa158015610988573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109ac9190612ffd565b6040516301ffc9a760e01b815263152a902d60e11b60048201529091506001600160a01b038216906301ffc9a790602401602060405180830381865afa1580156109fa573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a1e919061301a565b91505090565b50600090565b6035546001600160a01b03163314610a555760405163975e14bb60e01b815260040160405180910390fd5b600081815260396020526040812090610a6d83610c51565b90508015610ac4576000826000015461271060365484610a8d9190612f83565b610a979190612fb8565b610aa19190612f6c565b905080156108465780836001016000828254610abd9190612fcc565b9091555050505b505050565b600080610ad88686868661230f565b9150915094509492505050565b6000610af96035546001600160a01b031690565b6001600160a01b031663b187bd266040518163ffffffff1660e01b8152600401602060405180830381865afa158015610b36573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108d5919061301a565b6000610b6e6035546001600160a01b031690565b6001600160a01b0316636352211e836040518263ffffffff1660e01b8152600401610b9b91815260200190565b602060405180830381865afa158015610bb8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061063f9190612ffd565b6000610bf06035546001600160a01b031690565b6001600160a01b03166387e4401f6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610c2d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108d59190612ffd565b6000610c656035546001600160a01b031690565b6001600160a01b0316639cc7f708836040518263ffffffff1660e01b8152600401610c9291815260200190565b602060405180830381865afa158015610caf573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061063f9190612fe4565b600080610cde610f9a565b6001600160a01b031614610e4f576000610cf6610f9a565b60335460405163de5488af60e01b81526001600160a01b03918216600482015291169063de5488af90602401602060405180830381865afa158015610d3f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d639190612ffd565b6040516301ffc9a760e01b815263152a902d60e11b60048201529091506001600160a01b038216906301ffc9a790602401602060405180830381865afa158015610db1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dd5919061301a565b15610e4d5760405163152a902d60e11b815260048101849052600060248201526001600160a01b03821690632a55205a906044016040805180830381865afa158015610e25573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e49919061303c565b5091505b505b919050565b6000610e5e610ae5565b15610e7c5760405163a81b9f0560e01b815260040160405180910390fd5b610e846123a3565b603d54603e54600080610e956110ae565b90925090506000610ea68584612f6c565b90506000610eb48584612f6c565b90506000610ec061084c565b905080600003610ee357610edc610ed78385612f83565b6123fc565b9750610f18565b610f1587610ef18386612f83565b610efb9190612fb8565b87610f068486612f83565b610f109190612fb8565b6124eb565b97505b60008811610f3957604051632c82cdd360e11b815260040160405180910390fd5b610f438989612501565b610f4f8585898961256b565b604080518481526020810184905233917f4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f910160405180910390a250505050505050610e4f60018055565b6000610fae6035546001600160a01b031690565b6001600160a01b031663a11b07126040518163ffffffff1660e01b8152600401602060405180830381865afa158015610c2d573d6000803e3d6000fd5b33610ffe6035546001600160a01b031690565b6001600160a01b031663d0fb02036040518163ffffffff1660e01b8152600401602060405180830381865afa15801561103b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061105f9190612ffd565b6001600160a01b031614611086576040516333cf93eb60e11b815260040160405180910390fd5b6103e88111156110a957604051630737667760e11b815260040160405180910390fd5b603c55565b6037546034546040516370a0823160e01b8152306004820152600092839290916001600160a01b03909116906370a0823190602401602060405180830381865afa158015611100573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111249190612fe4565b61112e9190612f6c565b6033546040516370a0823160e01b8152306004820152919350670de0b6b3a7640000916001600160a01b03909116906370a0823190602401602060405180830381865afa158015611183573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111a79190612fe4565b6111b19190612f83565b90509091565b600080600060606111c6610ae5565b156111e45760405163a81b9f0560e01b815260040160405180910390fd5b6111ec6123a3565b6000806111f76110ae565b91509150600061120f6035546001600160a01b031690565b6040516321761c7160e11b815230600482015290915060009081906001600160a01b03841690639cc7f7089082906342ec38e290602401602060405180830381865afa158015611263573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112879190612fe4565b6040518263ffffffff1660e01b81526004016112a591815260200190565b602060405180830381865afa1580156112c2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112e69190612fe4565b90506112f061084c565b6112fa8683612f83565b6113049190612fb8565b985061130e61084c565b6113188583612f83565b6113229190612fb8565b975088158061132f575087155b1561134d57604051633f04d0db60e11b815260040160405180910390fd5b600061135b86868c8c61230f565b6040516321761c7160e11b815230600482015291995091506113d2906001600160a01b038616906342ec38e290602401602060405180830381865afa1580156113a8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113cc9190612fe4565b83612685565b6113e4670de0b6b3a764000082612fb8565b6034546040516370a0823160e01b81523060048201529194506001600160a01b0316906370a0823190602401602060405180830381865afa15801561142d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114519190612fe4565b8811156114c7576034546040516370a0823160e01b81523060048201526001600160a01b03909116906370a0823190602401602060405180830381865afa1580156114a0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114c49190612fe4565b97505b505080895110156114eb57604051630f19e6dd60e41b815260040160405180910390fd5b60345460405163a9059cbb60e01b81526001600160a01b038c81166004830152602482018990529091169063a9059cbb906044016020604051808303816000875af115801561153e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611562919061301a565b508067ffffffffffffffff81111561157c5761157c612bb2565b6040519080825280602002602001820160405280156115a5578160200160208202803683370190505b5094506000805b82821080156115bb57508a5181105b15611754576033548b5130916001600160a01b031690636352211e908e90859081106115e9576115e961306a565b60200260200101516040518263ffffffff1660e01b815260040161160f91815260200190565b602060405180830381865afa15801561162c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116509190612ffd565b6001600160a01b031603611742576033548b516001600160a01b03909116906342842e0e9030908f908f908690811061168b5761168b61306a565b60209081029190910101516040516001600160e01b031960e086901b1681526001600160a01b0393841660048201529290911660248301526044820152606401600060405180830381600087803b1580156116e557600080fd5b505af11580156116f9573d6000803e3d6000fd5b505050508a818151811061170f5761170f61306a565b60200260200101518783815181106117295761172961306a565b60209081029190910101528161173e81613080565b9250505b8061174c81613080565b9150506115ac565b82821461177457604051631796524360e31b815260040160405180910390fd5b505061177e6110ae565b603d54603e54929650909450906117978686848461256b565b5050896001600160a01b0316336001600160a01b03167f8c54d40e52af817976c5f2b138403a5ff53b552d179dc91099fd8d789ebf70738a8a8a8a6040516117e29493929190612e21565b60405180910390a3505050506117f760018055565b93509350935093565b6035546001600160a01b0316331461182b5760405163975e14bb60e01b815260040160405180910390fd5b60008181526039602052604081209061184383610c51565b9050612710603654826118569190612f83565b6118609190612fb8565b9091555050565b61186f610ae5565b1561188d5760405163a81b9f0560e01b815260040160405180910390fd5b6118956123a3565b841580156118a257508351155b156118c0576040516335e1f2d160e11b815260040160405180910390fd5b60008060606000806118e1603d54603e54603f549192909163ffffffff1690565b5091509150818a101580611909575080670de0b6b3a76400008a516119069190612f83565b10155b15611927576040516341cb3f0b60e01b815260040160405180910390fd5b6040516341bc698d60e01b815260009033906341bc698d9061194f908b908b90600401613099565b6000604051808303816000875af115801561196e573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261199691908101906130c8565b94509050801580156119a757508351155b156119c5576040516397bc6fa360e01b815260040160405180910390fd5b6034546001600160a01b038a8116911614806119ee57506033546001600160a01b038a81169116145b15611a0c57604051631ec8b2d360e11b815260040160405180910390fd5b8a15611a8b5760345460405163a9059cbb60e01b81526001600160a01b038b81166004830152602482018e90529091169063a9059cbb906044016020604051808303816000875af1158015611a65573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a89919061301a565b505b895115611b525760005b8a51811015611b50576033548b516001600160a01b03909116906342842e0e9030908d908f9086908110611acb57611acb61306a565b60209081029190910101516040516001600160e01b031960e086901b1681526001600160a01b0393841660048201529290911660248301526044820152606401600060405180830381600087803b158015611b2557600080fd5b505af1158015611b39573d6000803e3d6000fd5b505050508080611b4890613080565b915050611a95565b505b600080611b5d6110ae565b90925090506000611b6e8587612f83565b611b788385612f83565b611b829190612f6c565b9050603d548311611b94576000611bb8565b8082603d5485611ba49190612f6c565b611bae9190612f83565b611bb89190612f6c565b985082603d5411611bca576000611bee565b808284603d54611bda9190612f6c565b611be49190612f83565b611bee9190612fcc565b97506000611bfc8a8a6126bd565b9050611c0a61271083612f83565b611c126120aa565b611c1c9083612f83565b1115611c3b576040516310fb985b60e11b815260040160405180910390fd5b611c458383612fb8565b9150611c51838b612fb8565b9950611c5d838a612fb8565b9850611c698a8a6126bd565b9050611c74816126cc565b611c7e9083612f6c565b9150611c89816127ef565b611c939083612f6c565b915050611ca181888f612825565b611ca96110ae565b9093509150611cb88587612f83565b611cc28385612f83565b1015611ce1576040516378be6e7360e01b815260040160405180910390fd5b611ced8383888861256b565b505050505050856001600160a01b0316336001600160a01b03167fd78ad95fa46c994b6551d0da85fc275fe613ce37657fb8d5e3d130840159d82285670de0b6b3a76400008551611d3e9190612f83565b86670de0b6b3a76400008d51611d549190612f83565b60408051948552602085019390935291830152606082015260800160405180910390a3505050611d8360018055565b5050505050565b6000611d94610645565b6000611d9f83612157565b600084815260396020526040812060018101919091556036549192509061271090611dc986610c51565b611dd39190612f83565b611ddd9190612fb8565b81556037548211611dee5781611df2565b6037545b92508260386000828254611e069190612f6c565b925050819055508260376000828254611e1f9190612f6c565b90915550506034546001600160a01b031663a9059cbb611e3e86610b5a565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602481018690526044016020604051808303816000875af1158015611e8b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611eaf919061301a565b50837f38436c42bcfd74414acafc159a381bf74b9880bc4c1c9f922686fc7161d9c7ad84604051611ee291815260200190565b60405180910390a25050919050565b611ef96123a3565b600080611f046110ae565b91509150670de0b6b3a76400008351611f1d9190612f83565b603e54611f2a9083612f6c565b14611f48576040516332848fe160e21b815260040160405180910390fd5b603454603d546001600160a01b039091169063a9059cbb908690611f6c9086612fb8565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af1158015611fb7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611fdb919061301a565b5060005b835181101561209a5760335484516001600160a01b03909116906342842e0e90309088908890869081106120155761201561306a565b60209081029190910101516040516001600160e01b031960e086901b1681526001600160a01b0393841660048201529290911660248301526044820152606401600060405180830381600087803b15801561206f57600080fd5b505af1158015612083573d6000803e3d6000fd5b50505050808061209290613080565b915050611fdf565b5050506120a660018055565b5050565b6000806120bf6035546001600160a01b031690565b6001600160a01b031663017e7e586040518163ffffffff1660e01b8152600401602060405180830381865afa1580156120fc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906121209190612ffd565b603a54603c54919250906001600160a01b03831661213f576000612143565b603b545b61214d9190612fcc565b610a1e9190612fcc565b6000818152603960205260408120603654603854603754146121af5761217b61084c565b61271060385460375461218e9190612f6c565b6121989190612f83565b6121a29190612fb8565b6121ac9082612fcc565b90505b8154612710826121be87610c51565b6121c89190612f83565b6121d29190612fb8565b83600101546121e19190612fcc565b6121eb9190612f6c565b949350505050565b6121fb6123a3565b6000806122066110ae565b9150915061221a8282603d54603e5461256b565b505061222560018055565b565b60006301ffc9a760e01b6001600160e01b03198316148061225857506001600160e01b03198216630a85bd0160e11b145b8061063f57506001600160e01b03198216629ce20b60e01b1492915050565b600054610100900460ff1661229e5760405162461bcd60e51b815260040161078790613165565b603480546001600160a01b039384166001600160a01b031991821617909155603380549284169282169290921790915560358054939092169216919091179055565b600054610100900460ff166123075760405162461bcd60e51b815260040161078790613165565b6122256129e0565b604051633d27eded60e11b81526004810185905260248101849052604481018390526064810182905260126084820152600090819073__$7361758c0d185160b6cca64507b9678c39$__90637a4fdbda9060a4016040805180830381865af415801561237f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ad891906131b0565b6002600154036123f55760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610787565b6002600155565b60008160000361240e57506000919050565b6000600161241b84612a07565b901c6001901b9050600181848161243457612434612fa2565b048201901c9050600181848161244c5761244c612fa2565b048201901c9050600181848161246457612464612fa2565b048201901c9050600181848161247c5761247c612fa2565b048201901c9050600181848161249457612494612fa2565b048201901c905060018184816124ac576124ac612fa2565b048201901c905060018184816124c4576124c4612fa2565b048201901c90506124e4818285816124de576124de612fa2565b046124eb565b9392505050565b60008183106124fa57816124e4565b5090919050565b60355460405163f0e88e7f60e01b815260048101849052602481018390526001600160a01b039091169063f0e88e7f906044015b600060405180830381600087803b15801561254f57600080fd5b505af1158015612563573d6000803e3d6000fd5b505050505050565b600061257c640100000000426131d4565b603f549091506000906125959063ffffffff16836131e8565b905060008163ffffffff161180156125ac57508315155b80156125b757508215155b1561261f5763ffffffff81166125cd8585612fb8565b6125d79190612f83565b604060008282546125e89190612fcc565b909155505063ffffffff81166125fe8486612fb8565b6126089190612f83565b604160008282546126199190612fcc565b90915550505b603d869055603e859055603f805463ffffffff191663ffffffff841617905560408051878152602081018790527fcf2aa50876cdfbb541206f89af0ee78d44a2abf8d328e37fa4917f982149848a910160405180910390a1505050505050565b60018055565b6035546040516387fe861160e01b815260048101849052602481018390526001600160a01b03909116906387fe861190604401612535565b60008183116124fa57816124e4565b6000806126e16035546001600160a01b031690565b6001600160a01b031663017e7e586040518163ffffffff1660e01b8152600401602060405180830381865afa15801561271e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906127429190612ffd565b603c54909150612710906127569085612f83565b6127609190612fb8565b91506001600160a01b03811615610e4d5760345460405163a9059cbb60e01b81526001600160a01b038381166004830152602482018590529091169063a9059cbb906044016020604051808303816000875af11580156127c4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906127e8919061301a565b5050919050565b603b54600090612710906128039084612f83565b61280d9190612fb8565b90508060375461281d9190612fcc565b603755919050565b8215801590612837575061283761091c565b15610ac45760008251825161284c9190612fcc565b6128569085612fb8565b905060005b82518110156129225760345483516001600160a01b039091169063a9059cbb9061289e908690859081106128915761289161306a565b6020026020010151610cd3565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602481018590526044016020604051808303816000875af11580156128eb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061290f919061301a565b508061291a81613080565b91505061285b565b5060005b8351811015611d835760345484516001600160a01b039091169063a9059cbb9061295c908790859081106128915761289161306a565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602481018590526044016020604051808303816000875af11580156129a9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906129cd919061301a565b50806129d881613080565b915050612926565b600054610100900460ff1661267f5760405162461bcd60e51b815260040161078790613165565b600080608083901c15612a1c57608092831c92015b604083901c15612a2e57604092831c92015b602083901c15612a4057602092831c92015b601083901c15612a5257601092831c92015b600883901c15612a6457600892831c92015b600483901c15612a7657600492831c92015b600283901c15612a8857600292831c92015b600183901c1561063f5760010192915050565b6001600160a01b0381168114612ab057600080fd5b50565b60008083601f840112612ac557600080fd5b50813567ffffffffffffffff811115612add57600080fd5b602083019150836020828501011115612af557600080fd5b9250929050565b60008060008060008060a08789031215612b1557600080fd5b8635612b2081612a9b565b9550602087013594506040870135935060608701359250608087013567ffffffffffffffff811115612b5157600080fd5b612b5d89828a01612ab3565b979a9699509497509295939492505050565b600060208284031215612b8157600080fd5b81356001600160e01b0319811681146124e457600080fd5b600060208284031215612bab57600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715612bf157612bf1612bb2565b604052919050565b60008060008060808587031215612c0f57600080fd5b8435612c1a81612a9b565b9350602085810135612c2b81612a9b565b935060408601359250606086013567ffffffffffffffff80821115612c4f57600080fd5b818801915088601f830112612c6357600080fd5b813581811115612c7557612c75612bb2565b612c87601f8201601f19168501612bc8565b91508082528984828501011115612c9d57600080fd5b808484018584013760008482840101525080935050505092959194509250565b600080600060608486031215612cd257600080fd5b8335612cdd81612a9b565b92506020840135612ced81612a9b565b929592945050506040919091013590565b60008060008060808587031215612d1457600080fd5b5050823594602084013594506040840135936060013592509050565b600067ffffffffffffffff821115612d4a57612d4a612bb2565b5060051b60200190565b600082601f830112612d6557600080fd5b81356020612d7a612d7583612d30565b612bc8565b82815260059290921b84018101918181019086841115612d9957600080fd5b8286015b84811015612db45780358352918301918301612d9d565b509695505050505050565b600080600060608486031215612dd457600080fd5b8335612ddf81612a9b565b92506020840135612def81612a9b565b9150604084013567ffffffffffffffff811115612e0b57600080fd5b612e1786828701612d54565b9150509250925092565b600060808201868352602086818501528560408501526080606085015281855180845260a086019150828701935060005b81811015612e6e57845183529383019391830191600101612e52565b50909998505050505050505050565b600080600080600060808688031215612e9557600080fd5b85359450602086013567ffffffffffffffff80821115612eb457600080fd5b612ec089838a01612d54565b955060408801359150612ed282612a9b565b90935060608701359080821115612ee857600080fd5b50612ef588828901612ab3565b969995985093965092949392505050565b60008060408385031215612f1957600080fd5b8235612f2481612a9b565b9150602083013567ffffffffffffffff811115612f4057600080fd5b612f4c85828601612d54565b9150509250929050565b634e487b7160e01b600052601160045260246000fd5b600082821015612f7e57612f7e612f56565b500390565b6000816000190483118215151615612f9d57612f9d612f56565b500290565b634e487b7160e01b600052601260045260246000fd5b600082612fc757612fc7612fa2565b500490565b60008219821115612fdf57612fdf612f56565b500190565b600060208284031215612ff657600080fd5b5051919050565b60006020828403121561300f57600080fd5b81516124e481612a9b565b60006020828403121561302c57600080fd5b815180151581146124e457600080fd5b6000806040838503121561304f57600080fd5b825161305a81612a9b565b6020939093015192949293505050565b634e487b7160e01b600052603260045260246000fd5b60006001820161309257613092612f56565b5060010190565b60208152816020820152818360408301376000818301604090810191909152601f909201601f19160101919050565b600080604083850312156130db57600080fd5b8251915060208084015167ffffffffffffffff8111156130fa57600080fd5b8401601f8101861361310b57600080fd5b8051613119612d7582612d30565b81815260059190911b8201830190838101908883111561313857600080fd5b928401925b828410156131565783518252928401929084019061313d565b80955050505050509250929050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b600080604083850312156131c357600080fd5b505080516020909101519092909150565b6000826131e3576131e3612fa2565b500690565b600063ffffffff8381169083168181101561320557613205612f56565b03939250505056fea264697066735822122003ac2e2780f51c63947b47314f3b6fdf4a202660e3f9919f6494b92ab4f184f164736f6c634300080d0033";

type SeacowsERC721TradePairConstructorParams =
  | [
      linkLibraryAddresses: SeacowsERC721TradePairLibraryAddresses,
      signer?: Signer
    ]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SeacowsERC721TradePairConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class SeacowsERC721TradePair__factory extends ContractFactory {
  constructor(...args: SeacowsERC721TradePairConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        SeacowsERC721TradePair__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: SeacowsERC721TradePairLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$7361758c0d185160b6cca64507b9678c39\\$__", "g"),
      linkLibraryAddresses["contracts/lib/PricingKernel.sol:PricingKernel"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<SeacowsERC721TradePair> {
    return super.deploy(overrides || {}) as Promise<SeacowsERC721TradePair>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): SeacowsERC721TradePair {
    return super.attach(address) as SeacowsERC721TradePair;
  }
  connect(signer: Signer): SeacowsERC721TradePair__factory {
    return super.connect(signer) as SeacowsERC721TradePair__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SeacowsERC721TradePairInterface {
    return new utils.Interface(_abi) as SeacowsERC721TradePairInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SeacowsERC721TradePair {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as SeacowsERC721TradePair;
  }
}

export interface SeacowsERC721TradePairLibraryAddresses {
  ["contracts/lib/PricingKernel.sol:PricingKernel"]: string;
}
