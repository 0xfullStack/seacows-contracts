/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  SeacowsERC721TradePair,
  SeacowsERC721TradePairInterface,
} from "../SeacowsERC721TradePair";

const _abi = [
  {
    inputs: [],
    name: "FM_NON_FEE_MANAGER",
    type: "error",
  },
  {
    inputs: [],
    name: "FM_NON_ROYALTY_FEE_MANAGER",
    type: "error",
  },
  {
    inputs: [],
    name: "RM_NON_ROYALTY_FEE_MANAGER",
    type: "error",
  },
  {
    inputs: [],
    name: "SPMD_ONLY_POSITION_MANAGER",
    type: "error",
  },
  {
    inputs: [],
    name: "SPMD_PAUSED",
    type: "error",
  },
  {
    inputs: [],
    name: "SPM_BELOW_NFT_OUT_MIN_CONSTRAINT",
    type: "error",
  },
  {
    inputs: [],
    name: "SPM_BELOW_TOKEN_OUT_MIN_CONSTRAINT",
    type: "error",
  },
  {
    inputs: [],
    name: "SPM_ETH_TRANSFER_FAILED",
    type: "error",
  },
  {
    inputs: [],
    name: "SPM_EXPIRED",
    type: "error",
  },
  {
    inputs: [],
    name: "SPM_INSUFFICIENT_AMOUNT",
    type: "error",
  },
  {
    inputs: [],
    name: "SPM_INSUFFICIENT_LIQUIDITY",
    type: "error",
  },
  {
    inputs: [],
    name: "SPM_INSUFFICIENT_MINIMUM_LIQUIDITY_AMOUNT",
    type: "error",
  },
  {
    inputs: [],
    name: "SPM_INVALID_TOKEN_ID",
    type: "error",
  },
  {
    inputs: [],
    name: "SPM_ONLY_BURNABLE_WHEN_CLEARED",
    type: "error",
  },
  {
    inputs: [],
    name: "SPM_ONLY_PAIR_CAN_BURN",
    type: "error",
  },
  {
    inputs: [],
    name: "SPM_ONLY_PAIR_CAN_MINT",
    type: "error",
  },
  {
    inputs: [],
    name: "SPM_PAIR_NOT_EXIST",
    type: "error",
  },
  {
    inputs: [],
    name: "SPM_TOKEN_TRANSFER_FAILED",
    type: "error",
  },
  {
    inputs: [],
    name: "SSB_ETH_TRANSFER_FAILED",
    type: "error",
  },
  {
    inputs: [],
    name: "SSB_INSUFFICIENT_AMOUNT",
    type: "error",
  },
  {
    inputs: [],
    name: "SSB_ONE_MORE_BLOCK_AT_LEAST",
    type: "error",
  },
  {
    inputs: [],
    name: "SSB_UNAUTHORIZED",
    type: "error",
  },
  {
    inputs: [],
    name: "STPF_PAIR_ALREADY_EXIST",
    type: "error",
  },
  {
    inputs: [],
    name: "STPF_ZERO_ADDRESS",
    type: "error",
  },
  {
    inputs: [],
    name: "STP_EXCEED_NFT_OUT_MAX",
    type: "error",
  },
  {
    inputs: [],
    name: "STP_FEE_OUT_OF_RANGE",
    type: "error",
  },
  {
    inputs: [],
    name: "STP_INSUFFICIENT_INPUT_AMOUNT",
    type: "error",
  },
  {
    inputs: [],
    name: "STP_INSUFFICIENT_LIQUIDITY",
    type: "error",
  },
  {
    inputs: [],
    name: "STP_INSUFFICIENT_LIQUIDITY_BURNED",
    type: "error",
  },
  {
    inputs: [],
    name: "STP_INSUFFICIENT_LIQUIDITY_MINTED",
    type: "error",
  },
  {
    inputs: [],
    name: "STP_INSUFFICIENT_MIN_FEE",
    type: "error",
  },
  {
    inputs: [],
    name: "STP_INSUFFICIENT_NFT_TO_WITHDRAW",
    type: "error",
  },
  {
    inputs: [],
    name: "STP_INSUFFICIENT_OUTPUT_AMOUNT",
    type: "error",
  },
  {
    inputs: [],
    name: "STP_INVALID_FEE",
    type: "error",
  },
  {
    inputs: [],
    name: "STP_INVALID_TO",
    type: "error",
  },
  {
    inputs: [],
    name: "STP_K",
    type: "error",
  },
  {
    inputs: [],
    name: "STP_SKIM_QUANTITY_MISMATCH",
    type: "error",
  },
  {
    inputs: [],
    name: "STP_UNAUTHORIZED",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "cTokenOut",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "cNftOut",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenAmountOut",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "idsOut",
        type: "uint256[]",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "Burn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "fee",
        type: "uint256",
      },
    ],
    name: "CollectFee",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "nftAmount",
        type: "uint256",
      },
    ],
    name: "Mint",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenIn",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "nftIn",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenOut",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "nftOut",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "Swap",
    type: "event",
  },
  {
    inputs: [],
    name: "ACC_REWARD_PER_SHARE_PRECISION",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "COMPLEMENT_PRECISION",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "COMPLEMENT_PRECISION_DIGITS",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_PROTOCOL_FEE_PERCENT",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ONE_PERCENT",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PERCENTAGE_PRECISION",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "POINT_FIVE_PERCENT",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "accRewardPerShare",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "_ids",
        type: "uint256[]",
      },
    ],
    name: "burn",
    outputs: [
      {
        internalType: "uint256",
        name: "cTokenOut",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "cNftOut",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "tokenOut",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "idsOut",
        type: "uint256[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenBalance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_nftBalance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_tokenExpectedOut",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_nftExpectedOut",
        type: "uint256",
      },
    ],
    name: "caculateAssetsOutAfterComplemented",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "collect",
    outputs: [
      {
        internalType: "uint256",
        name: "_fee",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "collection",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feeBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feePercent",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getBalances",
    outputs: [
      {
        internalType: "uint256",
        name: "_balance0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_balance1",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "getPendingFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getReserves",
    outputs: [
      {
        internalType: "uint256",
        name: "_reserve0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_reserve1",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "getRoyaltyRecipient",
    outputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token_",
        type: "address",
      },
      {
        internalType: "address",
        name: "collection_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "fee_",
        type: "uint256",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "isRoyaltySupported",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastFeeBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minRoyaltyFeePercent",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minTotalFeePercent",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "toTokenId",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [
      {
        internalType: "uint256",
        name: "liquidity",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_operator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_fromTokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_toTokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "onERC3525Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC721Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "positionInfos",
    outputs: [
      {
        internalType: "uint256",
        name: "feeDebt",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "unclaimedFee",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "positionManager",
    outputs: [
      {
        internalType: "contract ISeacowsPositionManager",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "protocolFeePercent",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "royaltyFeeManager",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "royaltyRegistry",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_percent",
        type: "uint256",
      },
    ],
    name: "setMinRoyaltyFeePercent",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_protocolFee",
        type: "uint256",
      },
    ],
    name: "setProtocolFeePercent",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "skim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "slot",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenAmountOut",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "idsOut",
        type: "uint256[]",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "swap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "updatePositionFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "updatePositionFeeDebt",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "updateSwapFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50613017806100206000396000f3fe608060405234801561001057600080fd5b506004361061027d5760003560e01c8063939d62371161015c578063c0463ac5116100ce578063e5d4088e11610087578063e5d4088e14610561578063e5f9e83b14610574578063e86a83191461057d578063f78db9b814610585578063f88638981461058d578063fc0c546a146105a057600080fd5b8063c0463ac5146104fc578063c07bff9f1461050f578063ce3f865f14610522578063d6e6eb9f14610535578063db8cd5891461053e578063e256888f1461055857600080fd5b8063a11b071211610120578063a11b07121461048b578063a1cb5a8a14610493578063a49834211461049c578063a74d5f30146104af578063bb2eb4d2146104d1578063bfb7f05e146104d957600080fd5b8063939d62371461043a5780639cc7f708146104435780639e75baa714610456578063a015a3d814610465578063a0712d681461047857600080fd5b80631da8afb3116101f557806360b71d4e116101b957806360b71d4e146103d15780636352211e146103da578063791b98bc146104055780637de1e536146104165780637fd6f15c1461042957806387e4401f1461043257600080fd5b80631da8afb3146103925780633c97d5ae1461039a57806354fb3921146103a35780635c2454b4146103b65780635c975abb146103c957600080fd5b80630c6bc62b116102475780630c6bc62b14610314578063150b7a021461032757806317893e3c1461033a5780631794bb3c1461036157806318160ddd146103745780631a88bc661461038a57600080fd5b8062113e08146102825780629ce20b146102a457806301ffc9a7146102dc5780630902f1ac146102ff5780630c472afd1461030a575b600080fd5b61028a6105b3565b604080519283526020830191909152015b60405180910390f35b6102c36102b2366004612880565b629ce20b60e01b9695505050505050565b6040516001600160e01b0319909116815260200161029b565b6102ef6102ea3660046128f3565b6106bc565b604051901515815260200161029b565b603d54603e5461028a565b6103126106e8565b005b61031261032236600461291d565b610753565b6102c361033536600461297d565b610791565b61028a61034836600461291d565b6039602052600090815260409020805460019091015482565b61031261036f366004612a41565b6107a2565b61037c610900565b60405190815260200161029b565b61037c61098e565b6102ef6109d0565b61037c61271081565b6103126103b136600461291d565b610ade565b61028a6103c4366004612a82565b610b7d565b6102ef610b99565b61037c60375481565b6103ed6103e836600461291d565b610c0e565b6040516001600160a01b03909116815260200161029b565b6035546001600160a01b03166103ed565b6033546103ed906001600160a01b031681565b61037c603b5481565b6103ed610c90565b61037c60365481565b61037c61045136600461291d565b610d05565b61037c670de0b6b3a764000081565b6103ed61047336600461291d565b610d87565b61037c61048636600461291d565b610f08565b6103ed61105a565b61037c60385481565b6103126104aa36600461291d565b6110ab565b6104b86103e881565b60405167ffffffffffffffff909116815260200161029b565b6104b8606481565b6104ec6104e7366004612b43565b61116e565b60405161029b9493929190612ba5565b61031261050a36600461291d565b61174a565b61031261051d366004612c01565b6117b1565b61037c61053036600461291d565b611c4f565b61037c603c5481565b610546601281565b60405160ff909116815260200161029b565b6104b861271081565b61031261056f366004612c8a565b611d4a565b61037c603a5481565b61037c611e94565b6104b8603281565b61037c61059b36600461291d565b611f41565b6034546103ed906001600160a01b031681565b6037546034546040516370a0823160e01b8152306004820152600092839290916001600160a01b03909116906370a0823190602401602060405180830381865afa158015610605573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106299190612cda565b6106339190612d09565b6033546040516370a0823160e01b8152306004820152919350670de0b6b3a7640000916001600160a01b03909116906370a0823190602401602060405180830381865afa158015610688573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106ac9190612cda565b6106b69190612d20565b90509091565b60006106c782611fd5565b806106e2575063cc9278d360e01b6001600160e01b03198316145b92915050565b60006106f2610900565b90506038546037541480610704575080155b1561070c5750565b806127106038546037546107209190612d09565b61072a9190612d20565b6107349190612d55565b603660008282546107459190612d77565b909155505060375460385550565b61075b610c90565b6001600160a01b0316336001600160a01b03161461078c57604051632a9e285560e11b815260040160405180910390fd5b603a55565b630a85bd0160e11b5b949350505050565b600054610100900460ff16158080156107c25750600054600160ff909116105b806107dc5750303b1580156107dc575060005460ff166001145b6108445760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084015b60405180910390fd5b6000805460ff191660011790558015610867576000805461ff0019166101001790555b60648214801590610879575060328214155b1561089757604051636301f06d60e11b815260040160405180910390fd5b603b8290556003603c556108ac338585612025565b6108b461208e565b80156108fa576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50505050565b60006109146035546001600160a01b031690565b6001600160a01b03166388200bb961092a61098e565b6040518263ffffffff1660e01b815260040161094891815260200190565b602060405180830381865afa158015610965573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109899190612cda565b905090565b60006109a26035546001600160a01b031690565b60405163add21d2560e01b81523060048201526001600160a01b03919091169063add21d2590602401610948565b6000806109db61105a565b6001600160a01b031614610ad85760006109f361105a565b60335460405163de5488af60e01b81526001600160a01b03918216600482015291169063de5488af90602401602060405180830381865afa158015610a3c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a609190612d8f565b6040516301ffc9a760e01b815263152a902d60e11b60048201529091506001600160a01b038216906301ffc9a790602401602060405180830381865afa158015610aae573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ad29190612dac565b91505090565b50600090565b6035546001600160a01b03163314610b095760405163975e14bb60e01b815260040160405180910390fd5b600081815260396020526040812090610b2183610d05565b90508015610b78576000826000015461271060365484610b419190612d20565b610b4b9190612d55565b610b559190612d09565b905080156108fa5780836001016000828254610b719190612d77565b9091555050505b505050565b600080610b8c868686866120bf565b9150915094509492505050565b6000610bad6035546001600160a01b031690565b6001600160a01b031663b187bd266040518163ffffffff1660e01b8152600401602060405180830381865afa158015610bea573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109899190612dac565b6000610c226035546001600160a01b031690565b6001600160a01b0316636352211e836040518263ffffffff1660e01b8152600401610c4f91815260200190565b602060405180830381865afa158015610c6c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106e29190612d8f565b6000610ca46035546001600160a01b031690565b6001600160a01b03166387e4401f6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610ce1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109899190612d8f565b6000610d196035546001600160a01b031690565b6001600160a01b0316639cc7f708836040518263ffffffff1660e01b8152600401610d4691815260200190565b602060405180830381865afa158015610d63573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106e29190612cda565b600080610d9261105a565b6001600160a01b031614610f03576000610daa61105a565b60335460405163de5488af60e01b81526001600160a01b03918216600482015291169063de5488af90602401602060405180830381865afa158015610df3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e179190612d8f565b6040516301ffc9a760e01b815263152a902d60e11b60048201529091506001600160a01b038216906301ffc9a790602401602060405180830381865afa158015610e65573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e899190612dac565b15610f015760405163152a902d60e11b815260048101849052600060248201526001600160a01b03821690632a55205a906044016040805180830381865afa158015610ed9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610efd9190612dce565b5091505b505b919050565b6000610f12610b99565b15610f305760405163a81b9f0560e01b815260040160405180910390fd5b610f38612153565b600080610f48603d54603e549091565b91509150600080610f576105b3565b90925090506000610f688584612d09565b90506000610f768584612d09565b90506000610f82610900565b905080600003610fa557610f9e610f998385612d20565b6121ac565b9750610fda565b610fd787610fb38386612d20565b610fbd9190612d55565b87610fc88486612d20565b610fd29190612d55565b61229b565b97505b60008811610ffb57604051632c82cdd360e11b815260040160405180910390fd5b61100589896122b1565b603d859055603e849055604080518481526020810184905233917f4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f910160405180910390a250505050505050610f0360018055565b600061106e6035546001600160a01b031690565b6001600160a01b031663a11b07126040518163ffffffff1660e01b8152600401602060405180830381865afa158015610ce1573d6000803e3d6000fd5b336110be6035546001600160a01b031690565b6001600160a01b031663d0fb02036040518163ffffffff1660e01b8152600401602060405180830381865afa1580156110fb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061111f9190612d8f565b6001600160a01b031614611146576040516333cf93eb60e11b815260040160405180910390fd5b6103e881111561116957604051630737667760e11b815260040160405180910390fd5b603c55565b6000806000606061117d610b99565b1561119b5760405163a81b9f0560e01b815260040160405180910390fd5b6111a3612153565b6000806111ae6105b3565b9150915060006111c66035546001600160a01b031690565b6040516321761c7160e11b815230600482015290915060009081906001600160a01b03841690639cc7f7089082906342ec38e290602401602060405180830381865afa15801561121a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061123e9190612cda565b6040518263ffffffff1660e01b815260040161125c91815260200190565b602060405180830381865afa158015611279573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061129d9190612cda565b90506112a7610900565b6112b18683612d20565b6112bb9190612d55565b98506112c5610900565b6112cf8583612d20565b6112d99190612d55565b97508815806112e6575087155b1561130457604051633f04d0db60e11b815260040160405180910390fd5b600061131286868c8c6120bf565b6040516321761c7160e11b81523060048201529199509150611389906001600160a01b038616906342ec38e290602401602060405180830381865afa15801561135f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113839190612cda565b83612321565b61139b670de0b6b3a764000082612d55565b6034546040516370a0823160e01b81523060048201529194506001600160a01b0316906370a0823190602401602060405180830381865afa1580156113e4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114089190612cda565b88111561147e576034546040516370a0823160e01b81523060048201526001600160a01b03909116906370a0823190602401602060405180830381865afa158015611457573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061147b9190612cda565b97505b505080895110156114a257604051630f19e6dd60e41b815260040160405180910390fd5b6034546114b9906001600160a01b03168b88612359565b8067ffffffffffffffff8111156114d2576114d2612936565b6040519080825280602002602001820160405280156114fb578160200160208202803683370190505b5094506000805b828210801561151157508a5181105b156116aa576033548b5130916001600160a01b031690636352211e908e908590811061153f5761153f612dfc565b60200260200101516040518263ffffffff1660e01b815260040161156591815260200190565b602060405180830381865afa158015611582573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115a69190612d8f565b6001600160a01b031603611698576033548b516001600160a01b03909116906342842e0e9030908f908f90869081106115e1576115e1612dfc565b60209081029190910101516040516001600160e01b031960e086901b1681526001600160a01b0393841660048201529290911660248301526044820152606401600060405180830381600087803b15801561163b57600080fd5b505af115801561164f573d6000803e3d6000fd5b505050508a818151811061166557611665612dfc565b602002602001015187838151811061167f5761167f612dfc565b60209081029190910101528161169481612e12565b9250505b806116a281612e12565b915050611502565b8282146116ca57604051631796524360e31b815260040160405180910390fd5b50506116d46105b3565b603d829055603e8190559094509250896001600160a01b0316336001600160a01b03167f8c54d40e52af817976c5f2b138403a5ff53b552d179dc91099fd8d789ebf70738a8a8a8a60405161172c9493929190612ba5565b60405180910390a35050505061174160018055565b93509350935093565b6035546001600160a01b031633146117755760405163975e14bb60e01b815260040160405180910390fd5b60008181526039602052604081209061178d83610d05565b9050612710603654826117a09190612d20565b6117aa9190612d55565b9091555050565b6117b9610b99565b156117d75760405163a81b9f0560e01b815260040160405180910390fd5b6117df612153565b841580156117ec57508351155b1561180a576040516335e1f2d160e11b815260040160405180910390fd5b600080606060008061181f603d54603e549091565b91509150818a101580611846575080670de0b6b3a76400008a516118439190612d20565b10155b15611864576040516341cb3f0b60e01b815260040160405180910390fd5b6040516341bc698d60e01b815260009033906341bc698d9061188c908b908b90600401612e2b565b6000604051808303816000875af11580156118ab573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526118d39190810190612e5a565b94509050801580156118e457508351155b15611902576040516397bc6fa360e01b815260040160405180910390fd5b6034546001600160a01b038a81169116148061192b57506033546001600160a01b038a81169116145b1561194957604051631ec8b2d360e11b815260040160405180910390fd5b8a1561196657603454611966906001600160a01b03168a8d612359565b895115611a2d5760005b8a51811015611a2b576033548b516001600160a01b03909116906342842e0e9030908d908f90869081106119a6576119a6612dfc565b60209081029190910101516040516001600160e01b031960e086901b1681526001600160a01b0393841660048201529290911660248301526044820152606401600060405180830381600087803b158015611a0057600080fd5b505af1158015611a14573d6000803e3d6000fd5b505050508080611a2390612e12565b915050611970565b505b600080611a386105b3565b90925090506000611a498587612d20565b611a538385612d20565b611a5d9190612d09565b9050858311611a6d576000611a8d565b8082611a798886612d09565b611a839190612d20565b611a8d9190612d09565b9850828611611a9d576000611abd565b8082611aa98589612d09565b611ab39190612d20565b611abd9190612d77565b97506000611acb8a8a6123ab565b9050611ad961271083612d20565b611ae1611e94565b611aeb9083612d20565b1115611b0a576040516310fb985b60e11b815260040160405180910390fd5b611b148383612d55565b9150611b20838b612d55565b9950611b2c838a612d55565b9850611b388a8a6123ab565b9050611b43816123ba565b611b4d9083612d09565b9150611b5881612476565b611b629083612d09565b915050611b7081888f6124ac565b611b786105b3565b9093509150611b878587612d20565b611b918385612d20565b1015611bb0576040516378be6e7360e01b815260040160405180910390fd5b50603d91909155603e55505081516001600160a01b038816915033907fd78ad95fa46c994b6551d0da85fc275fe613ce37657fb8d5e3d130840159d822908690611c0390670de0b6b3a764000090612d20565b86670de0b6b3a76400008d51611c199190612d20565b60408051948552602085019390935291830152606082015260800160405180910390a3505050611c4860018055565b5050505050565b6000611c596106e8565b6000611c6483611f41565b600084815260396020526040812060018101919091556036549192509061271090611c8e86610d05565b611c989190612d20565b611ca29190612d55565b81556037548211611cb35781611cb7565b6037545b92508260386000828254611ccb9190612d09565b925050819055508260376000828254611ce49190612d09565b90915550611d099050611cf685610c0e565b6034546001600160a01b03169085612359565b837f38436c42bcfd74414acafc159a381bf74b9880bc4c1c9f922686fc7161d9c7ad84604051611d3b91815260200190565b60405180910390a25050919050565b611d52612153565b600080611d5d6105b3565b91509150670de0b6b3a76400008351611d769190612d20565b603e54611d839083612d09565b14611da1576040516332848fe160e21b815260040160405180910390fd5b611dc684603d5484611db39190612d09565b6034546001600160a01b03169190612359565b60005b8351811015611e845760335484516001600160a01b03909116906342842e0e9030908890889086908110611dff57611dff612dfc565b60209081029190910101516040516001600160e01b031960e086901b1681526001600160a01b0393841660048201529290911660248301526044820152606401600060405180830381600087803b158015611e5957600080fd5b505af1158015611e6d573d6000803e3d6000fd5b505050508080611e7c90612e12565b915050611dc9565b505050611e9060018055565b5050565b600080611ea96035546001600160a01b031690565b6001600160a01b031663017e7e586040518163ffffffff1660e01b8152600401602060405180830381865afa158015611ee6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f0a9190612d8f565b603a54603c54919250906001600160a01b038316611f29576000611f2d565b603b545b611f379190612d77565b610ad29190612d77565b600081815260396020526040812060365460385460375414611f9957611f65610900565b612710603854603754611f789190612d09565b611f829190612d20565b611f8c9190612d55565b611f969082612d77565b90505b815461271082611fa887610d05565b611fb29190612d20565b611fbc9190612d55565b8360010154611fcb9190612d77565b61079a9190612d09565b60006301ffc9a760e01b6001600160e01b03198316148061200657506001600160e01b03198216630a85bd0160e11b145b806106e257506001600160e01b03198216629ce20b60e01b1492915050565b600054610100900460ff1661204c5760405162461bcd60e51b815260040161083b90612ef7565b603480546001600160a01b039384166001600160a01b031991821617909155603380549284169282169290921790915560358054939092169216919091179055565b600054610100900460ff166120b55760405162461bcd60e51b815260040161083b90612ef7565b6120bd61256c565b565b604051633d27eded60e11b81526004810185905260248101849052604481018390526064810182905260126084820152600090819073__$7361758c0d185160b6cca64507b9678c39$__90637a4fdbda9060a4016040805180830381865af415801561212f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b8c9190612f42565b6002600154036121a55760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640161083b565b6002600155565b6000816000036121be57506000919050565b600060016121cb84612593565b901c6001901b905060018184816121e4576121e4612d3f565b048201901c905060018184816121fc576121fc612d3f565b048201901c9050600181848161221457612214612d3f565b048201901c9050600181848161222c5761222c612d3f565b048201901c9050600181848161224457612244612d3f565b048201901c9050600181848161225c5761225c612d3f565b048201901c9050600181848161227457612274612d3f565b048201901c90506122948182858161228e5761228e612d3f565b0461229b565b9392505050565b60008183106122aa5781612294565b5090919050565b60355460405163f0e88e7f60e01b815260048101849052602481018390526001600160a01b039091169063f0e88e7f906044015b600060405180830381600087803b1580156122ff57600080fd5b505af1158015612313573d6000803e3d6000fd5b505050505050565b60018055565b6035546040516387fe861160e01b815260048101849052602481018390526001600160a01b03909116906387fe8611906044016122e5565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b179052610b78908490612627565b60008183116122aa5781612294565b6000806123cf6035546001600160a01b031690565b6001600160a01b031663017e7e586040518163ffffffff1660e01b8152600401602060405180830381865afa15801561240c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906124309190612d8f565b603c54909150612710906124449085612d20565b61244e9190612d55565b91506001600160a01b03811615610f0157603454610f01906001600160a01b03168284612359565b603b546000906127109061248a9084612d20565b6124949190612d55565b9050806037546124a49190612d77565b603755919050565b82158015906124be57506124be6109d0565b15610b78576000825182516124d39190612d77565b6124dd9085612d55565b905060005b82518110156125355761252361251084838151811061250357612503612dfc565b6020026020010151610d87565b6034546001600160a01b03169084612359565b8061252d81612e12565b9150506124e2565b5060005b8351811015611c485761255a61251085838151811061250357612503612dfc565b8061256481612e12565b915050612539565b600054610100900460ff1661231b5760405162461bcd60e51b815260040161083b90612ef7565b600080608083901c156125a857608092831c92015b604083901c156125ba57604092831c92015b602083901c156125cc57602092831c92015b601083901c156125de57601092831c92015b600883901c156125f057600892831c92015b600483901c1561260257600492831c92015b600283901c1561261457600292831c92015b600183901c156106e25760010192915050565b600061267c826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166126fc9092919063ffffffff16565b905080516000148061269d57508080602001905181019061269d9190612dac565b610b785760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260840161083b565b606061079a848460008585600080866001600160a01b031685876040516127239190612f92565b60006040518083038185875af1925050503d8060008114612760576040519150601f19603f3d011682016040523d82523d6000602084013e612765565b606091505b509150915061277687838387612781565b979650505050505050565b606083156127f05782516000036127e9576001600160a01b0385163b6127e95760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161083b565b508161079a565b61079a83838151156128055781518083602001fd5b8060405162461bcd60e51b815260040161083b9190612fae565b6001600160a01b038116811461283457600080fd5b50565b60008083601f84011261284957600080fd5b50813567ffffffffffffffff81111561286157600080fd5b60208301915083602082850101111561287957600080fd5b9250929050565b60008060008060008060a0878903121561289957600080fd5b86356128a48161281f565b9550602087013594506040870135935060608701359250608087013567ffffffffffffffff8111156128d557600080fd5b6128e189828a01612837565b979a9699509497509295939492505050565b60006020828403121561290557600080fd5b81356001600160e01b03198116811461229457600080fd5b60006020828403121561292f57600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561297557612975612936565b604052919050565b6000806000806080858703121561299357600080fd5b843561299e8161281f565b93506020858101356129af8161281f565b935060408601359250606086013567ffffffffffffffff808211156129d357600080fd5b818801915088601f8301126129e757600080fd5b8135818111156129f9576129f9612936565b612a0b601f8201601f1916850161294c565b91508082528984828501011115612a2157600080fd5b808484018584013760008482840101525080935050505092959194509250565b600080600060608486031215612a5657600080fd5b8335612a618161281f565b92506020840135612a718161281f565b929592945050506040919091013590565b60008060008060808587031215612a9857600080fd5b5050823594602084013594506040840135936060013592509050565b600067ffffffffffffffff821115612ace57612ace612936565b5060051b60200190565b600082601f830112612ae957600080fd5b81356020612afe612af983612ab4565b61294c565b82815260059290921b84018101918181019086841115612b1d57600080fd5b8286015b84811015612b385780358352918301918301612b21565b509695505050505050565b600080600060608486031215612b5857600080fd5b8335612b638161281f565b92506020840135612b738161281f565b9150604084013567ffffffffffffffff811115612b8f57600080fd5b612b9b86828701612ad8565b9150509250925092565b600060808201868352602086818501528560408501526080606085015281855180845260a086019150828701935060005b81811015612bf257845183529383019391830191600101612bd6565b50909998505050505050505050565b600080600080600060808688031215612c1957600080fd5b85359450602086013567ffffffffffffffff80821115612c3857600080fd5b612c4489838a01612ad8565b955060408801359150612c568261281f565b90935060608701359080821115612c6c57600080fd5b50612c7988828901612837565b969995985093965092949392505050565b60008060408385031215612c9d57600080fd5b8235612ca88161281f565b9150602083013567ffffffffffffffff811115612cc457600080fd5b612cd085828601612ad8565b9150509250929050565b600060208284031215612cec57600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b600082821015612d1b57612d1b612cf3565b500390565b6000816000190483118215151615612d3a57612d3a612cf3565b500290565b634e487b7160e01b600052601260045260246000fd5b600082612d7257634e487b7160e01b600052601260045260246000fd5b500490565b60008219821115612d8a57612d8a612cf3565b500190565b600060208284031215612da157600080fd5b81516122948161281f565b600060208284031215612dbe57600080fd5b8151801515811461229457600080fd5b60008060408385031215612de157600080fd5b8251612dec8161281f565b6020939093015192949293505050565b634e487b7160e01b600052603260045260246000fd5b600060018201612e2457612e24612cf3565b5060010190565b60208152816020820152818360408301376000818301604090810191909152601f909201601f19160101919050565b60008060408385031215612e6d57600080fd5b8251915060208084015167ffffffffffffffff811115612e8c57600080fd5b8401601f81018613612e9d57600080fd5b8051612eab612af982612ab4565b81815260059190911b82018301908381019088831115612eca57600080fd5b928401925b82841015612ee857835182529284019290840190612ecf565b80955050505050509250929050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b60008060408385031215612f5557600080fd5b505080516020909101519092909150565b60005b83811015612f81578181015183820152602001612f69565b838111156108fa5750506000910152565b60008251612fa4818460208701612f66565b9190910192915050565b6020815260008251806020840152612fcd816040850160208701612f66565b601f01601f1916919091016040019291505056fea264697066735822122052de74151baf6ed655290719f752761ad3fb8a4722df3f7e34d871a8db189a4564736f6c634300080d0033";

type SeacowsERC721TradePairConstructorParams =
  | [
      linkLibraryAddresses: SeacowsERC721TradePairLibraryAddresses,
      signer?: Signer
    ]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SeacowsERC721TradePairConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class SeacowsERC721TradePair__factory extends ContractFactory {
  constructor(...args: SeacowsERC721TradePairConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        SeacowsERC721TradePair__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: SeacowsERC721TradePairLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$7361758c0d185160b6cca64507b9678c39\\$__", "g"),
      linkLibraryAddresses["contracts/lib/PricingKernel.sol:PricingKernel"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<SeacowsERC721TradePair> {
    return super.deploy(overrides || {}) as Promise<SeacowsERC721TradePair>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): SeacowsERC721TradePair {
    return super.attach(address) as SeacowsERC721TradePair;
  }
  connect(signer: Signer): SeacowsERC721TradePair__factory {
    return super.connect(signer) as SeacowsERC721TradePair__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SeacowsERC721TradePairInterface {
    return new utils.Interface(_abi) as SeacowsERC721TradePairInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SeacowsERC721TradePair {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as SeacowsERC721TradePair;
  }
}

export interface SeacowsERC721TradePairLibraryAddresses {
  ["contracts/lib/PricingKernel.sol:PricingKernel"]: string;
}
