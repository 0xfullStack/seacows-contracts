/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  SeacowsERC721TradePair,
  SeacowsERC721TradePairInterface,
} from "../SeacowsERC721TradePair";

const _abi = [
  {
    inputs: [],
    name: "FM_NON_FEE_MANAGER",
    type: "error",
  },
  {
    inputs: [],
    name: "FM_NON_ROYALTY_FEE_MANAGER",
    type: "error",
  },
  {
    inputs: [],
    name: "RM_NON_ROYALTY_FEE_MANAGER",
    type: "error",
  },
  {
    inputs: [],
    name: "SPMD_ONLY_POSITION_MANAGER",
    type: "error",
  },
  {
    inputs: [],
    name: "SPMD_PAUSED",
    type: "error",
  },
  {
    inputs: [],
    name: "SPM_BELOW_NFT_OUT_MIN_CONSTRAINT",
    type: "error",
  },
  {
    inputs: [],
    name: "SPM_BELOW_TOKEN_OUT_MIN_CONSTRAINT",
    type: "error",
  },
  {
    inputs: [],
    name: "SPM_ETH_TRANSFER_FAILED",
    type: "error",
  },
  {
    inputs: [],
    name: "SPM_EXPIRED",
    type: "error",
  },
  {
    inputs: [],
    name: "SPM_INSUFFICIENT_AMOUNT",
    type: "error",
  },
  {
    inputs: [],
    name: "SPM_INSUFFICIENT_LIQUIDITY",
    type: "error",
  },
  {
    inputs: [],
    name: "SPM_INSUFFICIENT_MINIMUM_LIQUIDITY_AMOUNT",
    type: "error",
  },
  {
    inputs: [],
    name: "SPM_INVALID_TOKEN_ID",
    type: "error",
  },
  {
    inputs: [],
    name: "SPM_ONLY_BURNABLE_WHEN_CLEARED",
    type: "error",
  },
  {
    inputs: [],
    name: "SPM_ONLY_PAIR_CAN_BURN",
    type: "error",
  },
  {
    inputs: [],
    name: "SPM_ONLY_PAIR_CAN_MINT",
    type: "error",
  },
  {
    inputs: [],
    name: "SPM_PAIR_NOT_EXIST",
    type: "error",
  },
  {
    inputs: [],
    name: "SPM_UNAUTHORIZED",
    type: "error",
  },
  {
    inputs: [],
    name: "SSB_ETH_TRANSFER_FAILED",
    type: "error",
  },
  {
    inputs: [],
    name: "SSB_INSUFFICIENT_AMOUNT",
    type: "error",
  },
  {
    inputs: [],
    name: "SSB_ONE_MORE_BLOCK_AT_LEAST",
    type: "error",
  },
  {
    inputs: [],
    name: "SSB_TOKEN_TRANSFER_FAILED",
    type: "error",
  },
  {
    inputs: [],
    name: "SSB_UNAUTHORIZED",
    type: "error",
  },
  {
    inputs: [],
    name: "STPF_PAIR_ALREADY_EXIST",
    type: "error",
  },
  {
    inputs: [],
    name: "STP_EXCEED_NFT_OUT_MAX",
    type: "error",
  },
  {
    inputs: [],
    name: "STP_FEE_OUT_OF_RANGE",
    type: "error",
  },
  {
    inputs: [],
    name: "STP_INSUFFICIENT_INPUT_AMOUNT",
    type: "error",
  },
  {
    inputs: [],
    name: "STP_INSUFFICIENT_LIQUIDITY",
    type: "error",
  },
  {
    inputs: [],
    name: "STP_INSUFFICIENT_LIQUIDITY_BURNED",
    type: "error",
  },
  {
    inputs: [],
    name: "STP_INSUFFICIENT_LIQUIDITY_MINTED",
    type: "error",
  },
  {
    inputs: [],
    name: "STP_INSUFFICIENT_MIN_FEE",
    type: "error",
  },
  {
    inputs: [],
    name: "STP_INSUFFICIENT_NFT_TO_WITHDRAW",
    type: "error",
  },
  {
    inputs: [],
    name: "STP_INSUFFICIENT_OUTPUT_AMOUNT",
    type: "error",
  },
  {
    inputs: [],
    name: "STP_INVALID_FEE",
    type: "error",
  },
  {
    inputs: [],
    name: "STP_INVALID_TO",
    type: "error",
  },
  {
    inputs: [],
    name: "STP_K",
    type: "error",
  },
  {
    inputs: [],
    name: "STP_OVERFLOW",
    type: "error",
  },
  {
    inputs: [],
    name: "STP_SKIM_QUANTITY_MISMATCH",
    type: "error",
  },
  {
    inputs: [],
    name: "STP_UNAUTHORIZED",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "cTokenOut",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "cNftOut",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenAmountOut",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "idsOut",
        type: "uint256[]",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "Burn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "fee",
        type: "uint256",
      },
    ],
    name: "CollectFee",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "nftAmount",
        type: "uint256",
      },
    ],
    name: "Mint",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenIn",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "nftIn",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenOut",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "nftOut",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "Swap",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "reserve0",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "reserve1",
        type: "uint256",
      },
    ],
    name: "Sync",
    type: "event",
  },
  {
    inputs: [],
    name: "ACC_REWARD_PER_SHARE_PRECISION",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "COMPLEMENT_PRECISION",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "COMPLEMENT_PRECISION_DIGITS",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_PROTOCOL_FEE_PERCENT",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ONE_PERCENT",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PERCENTAGE_PRECISION",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "POINT_FIVE_PERCENT",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "accRewardPerShare",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "_ids",
        type: "uint256[]",
      },
    ],
    name: "burn",
    outputs: [
      {
        internalType: "uint256",
        name: "cTokenOut",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "cNftOut",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "tokenOut",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "idsOut",
        type: "uint256[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenBalance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_nftBalance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_tokenExpectedOut",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_nftExpectedOut",
        type: "uint256",
      },
    ],
    name: "caculateAssetsOutAfterComplemented",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "collect",
    outputs: [
      {
        internalType: "uint256",
        name: "_fee",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "collection",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feeBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feePercent",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getComplementedBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "tokenBalance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "nftBalance",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "getPendingFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getReserves",
    outputs: [
      {
        internalType: "uint256",
        name: "_reserve0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_reserve1",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "getRoyaltyRecipient",
    outputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token_",
        type: "address",
      },
      {
        internalType: "address",
        name: "collection_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "fee_",
        type: "uint256",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "isRoyaltySupported",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastFeeBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minRoyaltyFeePercent",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minTotalFeePercent",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "toTokenId",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [
      {
        internalType: "uint256",
        name: "liquidity",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_operator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_fromTokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_toTokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "onERC3525Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC721Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "positionInfos",
    outputs: [
      {
        internalType: "uint256",
        name: "feeDebt",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "unclaimedFee",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "positionManager",
    outputs: [
      {
        internalType: "contract ISeacowsPositionManager",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "protocolFeePercent",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "royaltyFeeManager",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "royaltyRegistry",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_percent",
        type: "uint256",
      },
    ],
    name: "setMinRoyaltyFeePercent",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_protocolFee",
        type: "uint256",
      },
    ],
    name: "setProtocolFeePercent",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "skim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "slot",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenAmountOut",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "idsOut",
        type: "uint256[]",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "swap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "sync",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "updatePositionFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "updatePositionFeeDebt",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "updateSwapFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506130eb806100206000396000f3fe608060405234801561001057600080fd5b50600436106102895760003560e01c80639e75baa71161015c578063c07bff9f116100ce578063e5f9e83b11610087578063e5f9e83b14610587578063e86a831914610590578063f78db9b814610598578063f8863898146105a0578063fc0c546a146105b3578063fff6cae9146105c657600080fd5b8063c07bff9f14610522578063ce3f865f14610535578063d6e6eb9f14610548578063db8cd58914610551578063e256888f1461056b578063e5d4088e1461057457600080fd5b8063a498342111610120578063a4983421146104a7578063a7439ac4146104ba578063a74d5f30146104c2578063bb2eb4d2146104e4578063bfb7f05e146104ec578063c0463ac51461050f57600080fd5b80639e75baa714610461578063a015a3d814610470578063a0712d6814610483578063a11b071214610496578063a1cb5a8a1461049e57600080fd5b80633c97d5ae11610200578063791b98bc116101b9578063791b98bc146104105780637de1e536146104215780637fd6f15c1461043457806387e4401f1461043d578063939d6237146104455780639cc7f7081461044e57600080fd5b80633c97d5ae146103a557806354fb3921146103ae5780635c2454b4146103c15780635c975abb146103d457806360b71d4e146103dc5780636352211e146103e557600080fd5b8063150b7a0211610252578063150b7a021461032757806317893e3c146103455780631794bb3c1461036c57806318160ddd1461037f5780631a88bc66146103955780631da8afb31461039d57600080fd5b80629ce20b1461028e57806301ffc9a7146102cb5780630902f1ac146102ee5780630c472afd1461030a5780630c6bc62b14610314575b600080fd5b6102ad61029c3660046129cf565b629ce20b60e01b9695505050505050565b6040516001600160e01b031990911681526020015b60405180910390f35b6102de6102d9366004612a42565b6105ce565b60405190151581526020016102c2565b603d54603e545b604080519283526020830191909152016102c2565b6103126105fa565b005b610312610322366004612a6c565b610665565b6102ad610335366004612acc565b630a85bd0160e11b949350505050565b6102f5610353366004612a6c565b6039602052600090815260409020805460019091015482565b61031261037a366004612b90565b6106a3565b610387610801565b6040519081526020016102c2565b61038761088f565b6102de6108d1565b61038761271081565b6103126103bc366004612a6c565b6109df565b6102f56103cf366004612bd1565b610a7e565b6102de610a9a565b61038760375481565b6103f86103f3366004612a6c565b610b0f565b6040516001600160a01b0390911681526020016102c2565b6035546001600160a01b03166103f8565b6033546103f8906001600160a01b031681565b610387603b5481565b6103f8610b91565b61038760365481565b61038761045c366004612a6c565b610c06565b610387670de0b6b3a764000081565b6103f861047e366004612a6c565b610c88565b610387610491366004612a6c565b610e09565b6103f8610f5b565b61038760385481565b6103126104b5366004612a6c565b610fac565b6102f561106f565b6104cb6103e881565b60405167ffffffffffffffff90911681526020016102c2565b6104cb606481565b6104ff6104fa366004612c92565b611178565b6040516102c29493929190612cf4565b61031261051d366004612a6c565b6117b5565b610312610530366004612d50565b61181c565b610387610543366004612a6c565b611d30565b610387603c5481565b610559601281565b60405160ff90911681526020016102c2565b6104cb61271081565b610312610582366004612dd9565b611e97565b610387603a5481565b610387612050565b6104cb603281565b6103876105ae366004612a6c565b6120fd565b6034546103f8906001600160a01b031681565b610312612199565b60006105d9826121c7565b806105f45750636bc0dc1f60e01b6001600160e01b03198316145b92915050565b6000610604610801565b90506038546037541480610616575080155b1561061e5750565b806127106038546037546106329190612e3f565b61063c9190612e56565b6106469190612e8b565b603660008282546106579190612ead565b909155505060375460385550565b61066d610b91565b6001600160a01b0316336001600160a01b03161461069e57604051632a9e285560e11b815260040160405180910390fd5b603a55565b600054610100900460ff16158080156106c35750600054600160ff909116105b806106dd5750303b1580156106dd575060005460ff166001145b6107455760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084015b60405180910390fd5b6000805460ff191660011790558015610768576000805461ff0019166101001790555b6064821480159061077a575060328214155b1561079857604051636301f06d60e11b815260040160405180910390fd5b603b8290556003603c556107ad338585612217565b6107b5612280565b80156107fb576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50505050565b60006108156035546001600160a01b031690565b6001600160a01b03166388200bb961082b61088f565b6040518263ffffffff1660e01b815260040161084991815260200190565b602060405180830381865afa158015610866573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061088a9190612ec5565b905090565b60006108a36035546001600160a01b031690565b60405163add21d2560e01b81523060048201526001600160a01b03919091169063add21d2590602401610849565b6000806108dc610f5b565b6001600160a01b0316146109d95760006108f4610f5b565b60335460405163de5488af60e01b81526001600160a01b03918216600482015291169063de5488af90602401602060405180830381865afa15801561093d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109619190612ede565b6040516301ffc9a760e01b815263152a902d60e11b60048201529091506001600160a01b038216906301ffc9a790602401602060405180830381865afa1580156109af573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109d39190612efb565b91505090565b50600090565b6035546001600160a01b03163314610a0a5760405163975e14bb60e01b815260040160405180910390fd5b600081815260396020526040812090610a2283610c06565b90508015610a79576000826000015461271060365484610a429190612e56565b610a4c9190612e8b565b610a569190612e3f565b905080156107fb5780836001016000828254610a729190612ead565b9091555050505b505050565b600080610a8d868686866122af565b9150915094509492505050565b6000610aae6035546001600160a01b031690565b6001600160a01b031663b187bd266040518163ffffffff1660e01b8152600401602060405180830381865afa158015610aeb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061088a9190612efb565b6000610b236035546001600160a01b031690565b6001600160a01b0316636352211e836040518263ffffffff1660e01b8152600401610b5091815260200190565b602060405180830381865afa158015610b6d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105f49190612ede565b6000610ba56035546001600160a01b031690565b6001600160a01b03166387e4401f6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610be2573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061088a9190612ede565b6000610c1a6035546001600160a01b031690565b6001600160a01b0316639cc7f708836040518263ffffffff1660e01b8152600401610c4791815260200190565b602060405180830381865afa158015610c64573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105f49190612ec5565b600080610c93610f5b565b6001600160a01b031614610e04576000610cab610f5b565b60335460405163de5488af60e01b81526001600160a01b03918216600482015291169063de5488af90602401602060405180830381865afa158015610cf4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d189190612ede565b6040516301ffc9a760e01b815263152a902d60e11b60048201529091506001600160a01b038216906301ffc9a790602401602060405180830381865afa158015610d66573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d8a9190612efb565b15610e025760405163152a902d60e11b815260048101849052600060248201526001600160a01b03821690632a55205a906044016040805180830381865afa158015610dda573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dfe9190612f1d565b5091505b505b919050565b6000610e13610a9a565b15610e315760405163a81b9f0560e01b815260040160405180910390fd5b610e39612343565b600080610e49603d54603e549091565b91509150600080610e5861106f565b90925090506000610e698584612e3f565b90506000610e778584612e3f565b90506000610e83610801565b905080600003610ea657610e9f610e9a8385612e56565b61239c565b9750610edb565b610ed887610eb48386612e56565b610ebe9190612e8b565b87610ec98486612e56565b610ed39190612e8b565b61248b565b97505b60008811610efc57604051632c82cdd360e11b815260040160405180910390fd5b610f0689896124a1565b610f10858561250b565b604080518481526020810184905233917f4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f910160405180910390a250505050505050610e0460018055565b6000610f6f6035546001600160a01b031690565b6001600160a01b031663a11b07126040518163ffffffff1660e01b8152600401602060405180830381865afa158015610be2573d6000803e3d6000fd5b33610fbf6035546001600160a01b031690565b6001600160a01b031663d0fb02036040518163ffffffff1660e01b8152600401602060405180830381865afa158015610ffc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110209190612ede565b6001600160a01b031614611047576040516333cf93eb60e11b815260040160405180910390fd5b6103e881111561106a57604051630737667760e11b815260040160405180910390fd5b603c55565b6037546034546040516370a0823160e01b8152306004820152600092839290916001600160a01b03909116906370a0823190602401602060405180830381865afa1580156110c1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110e59190612ec5565b6110ef9190612e3f565b6033546040516370a0823160e01b8152306004820152919350670de0b6b3a7640000916001600160a01b03909116906370a0823190602401602060405180830381865afa158015611144573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111689190612ec5565b6111729190612e56565b90509091565b60008060006060611187610a9a565b156111a55760405163a81b9f0560e01b815260040160405180910390fd5b6111ad612343565b6000806111b861106f565b9150915060006111d06035546001600160a01b031690565b6040516321761c7160e11b815230600482015290915060009081906001600160a01b03841690639cc7f7089082906342ec38e290602401602060405180830381865afa158015611224573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112489190612ec5565b6040518263ffffffff1660e01b815260040161126691815260200190565b602060405180830381865afa158015611283573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112a79190612ec5565b90506112b1610801565b6112bb8683612e56565b6112c59190612e8b565b98506112cf610801565b6112d98583612e56565b6112e39190612e8b565b97508815806112f0575087155b1561130e57604051633f04d0db60e11b815260040160405180910390fd5b600061131c86868c8c6122af565b6040516321761c7160e11b81523060048201529199509150611393906001600160a01b038616906342ec38e290602401602060405180830381865afa158015611369573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061138d9190612ec5565b83612558565b6113a5670de0b6b3a764000082612e8b565b6034546040516370a0823160e01b81523060048201529194506001600160a01b0316906370a0823190602401602060405180830381865afa1580156113ee573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114129190612ec5565b881115611488576034546040516370a0823160e01b81523060048201526001600160a01b03909116906370a0823190602401602060405180830381865afa158015611461573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114859190612ec5565b97505b505080895110156114ac57604051630f19e6dd60e41b815260040160405180910390fd5b60345460405163a9059cbb60e01b81526001600160a01b038c81166004830152602482018990529091169063a9059cbb906044016020604051808303816000875af11580156114ff573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115239190612efb565b508067ffffffffffffffff81111561153d5761153d612a85565b604051908082528060200260200182016040528015611566578160200160208202803683370190505b5094506000805b828210801561157c57508a5181105b15611715576033548b5130916001600160a01b031690636352211e908e90859081106115aa576115aa612f4b565b60200260200101516040518263ffffffff1660e01b81526004016115d091815260200190565b602060405180830381865afa1580156115ed573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116119190612ede565b6001600160a01b031603611703576033548b516001600160a01b03909116906342842e0e9030908f908f908690811061164c5761164c612f4b565b60209081029190910101516040516001600160e01b031960e086901b1681526001600160a01b0393841660048201529290911660248301526044820152606401600060405180830381600087803b1580156116a657600080fd5b505af11580156116ba573d6000803e3d6000fd5b505050508a81815181106116d0576116d0612f4b565b60200260200101518783815181106116ea576116ea612f4b565b6020908102919091010152816116ff81612f61565b9250505b8061170d81612f61565b91505061156d565b82821461173557604051631796524360e31b815260040160405180910390fd5b505061173f61106f565b909450925061174e848461250b565b896001600160a01b0316336001600160a01b03167f8c54d40e52af817976c5f2b138403a5ff53b552d179dc91099fd8d789ebf70738a8a8a8a6040516117979493929190612cf4565b60405180910390a3505050506117ac60018055565b93509350935093565b6035546001600160a01b031633146117e05760405163975e14bb60e01b815260040160405180910390fd5b6000818152603960205260408120906117f883610c06565b90506127106036548261180b9190612e56565b6118159190612e8b565b9091555050565b611824610a9a565b156118425760405163a81b9f0560e01b815260040160405180910390fd5b61184a612343565b8415801561185757508351155b15611875576040516335e1f2d160e11b815260040160405180910390fd5b600080606060008061188a603d54603e549091565b91509150818a1015806118b1575080670de0b6b3a76400008a516118ae9190612e56565b10155b156118cf576040516341cb3f0b60e01b815260040160405180910390fd5b6040516341bc698d60e01b815260009033906341bc698d906118f7908b908b90600401612f7a565b6000604051808303816000875af1158015611916573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261193e9190810190612fa9565b945090508015801561194f57508351155b1561196d576040516397bc6fa360e01b815260040160405180910390fd5b6034546001600160a01b038a81169116148061199657506033546001600160a01b038a81169116145b156119b457604051631ec8b2d360e11b815260040160405180910390fd5b8a15611a335760345460405163a9059cbb60e01b81526001600160a01b038b81166004830152602482018e90529091169063a9059cbb906044016020604051808303816000875af1158015611a0d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a319190612efb565b505b895115611afa5760005b8a51811015611af8576033548b516001600160a01b03909116906342842e0e9030908d908f9086908110611a7357611a73612f4b565b60209081029190910101516040516001600160e01b031960e086901b1681526001600160a01b0393841660048201529290911660248301526044820152606401600060405180830381600087803b158015611acd57600080fd5b505af1158015611ae1573d6000803e3d6000fd5b505050508080611af090612f61565b915050611a3d565b505b600080611b0561106f565b90925090506000611b168587612e56565b611b208385612e56565b611b2a9190612e3f565b9050603d548311611b3c576000611b60565b8082603d5485611b4c9190612e3f565b611b569190612e56565b611b609190612e3f565b985082603d5411611b72576000611b96565b808284603d54611b829190612e3f565b611b8c9190612e56565b611b969190612ead565b97506000611ba48a8a612590565b9050611bb261271083612e56565b611bba612050565b611bc49083612e56565b1115611be3576040516310fb985b60e11b815260040160405180910390fd5b611bed8383612e8b565b9150611bf9838b612e8b565b9950611c05838a612e8b565b9850611c118a8a612590565b9050611c1c8161259f565b611c269083612e3f565b9150611c31816126c2565b611c3b9083612e3f565b915050611c4981888f6126f8565b611c5161106f565b9093509150611c608587612e56565b611c6a8385612e56565b1015611c89576040516378be6e7360e01b815260040160405180910390fd5b611c93838361250b565b505050505050856001600160a01b0316336001600160a01b03167fd78ad95fa46c994b6551d0da85fc275fe613ce37657fb8d5e3d130840159d82285670de0b6b3a76400008551611ce49190612e56565b86670de0b6b3a76400008d51611cfa9190612e56565b60408051948552602085019390935291830152606082015260800160405180910390a3505050611d2960018055565b5050505050565b6000611d3a6105fa565b6000611d45836120fd565b600084815260396020526040812060018101919091556036549192509061271090611d6f86610c06565b611d799190612e56565b611d839190612e8b565b81556037548211611d945781611d98565b6037545b92508260386000828254611dac9190612e3f565b925050819055508260376000828254611dc59190612e3f565b90915550506034546001600160a01b031663a9059cbb611de486610b0f565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602481018690526044016020604051808303816000875af1158015611e31573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e559190612efb565b50837f38436c42bcfd74414acafc159a381bf74b9880bc4c1c9f922686fc7161d9c7ad84604051611e8891815260200190565b60405180910390a25050919050565b611e9f612343565b600080611eaa61106f565b91509150670de0b6b3a76400008351611ec39190612e56565b603e54611ed09083612e3f565b14611eee576040516332848fe160e21b815260040160405180910390fd5b603454603d546001600160a01b039091169063a9059cbb908690611f129086612e8b565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af1158015611f5d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f819190612efb565b5060005b83518110156120405760335484516001600160a01b03909116906342842e0e9030908890889086908110611fbb57611fbb612f4b565b60209081029190910101516040516001600160e01b031960e086901b1681526001600160a01b0393841660048201529290911660248301526044820152606401600060405180830381600087803b15801561201557600080fd5b505af1158015612029573d6000803e3d6000fd5b50505050808061203890612f61565b915050611f85565b50505061204c60018055565b5050565b6000806120656035546001600160a01b031690565b6001600160a01b031663017e7e586040518163ffffffff1660e01b8152600401602060405180830381865afa1580156120a2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120c69190612ede565b603a54603c54919250906001600160a01b0383166120e55760006120e9565b603b545b6120f39190612ead565b6109d39190612ead565b60008181526039602052604081206036546038546037541461215557612121610801565b6127106038546037546121349190612e3f565b61213e9190612e56565b6121489190612e8b565b6121529082612ead565b90505b81546127108261216487610c06565b61216e9190612e56565b6121789190612e8b565b83600101546121879190612ead565b6121919190612e3f565b949350505050565b6121a1612343565b6000806121ac61106f565b915091506121ba828261250b565b50506121c560018055565b565b60006301ffc9a760e01b6001600160e01b0319831614806121f857506001600160e01b03198216630a85bd0160e11b145b806105f457506001600160e01b03198216629ce20b60e01b1492915050565b600054610100900460ff1661223e5760405162461bcd60e51b815260040161073c90613046565b603480546001600160a01b039384166001600160a01b031991821617909155603380549284169282169290921790915560358054939092169216919091179055565b600054610100900460ff166122a75760405162461bcd60e51b815260040161073c90613046565b6121c56128b3565b604051633d27eded60e11b81526004810185905260248101849052604481018390526064810182905260126084820152600090819073__$7361758c0d185160b6cca64507b9678c39$__90637a4fdbda9060a4016040805180830381865af415801561231f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a8d9190613091565b6002600154036123955760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640161073c565b6002600155565b6000816000036123ae57506000919050565b600060016123bb846128da565b901c6001901b905060018184816123d4576123d4612e75565b048201901c905060018184816123ec576123ec612e75565b048201901c9050600181848161240457612404612e75565b048201901c9050600181848161241c5761241c612e75565b048201901c9050600181848161243457612434612e75565b048201901c9050600181848161244c5761244c612e75565b048201901c9050600181848161246457612464612e75565b048201901c90506124848182858161247e5761247e612e75565b0461248b565b9392505050565b600081831061249a5781612484565b5090919050565b60355460405163f0e88e7f60e01b815260048101849052602481018390526001600160a01b039091169063f0e88e7f906044015b600060405180830381600087803b1580156124ef57600080fd5b505af1158015612503573d6000803e3d6000fd5b505050505050565b603d829055603e81905560408051838152602081018390527fcf2aa50876cdfbb541206f89af0ee78d44a2abf8d328e37fa4917f982149848a910160405180910390a15050565b60018055565b6035546040516387fe861160e01b815260048101849052602481018390526001600160a01b03909116906387fe8611906044016124d5565b600081831161249a5781612484565b6000806125b46035546001600160a01b031690565b6001600160a01b031663017e7e586040518163ffffffff1660e01b8152600401602060405180830381865afa1580156125f1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906126159190612ede565b603c54909150612710906126299085612e56565b6126339190612e8b565b91506001600160a01b03811615610e025760345460405163a9059cbb60e01b81526001600160a01b038381166004830152602482018590529091169063a9059cbb906044016020604051808303816000875af1158015612697573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906126bb9190612efb565b5050919050565b603b54600090612710906126d69084612e56565b6126e09190612e8b565b9050806037546126f09190612ead565b603755919050565b821580159061270a575061270a6108d1565b15610a795760008251825161271f9190612ead565b6127299085612e8b565b905060005b82518110156127f55760345483516001600160a01b039091169063a9059cbb906127719086908590811061276457612764612f4b565b6020026020010151610c88565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602481018590526044016020604051808303816000875af11580156127be573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906127e29190612efb565b50806127ed81612f61565b91505061272e565b5060005b8351811015611d295760345484516001600160a01b039091169063a9059cbb9061282f9087908590811061276457612764612f4b565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602481018590526044016020604051808303816000875af115801561287c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906128a09190612efb565b50806128ab81612f61565b9150506127f9565b600054610100900460ff166125525760405162461bcd60e51b815260040161073c90613046565b600080608083901c156128ef57608092831c92015b604083901c1561290157604092831c92015b602083901c1561291357602092831c92015b601083901c1561292557601092831c92015b600883901c1561293757600892831c92015b600483901c1561294957600492831c92015b600283901c1561295b57600292831c92015b600183901c156105f45760010192915050565b6001600160a01b038116811461298357600080fd5b50565b60008083601f84011261299857600080fd5b50813567ffffffffffffffff8111156129b057600080fd5b6020830191508360208285010111156129c857600080fd5b9250929050565b60008060008060008060a087890312156129e857600080fd5b86356129f38161296e565b9550602087013594506040870135935060608701359250608087013567ffffffffffffffff811115612a2457600080fd5b612a3089828a01612986565b979a9699509497509295939492505050565b600060208284031215612a5457600080fd5b81356001600160e01b03198116811461248457600080fd5b600060208284031215612a7e57600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715612ac457612ac4612a85565b604052919050565b60008060008060808587031215612ae257600080fd5b8435612aed8161296e565b9350602085810135612afe8161296e565b935060408601359250606086013567ffffffffffffffff80821115612b2257600080fd5b818801915088601f830112612b3657600080fd5b813581811115612b4857612b48612a85565b612b5a601f8201601f19168501612a9b565b91508082528984828501011115612b7057600080fd5b808484018584013760008482840101525080935050505092959194509250565b600080600060608486031215612ba557600080fd5b8335612bb08161296e565b92506020840135612bc08161296e565b929592945050506040919091013590565b60008060008060808587031215612be757600080fd5b5050823594602084013594506040840135936060013592509050565b600067ffffffffffffffff821115612c1d57612c1d612a85565b5060051b60200190565b600082601f830112612c3857600080fd5b81356020612c4d612c4883612c03565b612a9b565b82815260059290921b84018101918181019086841115612c6c57600080fd5b8286015b84811015612c875780358352918301918301612c70565b509695505050505050565b600080600060608486031215612ca757600080fd5b8335612cb28161296e565b92506020840135612cc28161296e565b9150604084013567ffffffffffffffff811115612cde57600080fd5b612cea86828701612c27565b9150509250925092565b600060808201868352602086818501528560408501526080606085015281855180845260a086019150828701935060005b81811015612d4157845183529383019391830191600101612d25565b50909998505050505050505050565b600080600080600060808688031215612d6857600080fd5b85359450602086013567ffffffffffffffff80821115612d8757600080fd5b612d9389838a01612c27565b955060408801359150612da58261296e565b90935060608701359080821115612dbb57600080fd5b50612dc888828901612986565b969995985093965092949392505050565b60008060408385031215612dec57600080fd5b8235612df78161296e565b9150602083013567ffffffffffffffff811115612e1357600080fd5b612e1f85828601612c27565b9150509250929050565b634e487b7160e01b600052601160045260246000fd5b600082821015612e5157612e51612e29565b500390565b6000816000190483118215151615612e7057612e70612e29565b500290565b634e487b7160e01b600052601260045260246000fd5b600082612ea857634e487b7160e01b600052601260045260246000fd5b500490565b60008219821115612ec057612ec0612e29565b500190565b600060208284031215612ed757600080fd5b5051919050565b600060208284031215612ef057600080fd5b81516124848161296e565b600060208284031215612f0d57600080fd5b8151801515811461248457600080fd5b60008060408385031215612f3057600080fd5b8251612f3b8161296e565b6020939093015192949293505050565b634e487b7160e01b600052603260045260246000fd5b600060018201612f7357612f73612e29565b5060010190565b60208152816020820152818360408301376000818301604090810191909152601f909201601f19160101919050565b60008060408385031215612fbc57600080fd5b8251915060208084015167ffffffffffffffff811115612fdb57600080fd5b8401601f81018613612fec57600080fd5b8051612ffa612c4882612c03565b81815260059190911b8201830190838101908883111561301957600080fd5b928401925b828410156130375783518252928401929084019061301e565b80955050505050509250929050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b600080604083850312156130a457600080fd5b50508051602090910151909290915056fea264697066735822122065a8aaaefde334d0aae9c11edb77967cdc502fa5a50fa7ae199f3fa3dbbd1a1564736f6c634300080d0033";

type SeacowsERC721TradePairConstructorParams =
  | [
      linkLibraryAddresses: SeacowsERC721TradePairLibraryAddresses,
      signer?: Signer
    ]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SeacowsERC721TradePairConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class SeacowsERC721TradePair__factory extends ContractFactory {
  constructor(...args: SeacowsERC721TradePairConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        SeacowsERC721TradePair__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: SeacowsERC721TradePairLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$7361758c0d185160b6cca64507b9678c39\\$__", "g"),
      linkLibraryAddresses["contracts/lib/PricingKernel.sol:PricingKernel"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<SeacowsERC721TradePair> {
    return super.deploy(overrides || {}) as Promise<SeacowsERC721TradePair>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): SeacowsERC721TradePair {
    return super.attach(address) as SeacowsERC721TradePair;
  }
  connect(signer: Signer): SeacowsERC721TradePair__factory {
    return super.connect(signer) as SeacowsERC721TradePair__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SeacowsERC721TradePairInterface {
    return new utils.Interface(_abi) as SeacowsERC721TradePairInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SeacowsERC721TradePair {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as SeacowsERC721TradePair;
  }
}

export interface SeacowsERC721TradePairLibraryAddresses {
  ["contracts/lib/PricingKernel.sol:PricingKernel"]: string;
}
