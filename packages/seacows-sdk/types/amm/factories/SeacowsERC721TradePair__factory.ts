/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  SeacowsERC721TradePair,
  SeacowsERC721TradePairInterface,
} from "../SeacowsERC721TradePair";

const _abi = [
  {
    inputs: [],
    name: "FM_NON_FEE_MANAGER",
    type: "error",
  },
  {
    inputs: [],
    name: "FM_NON_ROYALTY_FEE_MANAGER",
    type: "error",
  },
  {
    inputs: [],
    name: "RM_NON_ROYALTY_FEE_MANAGER",
    type: "error",
  },
  {
    inputs: [],
    name: "SPMD_ONLY_POSITION_MANAGER",
    type: "error",
  },
  {
    inputs: [],
    name: "SPMD_PAUSED",
    type: "error",
  },
  {
    inputs: [],
    name: "SPM_BELOW_NFT_OUT_MIN_CONSTRAINT",
    type: "error",
  },
  {
    inputs: [],
    name: "SPM_BELOW_TOKEN_OUT_MIN_CONSTRAINT",
    type: "error",
  },
  {
    inputs: [],
    name: "SPM_ETH_TRANSFER_FAILED",
    type: "error",
  },
  {
    inputs: [],
    name: "SPM_EXPIRED",
    type: "error",
  },
  {
    inputs: [],
    name: "SPM_INSUFFICIENT_AMOUNT",
    type: "error",
  },
  {
    inputs: [],
    name: "SPM_INSUFFICIENT_LIQUIDITY",
    type: "error",
  },
  {
    inputs: [],
    name: "SPM_INSUFFICIENT_MINIMUM_LIQUIDITY_AMOUNT",
    type: "error",
  },
  {
    inputs: [],
    name: "SPM_INVALID_TOKEN_ID",
    type: "error",
  },
  {
    inputs: [],
    name: "SPM_ONLY_BURNABLE_WHEN_CLEARED",
    type: "error",
  },
  {
    inputs: [],
    name: "SPM_ONLY_PAIR_CAN_BURN",
    type: "error",
  },
  {
    inputs: [],
    name: "SPM_ONLY_PAIR_CAN_MINT",
    type: "error",
  },
  {
    inputs: [],
    name: "SPM_PAIR_NOT_EXIST",
    type: "error",
  },
  {
    inputs: [],
    name: "SPM_UNAUTHORIZED",
    type: "error",
  },
  {
    inputs: [],
    name: "SSB_ETH_TRANSFER_FAILED",
    type: "error",
  },
  {
    inputs: [],
    name: "SSB_INSUFFICIENT_AMOUNT",
    type: "error",
  },
  {
    inputs: [],
    name: "SSB_ONE_MORE_BLOCK_AT_LEAST",
    type: "error",
  },
  {
    inputs: [],
    name: "SSB_TOKEN_TRANSFER_FAILED",
    type: "error",
  },
  {
    inputs: [],
    name: "SSB_UNAUTHORIZED",
    type: "error",
  },
  {
    inputs: [],
    name: "STPF_PAIR_ALREADY_EXIST",
    type: "error",
  },
  {
    inputs: [],
    name: "STP_EXCEED_NFT_OUT_MAX",
    type: "error",
  },
  {
    inputs: [],
    name: "STP_FEE_OUT_OF_RANGE",
    type: "error",
  },
  {
    inputs: [],
    name: "STP_INSUFFICIENT_INPUT_AMOUNT",
    type: "error",
  },
  {
    inputs: [],
    name: "STP_INSUFFICIENT_LIQUIDITY",
    type: "error",
  },
  {
    inputs: [],
    name: "STP_INSUFFICIENT_LIQUIDITY_BURNED",
    type: "error",
  },
  {
    inputs: [],
    name: "STP_INSUFFICIENT_LIQUIDITY_MINTED",
    type: "error",
  },
  {
    inputs: [],
    name: "STP_INSUFFICIENT_MIN_FEE",
    type: "error",
  },
  {
    inputs: [],
    name: "STP_INSUFFICIENT_NFT_TO_WITHDRAW",
    type: "error",
  },
  {
    inputs: [],
    name: "STP_INSUFFICIENT_OUTPUT_AMOUNT",
    type: "error",
  },
  {
    inputs: [],
    name: "STP_INVALID_FEE",
    type: "error",
  },
  {
    inputs: [],
    name: "STP_INVALID_TO",
    type: "error",
  },
  {
    inputs: [],
    name: "STP_K",
    type: "error",
  },
  {
    inputs: [],
    name: "STP_SKIM_QUANTITY_MISMATCH",
    type: "error",
  },
  {
    inputs: [],
    name: "STP_UNAUTHORIZED",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "cTokenOut",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "cNftOut",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenAmountOut",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "idsOut",
        type: "uint256[]",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "Burn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "fee",
        type: "uint256",
      },
    ],
    name: "CollectFee",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "nftAmount",
        type: "uint256",
      },
    ],
    name: "Mint",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenIn",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "nftIn",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenOut",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "nftOut",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "Swap",
    type: "event",
  },
  {
    inputs: [],
    name: "ACC_REWARD_PER_SHARE_PRECISION",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "COMPLEMENT_PRECISION",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "COMPLEMENT_PRECISION_DIGITS",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_PROTOCOL_FEE_PERCENT",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ONE_PERCENT",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PERCENTAGE_PRECISION",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "POINT_FIVE_PERCENT",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "accRewardPerShare",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "_ids",
        type: "uint256[]",
      },
    ],
    name: "burn",
    outputs: [
      {
        internalType: "uint256",
        name: "cTokenOut",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "cNftOut",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "tokenOut",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "idsOut",
        type: "uint256[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenBalance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_nftBalance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_tokenExpectedOut",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_nftExpectedOut",
        type: "uint256",
      },
    ],
    name: "caculateAssetsOutAfterComplemented",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "collect",
    outputs: [
      {
        internalType: "uint256",
        name: "_fee",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "collection",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feeBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feePercent",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getComplementedBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "tokenBalance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "nftBalance",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "getPendingFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getReserves",
    outputs: [
      {
        internalType: "uint256",
        name: "_reserve0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_reserve1",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "getRoyaltyRecipient",
    outputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token_",
        type: "address",
      },
      {
        internalType: "address",
        name: "collection_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "fee_",
        type: "uint256",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "isRoyaltySupported",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastFeeBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minRoyaltyFeePercent",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minTotalFeePercent",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "toTokenId",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [
      {
        internalType: "uint256",
        name: "liquidity",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_operator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_fromTokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_toTokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "onERC3525Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC721Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "positionInfos",
    outputs: [
      {
        internalType: "uint256",
        name: "feeDebt",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "unclaimedFee",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "positionManager",
    outputs: [
      {
        internalType: "contract ISeacowsPositionManager",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "protocolFeePercent",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "royaltyFeeManager",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "royaltyRegistry",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_percent",
        type: "uint256",
      },
    ],
    name: "setMinRoyaltyFeePercent",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_protocolFee",
        type: "uint256",
      },
    ],
    name: "setProtocolFeePercent",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "skim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "slot",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenAmountOut",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "idsOut",
        type: "uint256[]",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "swap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "updatePositionFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "updatePositionFeeDebt",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "updateSwapFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061305d806100206000396000f3fe608060405234801561001057600080fd5b506004361061027e5760003560e01c80639cc7f7081161015c578063c0463ac5116100ce578063e5d4088e11610087578063e5d4088e14610569578063e5f9e83b1461057c578063e86a831914610585578063f78db9b81461058d578063f886389814610595578063fc0c546a146105a857600080fd5b8063c0463ac514610504578063c07bff9f14610517578063ce3f865f1461052a578063d6e6eb9f1461053d578063db8cd58914610546578063e256888f1461056057600080fd5b8063a1cb5a8a11610120578063a1cb5a8a14610493578063a49834211461049c578063a7439ac4146104af578063a74d5f30146104b7578063bb2eb4d2146104d9578063bfb7f05e146104e157600080fd5b80639cc7f708146104435780639e75baa714610456578063a015a3d814610465578063a0712d6814610478578063a11b07121461048b57600080fd5b80633c97d5ae116101f55780636352211e116101b95780636352211e146103da578063791b98bc146104055780637de1e536146104165780637fd6f15c1461042957806387e4401f14610432578063939d62371461043a57600080fd5b80633c97d5ae1461039a57806354fb3921146103a35780635c2454b4146103b65780635c975abb146103c957806360b71d4e146103d157600080fd5b8063150b7a0211610247578063150b7a021461031c57806317893e3c1461033a5780631794bb3c1461036157806318160ddd146103745780631a88bc661461038a5780631da8afb31461039257600080fd5b80629ce20b1461028357806301ffc9a7146102c05780630902f1ac146102e35780630c472afd146102ff5780630c6bc62b14610309575b600080fd5b6102a2610291366004612941565b629ce20b60e01b9695505050505050565b6040516001600160e01b031990911681526020015b60405180910390f35b6102d36102ce3660046129b4565b6105bb565b60405190151581526020016102b7565b603d54603e545b604080519283526020830191909152016102b7565b6103076105e7565b005b6103076103173660046129de565b610652565b6102a261032a366004612a3e565b630a85bd0160e11b949350505050565b6102ea6103483660046129de565b6039602052600090815260409020805460019091015482565b61030761036f366004612b02565b610690565b61037c6107ee565b6040519081526020016102b7565b61037c61087c565b6102d36108be565b61037c61271081565b6103076103b13660046129de565b6109cc565b6102ea6103c4366004612b43565b610a6b565b6102d3610a87565b61037c60375481565b6103ed6103e83660046129de565b610afc565b6040516001600160a01b0390911681526020016102b7565b6035546001600160a01b03166103ed565b6033546103ed906001600160a01b031681565b61037c603b5481565b6103ed610b7e565b61037c60365481565b61037c6104513660046129de565b610bf3565b61037c670de0b6b3a764000081565b6103ed6104733660046129de565b610c75565b61037c6104863660046129de565b610df6565b6103ed610f48565b61037c60385481565b6103076104aa3660046129de565b610f99565b6102ea61105c565b6104c06103e881565b60405167ffffffffffffffff90911681526020016102b7565b6104c0606481565b6104f46104ef366004612c04565b611165565b6040516102b79493929190612c66565b6103076105123660046129de565b6117a2565b610307610525366004612cc2565b611809565b61037c6105383660046129de565b611d15565b61037c603c5481565b61054e601281565b60405160ff90911681526020016102b7565b6104c061271081565b610307610577366004612d4b565b611e7c565b61037c603a5481565b61037c612035565b6104c0603281565b61037c6105a33660046129de565b6120e2565b6034546103ed906001600160a01b031681565b60006105c68261217e565b806105e15750636bc0dc1f60e01b6001600160e01b03198316145b92915050565b60006105f16107ee565b90506038546037541480610603575080155b1561060b5750565b8061271060385460375461061f9190612db1565b6106299190612dc8565b6106339190612dfd565b603660008282546106449190612e1f565b909155505060375460385550565b61065a610b7e565b6001600160a01b0316336001600160a01b03161461068b57604051632a9e285560e11b815260040160405180910390fd5b603a55565b600054610100900460ff16158080156106b05750600054600160ff909116105b806106ca5750303b1580156106ca575060005460ff166001145b6107325760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084015b60405180910390fd5b6000805460ff191660011790558015610755576000805461ff0019166101001790555b60648214801590610767575060328214155b1561078557604051636301f06d60e11b815260040160405180910390fd5b603b8290556003603c5561079a3385856121ce565b6107a2612237565b80156107e8576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50505050565b60006108026035546001600160a01b031690565b6001600160a01b03166388200bb961081861087c565b6040518263ffffffff1660e01b815260040161083691815260200190565b602060405180830381865afa158015610853573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108779190612e37565b905090565b60006108906035546001600160a01b031690565b60405163add21d2560e01b81523060048201526001600160a01b03919091169063add21d2590602401610836565b6000806108c9610f48565b6001600160a01b0316146109c65760006108e1610f48565b60335460405163de5488af60e01b81526001600160a01b03918216600482015291169063de5488af90602401602060405180830381865afa15801561092a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061094e9190612e50565b6040516301ffc9a760e01b815263152a902d60e11b60048201529091506001600160a01b038216906301ffc9a790602401602060405180830381865afa15801561099c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109c09190612e6d565b91505090565b50600090565b6035546001600160a01b031633146109f75760405163975e14bb60e01b815260040160405180910390fd5b600081815260396020526040812090610a0f83610bf3565b90508015610a66576000826000015461271060365484610a2f9190612dc8565b610a399190612dfd565b610a439190612db1565b905080156107e85780836001016000828254610a5f9190612e1f565b9091555050505b505050565b600080610a7a86868686612268565b9150915094509492505050565b6000610a9b6035546001600160a01b031690565b6001600160a01b031663b187bd266040518163ffffffff1660e01b8152600401602060405180830381865afa158015610ad8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108779190612e6d565b6000610b106035546001600160a01b031690565b6001600160a01b0316636352211e836040518263ffffffff1660e01b8152600401610b3d91815260200190565b602060405180830381865afa158015610b5a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105e19190612e50565b6000610b926035546001600160a01b031690565b6001600160a01b03166387e4401f6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610bcf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108779190612e50565b6000610c076035546001600160a01b031690565b6001600160a01b0316639cc7f708836040518263ffffffff1660e01b8152600401610c3491815260200190565b602060405180830381865afa158015610c51573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105e19190612e37565b600080610c80610f48565b6001600160a01b031614610df1576000610c98610f48565b60335460405163de5488af60e01b81526001600160a01b03918216600482015291169063de5488af90602401602060405180830381865afa158015610ce1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d059190612e50565b6040516301ffc9a760e01b815263152a902d60e11b60048201529091506001600160a01b038216906301ffc9a790602401602060405180830381865afa158015610d53573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d779190612e6d565b15610def5760405163152a902d60e11b815260048101849052600060248201526001600160a01b03821690632a55205a906044016040805180830381865afa158015610dc7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610deb9190612e8f565b5091505b505b919050565b6000610e00610a87565b15610e1e5760405163a81b9f0560e01b815260040160405180910390fd5b610e266122fc565b600080610e36603d54603e549091565b91509150600080610e4561105c565b90925090506000610e568584612db1565b90506000610e648584612db1565b90506000610e706107ee565b905080600003610e9357610e8c610e878385612dc8565b612355565b9750610ec8565b610ec587610ea18386612dc8565b610eab9190612dfd565b87610eb68486612dc8565b610ec09190612dfd565b612444565b97505b60008811610ee957604051632c82cdd360e11b815260040160405180910390fd5b610ef3898961245a565b603d859055603e849055604080518481526020810184905233917f4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f910160405180910390a250505050505050610df160018055565b6000610f5c6035546001600160a01b031690565b6001600160a01b031663a11b07126040518163ffffffff1660e01b8152600401602060405180830381865afa158015610bcf573d6000803e3d6000fd5b33610fac6035546001600160a01b031690565b6001600160a01b031663d0fb02036040518163ffffffff1660e01b8152600401602060405180830381865afa158015610fe9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061100d9190612e50565b6001600160a01b031614611034576040516333cf93eb60e11b815260040160405180910390fd5b6103e881111561105757604051630737667760e11b815260040160405180910390fd5b603c55565b6037546034546040516370a0823160e01b8152306004820152600092839290916001600160a01b03909116906370a0823190602401602060405180830381865afa1580156110ae573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110d29190612e37565b6110dc9190612db1565b6033546040516370a0823160e01b8152306004820152919350670de0b6b3a7640000916001600160a01b03909116906370a0823190602401602060405180830381865afa158015611131573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111559190612e37565b61115f9190612dc8565b90509091565b60008060006060611174610a87565b156111925760405163a81b9f0560e01b815260040160405180910390fd5b61119a6122fc565b6000806111a561105c565b9150915060006111bd6035546001600160a01b031690565b6040516321761c7160e11b815230600482015290915060009081906001600160a01b03841690639cc7f7089082906342ec38e290602401602060405180830381865afa158015611211573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112359190612e37565b6040518263ffffffff1660e01b815260040161125391815260200190565b602060405180830381865afa158015611270573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112949190612e37565b905061129e6107ee565b6112a88683612dc8565b6112b29190612dfd565b98506112bc6107ee565b6112c68583612dc8565b6112d09190612dfd565b97508815806112dd575087155b156112fb57604051633f04d0db60e11b815260040160405180910390fd5b600061130986868c8c612268565b6040516321761c7160e11b81523060048201529199509150611380906001600160a01b038616906342ec38e290602401602060405180830381865afa158015611356573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061137a9190612e37565b836124ca565b611392670de0b6b3a764000082612dfd565b6034546040516370a0823160e01b81523060048201529194506001600160a01b0316906370a0823190602401602060405180830381865afa1580156113db573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113ff9190612e37565b881115611475576034546040516370a0823160e01b81523060048201526001600160a01b03909116906370a0823190602401602060405180830381865afa15801561144e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114729190612e37565b97505b5050808951101561149957604051630f19e6dd60e41b815260040160405180910390fd5b60345460405163a9059cbb60e01b81526001600160a01b038c81166004830152602482018990529091169063a9059cbb906044016020604051808303816000875af11580156114ec573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115109190612e6d565b508067ffffffffffffffff81111561152a5761152a6129f7565b604051908082528060200260200182016040528015611553578160200160208202803683370190505b5094506000805b828210801561156957508a5181105b15611702576033548b5130916001600160a01b031690636352211e908e908590811061159757611597612ebd565b60200260200101516040518263ffffffff1660e01b81526004016115bd91815260200190565b602060405180830381865afa1580156115da573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115fe9190612e50565b6001600160a01b0316036116f0576033548b516001600160a01b03909116906342842e0e9030908f908f908690811061163957611639612ebd565b60209081029190910101516040516001600160e01b031960e086901b1681526001600160a01b0393841660048201529290911660248301526044820152606401600060405180830381600087803b15801561169357600080fd5b505af11580156116a7573d6000803e3d6000fd5b505050508a81815181106116bd576116bd612ebd565b60200260200101518783815181106116d7576116d7612ebd565b6020908102919091010152816116ec81612ed3565b9250505b806116fa81612ed3565b91505061155a565b82821461172257604051631796524360e31b815260040160405180910390fd5b505061172c61105c565b603d829055603e8190559094509250896001600160a01b0316336001600160a01b03167f8c54d40e52af817976c5f2b138403a5ff53b552d179dc91099fd8d789ebf70738a8a8a8a6040516117849493929190612c66565b60405180910390a35050505061179960018055565b93509350935093565b6035546001600160a01b031633146117cd5760405163975e14bb60e01b815260040160405180910390fd5b6000818152603960205260408120906117e583610bf3565b9050612710603654826117f89190612dc8565b6118029190612dfd565b9091555050565b611811610a87565b1561182f5760405163a81b9f0560e01b815260040160405180910390fd5b6118376122fc565b8415801561184457508351155b15611862576040516335e1f2d160e11b815260040160405180910390fd5b6000806060600080611877603d54603e549091565b91509150818a10158061189e575080670de0b6b3a76400008a5161189b9190612dc8565b10155b156118bc576040516341cb3f0b60e01b815260040160405180910390fd5b6040516341bc698d60e01b815260009033906341bc698d906118e4908b908b90600401612eec565b6000604051808303816000875af1158015611903573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261192b9190810190612f1b565b945090508015801561193c57508351155b1561195a576040516397bc6fa360e01b815260040160405180910390fd5b6034546001600160a01b038a81169116148061198357506033546001600160a01b038a81169116145b156119a157604051631ec8b2d360e11b815260040160405180910390fd5b8a15611a205760345460405163a9059cbb60e01b81526001600160a01b038b81166004830152602482018e90529091169063a9059cbb906044016020604051808303816000875af11580156119fa573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a1e9190612e6d565b505b895115611ae75760005b8a51811015611ae5576033548b516001600160a01b03909116906342842e0e9030908d908f9086908110611a6057611a60612ebd565b60209081029190910101516040516001600160e01b031960e086901b1681526001600160a01b0393841660048201529290911660248301526044820152606401600060405180830381600087803b158015611aba57600080fd5b505af1158015611ace573d6000803e3d6000fd5b505050508080611add90612ed3565b915050611a2a565b505b600080611af261105c565b90925090506000611b038587612dc8565b611b0d8385612dc8565b611b179190612db1565b9050603d548311611b29576000611b4d565b8082603d5485611b399190612db1565b611b439190612dc8565b611b4d9190612db1565b985082603d5411611b5f576000611b83565b808284603d54611b6f9190612db1565b611b799190612dc8565b611b839190612e1f565b97506000611b918a8a612502565b9050611b9f61271083612dc8565b611ba7612035565b611bb19083612dc8565b1115611bd0576040516310fb985b60e11b815260040160405180910390fd5b611bda8383612dfd565b9150611be6838b612dfd565b9950611bf2838a612dfd565b9850611bfe8a8a612502565b9050611c0981612511565b611c139083612db1565b9150611c1e81612634565b611c289083612db1565b915050611c3681888f61266a565b611c3e61105c565b9093509150611c4d8587612dc8565b611c578385612dc8565b1015611c76576040516378be6e7360e01b815260040160405180910390fd5b50603d91909155603e55505081516001600160a01b038816915033907fd78ad95fa46c994b6551d0da85fc275fe613ce37657fb8d5e3d130840159d822908690611cc990670de0b6b3a764000090612dc8565b86670de0b6b3a76400008d51611cdf9190612dc8565b60408051948552602085019390935291830152606082015260800160405180910390a3505050611d0e60018055565b5050505050565b6000611d1f6105e7565b6000611d2a836120e2565b600084815260396020526040812060018101919091556036549192509061271090611d5486610bf3565b611d5e9190612dc8565b611d689190612dfd565b81556037548211611d795781611d7d565b6037545b92508260386000828254611d919190612db1565b925050819055508260376000828254611daa9190612db1565b90915550506034546001600160a01b031663a9059cbb611dc986610afc565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602481018690526044016020604051808303816000875af1158015611e16573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e3a9190612e6d565b50837f38436c42bcfd74414acafc159a381bf74b9880bc4c1c9f922686fc7161d9c7ad84604051611e6d91815260200190565b60405180910390a25050919050565b611e846122fc565b600080611e8f61105c565b91509150670de0b6b3a76400008351611ea89190612dc8565b603e54611eb59083612db1565b14611ed3576040516332848fe160e21b815260040160405180910390fd5b603454603d546001600160a01b039091169063a9059cbb908690611ef79086612db1565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af1158015611f42573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f669190612e6d565b5060005b83518110156120255760335484516001600160a01b03909116906342842e0e9030908890889086908110611fa057611fa0612ebd565b60209081029190910101516040516001600160e01b031960e086901b1681526001600160a01b0393841660048201529290911660248301526044820152606401600060405180830381600087803b158015611ffa57600080fd5b505af115801561200e573d6000803e3d6000fd5b50505050808061201d90612ed3565b915050611f6a565b50505061203160018055565b5050565b60008061204a6035546001600160a01b031690565b6001600160a01b031663017e7e586040518163ffffffff1660e01b8152600401602060405180830381865afa158015612087573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120ab9190612e50565b603a54603c54919250906001600160a01b0383166120ca5760006120ce565b603b545b6120d89190612e1f565b6109c09190612e1f565b60008181526039602052604081206036546038546037541461213a576121066107ee565b6127106038546037546121199190612db1565b6121239190612dc8565b61212d9190612dfd565b6121379082612e1f565b90505b81546127108261214987610bf3565b6121539190612dc8565b61215d9190612dfd565b836001015461216c9190612e1f565b6121769190612db1565b949350505050565b60006301ffc9a760e01b6001600160e01b0319831614806121af57506001600160e01b03198216630a85bd0160e11b145b806105e157506001600160e01b03198216629ce20b60e01b1492915050565b600054610100900460ff166121f55760405162461bcd60e51b815260040161072990612fb8565b603480546001600160a01b039384166001600160a01b031991821617909155603380549284169282169290921790915560358054939092169216919091179055565b600054610100900460ff1661225e5760405162461bcd60e51b815260040161072990612fb8565b612266612825565b565b604051633d27eded60e11b81526004810185905260248101849052604481018390526064810182905260126084820152600090819073__$7361758c0d185160b6cca64507b9678c39$__90637a4fdbda9060a4016040805180830381865af41580156122d8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a7a9190613003565b60026001540361234e5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610729565b6002600155565b60008160000361236757506000919050565b600060016123748461284c565b901c6001901b9050600181848161238d5761238d612de7565b048201901c905060018184816123a5576123a5612de7565b048201901c905060018184816123bd576123bd612de7565b048201901c905060018184816123d5576123d5612de7565b048201901c905060018184816123ed576123ed612de7565b048201901c9050600181848161240557612405612de7565b048201901c9050600181848161241d5761241d612de7565b048201901c905061243d8182858161243757612437612de7565b04612444565b9392505050565b6000818310612453578161243d565b5090919050565b60355460405163f0e88e7f60e01b815260048101849052602481018390526001600160a01b039091169063f0e88e7f906044015b600060405180830381600087803b1580156124a857600080fd5b505af11580156124bc573d6000803e3d6000fd5b505050505050565b60018055565b6035546040516387fe861160e01b815260048101849052602481018390526001600160a01b03909116906387fe86119060440161248e565b6000818311612453578161243d565b6000806125266035546001600160a01b031690565b6001600160a01b031663017e7e586040518163ffffffff1660e01b8152600401602060405180830381865afa158015612563573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906125879190612e50565b603c549091506127109061259b9085612dc8565b6125a59190612dfd565b91506001600160a01b03811615610def5760345460405163a9059cbb60e01b81526001600160a01b038381166004830152602482018590529091169063a9059cbb906044016020604051808303816000875af1158015612609573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061262d9190612e6d565b5050919050565b603b54600090612710906126489084612dc8565b6126529190612dfd565b9050806037546126629190612e1f565b603755919050565b821580159061267c575061267c6108be565b15610a66576000825182516126919190612e1f565b61269b9085612dfd565b905060005b82518110156127675760345483516001600160a01b039091169063a9059cbb906126e3908690859081106126d6576126d6612ebd565b6020026020010151610c75565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602481018590526044016020604051808303816000875af1158015612730573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906127549190612e6d565b508061275f81612ed3565b9150506126a0565b5060005b8351811015611d0e5760345484516001600160a01b039091169063a9059cbb906127a1908790859081106126d6576126d6612ebd565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602481018590526044016020604051808303816000875af11580156127ee573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906128129190612e6d565b508061281d81612ed3565b91505061276b565b600054610100900460ff166124c45760405162461bcd60e51b815260040161072990612fb8565b600080608083901c1561286157608092831c92015b604083901c1561287357604092831c92015b602083901c1561288557602092831c92015b601083901c1561289757601092831c92015b600883901c156128a957600892831c92015b600483901c156128bb57600492831c92015b600283901c156128cd57600292831c92015b600183901c156105e15760010192915050565b6001600160a01b03811681146128f557600080fd5b50565b60008083601f84011261290a57600080fd5b50813567ffffffffffffffff81111561292257600080fd5b60208301915083602082850101111561293a57600080fd5b9250929050565b60008060008060008060a0878903121561295a57600080fd5b8635612965816128e0565b9550602087013594506040870135935060608701359250608087013567ffffffffffffffff81111561299657600080fd5b6129a289828a016128f8565b979a9699509497509295939492505050565b6000602082840312156129c657600080fd5b81356001600160e01b03198116811461243d57600080fd5b6000602082840312156129f057600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715612a3657612a366129f7565b604052919050565b60008060008060808587031215612a5457600080fd5b8435612a5f816128e0565b9350602085810135612a70816128e0565b935060408601359250606086013567ffffffffffffffff80821115612a9457600080fd5b818801915088601f830112612aa857600080fd5b813581811115612aba57612aba6129f7565b612acc601f8201601f19168501612a0d565b91508082528984828501011115612ae257600080fd5b808484018584013760008482840101525080935050505092959194509250565b600080600060608486031215612b1757600080fd5b8335612b22816128e0565b92506020840135612b32816128e0565b929592945050506040919091013590565b60008060008060808587031215612b5957600080fd5b5050823594602084013594506040840135936060013592509050565b600067ffffffffffffffff821115612b8f57612b8f6129f7565b5060051b60200190565b600082601f830112612baa57600080fd5b81356020612bbf612bba83612b75565b612a0d565b82815260059290921b84018101918181019086841115612bde57600080fd5b8286015b84811015612bf95780358352918301918301612be2565b509695505050505050565b600080600060608486031215612c1957600080fd5b8335612c24816128e0565b92506020840135612c34816128e0565b9150604084013567ffffffffffffffff811115612c5057600080fd5b612c5c86828701612b99565b9150509250925092565b600060808201868352602086818501528560408501526080606085015281855180845260a086019150828701935060005b81811015612cb357845183529383019391830191600101612c97565b50909998505050505050505050565b600080600080600060808688031215612cda57600080fd5b85359450602086013567ffffffffffffffff80821115612cf957600080fd5b612d0589838a01612b99565b955060408801359150612d17826128e0565b90935060608701359080821115612d2d57600080fd5b50612d3a888289016128f8565b969995985093965092949392505050565b60008060408385031215612d5e57600080fd5b8235612d69816128e0565b9150602083013567ffffffffffffffff811115612d8557600080fd5b612d9185828601612b99565b9150509250929050565b634e487b7160e01b600052601160045260246000fd5b600082821015612dc357612dc3612d9b565b500390565b6000816000190483118215151615612de257612de2612d9b565b500290565b634e487b7160e01b600052601260045260246000fd5b600082612e1a57634e487b7160e01b600052601260045260246000fd5b500490565b60008219821115612e3257612e32612d9b565b500190565b600060208284031215612e4957600080fd5b5051919050565b600060208284031215612e6257600080fd5b815161243d816128e0565b600060208284031215612e7f57600080fd5b8151801515811461243d57600080fd5b60008060408385031215612ea257600080fd5b8251612ead816128e0565b6020939093015192949293505050565b634e487b7160e01b600052603260045260246000fd5b600060018201612ee557612ee5612d9b565b5060010190565b60208152816020820152818360408301376000818301604090810191909152601f909201601f19160101919050565b60008060408385031215612f2e57600080fd5b8251915060208084015167ffffffffffffffff811115612f4d57600080fd5b8401601f81018613612f5e57600080fd5b8051612f6c612bba82612b75565b81815260059190911b82018301908381019088831115612f8b57600080fd5b928401925b82841015612fa957835182529284019290840190612f90565b80955050505050509250929050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b6000806040838503121561301657600080fd5b50508051602090910151909290915056fea26469706673582212205f527655f276a5a63045389c4726f84d35489904c9c72a91d0e211b21d6ea75364736f6c634300080d0033";

type SeacowsERC721TradePairConstructorParams =
  | [
      linkLibraryAddresses: SeacowsERC721TradePairLibraryAddresses,
      signer?: Signer
    ]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SeacowsERC721TradePairConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class SeacowsERC721TradePair__factory extends ContractFactory {
  constructor(...args: SeacowsERC721TradePairConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        SeacowsERC721TradePair__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: SeacowsERC721TradePairLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$7361758c0d185160b6cca64507b9678c39\\$__", "g"),
      linkLibraryAddresses["contracts/lib/PricingKernel.sol:PricingKernel"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<SeacowsERC721TradePair> {
    return super.deploy(overrides || {}) as Promise<SeacowsERC721TradePair>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): SeacowsERC721TradePair {
    return super.attach(address) as SeacowsERC721TradePair;
  }
  connect(signer: Signer): SeacowsERC721TradePair__factory {
    return super.connect(signer) as SeacowsERC721TradePair__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SeacowsERC721TradePairInterface {
    return new utils.Interface(_abi) as SeacowsERC721TradePairInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SeacowsERC721TradePair {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as SeacowsERC721TradePair;
  }
}

export interface SeacowsERC721TradePairLibraryAddresses {
  ["contracts/lib/PricingKernel.sol:PricingKernel"]: string;
}
