/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  SeacowsERC721TradePair,
  SeacowsERC721TradePairInterface,
} from "../SeacowsERC721TradePair";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount0",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount1",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "Burn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount0",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount1",
        type: "uint256",
      },
    ],
    name: "Mint",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenIn",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "nftIn",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenOut",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "nftOut",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "Swap",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint112",
        name: "reserve0",
        type: "uint112",
      },
      {
        indexed: false,
        internalType: "uint112",
        name: "reserve1",
        type: "uint112",
      },
    ],
    name: "Sync",
    type: "event",
  },
  {
    inputs: [],
    name: "COMPLEMENT_PRECISION",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ONE_PERCENT",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PERCENTAGE_PRECISION",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "POINT_FIVE_PERCENT",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "burn",
    outputs: [
      {
        internalType: "uint256",
        name: "amount0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount1",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "collection",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "fee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "address",
        name: "_collection",
        type: "address",
      },
    ],
    name: "getComplementedBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "balance0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "balance1",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getReserves",
    outputs: [
      {
        internalType: "uint112",
        name: "_reserve0",
        type: "uint112",
      },
      {
        internalType: "uint112",
        name: "_reserve1",
        type: "uint112",
      },
      {
        internalType: "uint32",
        name: "_blockTimestampLast",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token_",
        type: "address",
      },
      {
        internalType: "address",
        name: "collection_",
        type: "address",
      },
      {
        internalType: "uint112",
        name: "fee_",
        type: "uint112",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "toTokenId",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [
      {
        internalType: "uint256",
        name: "liquidity",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_operator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_fromTokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_toTokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "onERC3525Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC721Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "positionManager",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "price0CumulativeLast",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "price1CumulativeLast",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "skim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "slot",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenAmountOut",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "idsOut",
        type: "uint256[]",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "swap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "sync",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506121e8806100206000396000f3fe608060405234801561001057600080fd5b506004361061014c5760003560e01c80637de1e536116100c3578063ddca3f431161007c578063ddca3f43146102f8578063e256888f14610301578063e5d4088e1461030a578063f78db9b81461031d578063fc0c546a14610325578063fff6cae91461033857600080fd5b80637de1e5361461029557806393f0b340146102a85780639e75baa7146102bb578063a0712d68146102ca578063ba36b92d146102dd578063bb2eb4d2146102f057600080fd5b80631a88bc66116101155780631a88bc66146102195780632c586d9c146102215780634b9bbb14146102495780635909c0d51461025e5780635a3d549314610267578063791b98bc1461027057600080fd5b80629ce20b1461015157806301ffc9a71461018e5780630902f1ac146101b1578063150b7a02146101e557806318160ddd14610203575b600080fd5b61017061015f366004611b2a565b629ce20b60e01b9695505050505050565b6040516001600160e01b031990911681526020015b60405180910390f35b6101a161019c366004611bc9565b610340565b6040519015158152602001610185565b6101b9610391565b604080516001600160701b03948516815293909216602084015263ffffffff1690820152606001610185565b6101706101f3366004611c3a565b630a85bd0160e11b949350505050565b61020b6103bb565b604051908152602001610185565b61020b610449565b61023461022f366004611cfa565b61048b565b60408051928352602083019190915201610185565b61025c610257366004611da4565b61059b565b005b61020b603a5481565b61020b603b5481565b6035546001600160a01b03165b6040516001600160a01b039091168152602001610185565b60365461027d906001600160a01b031681565b61025c6102b6366004611dfb565b610a9b565b61020b670de0b6b3a764000081565b61020b6102d8366004611e4e565b610c52565b6102346102eb366004611e67565b610e17565b61020b606481565b61020b60385481565b61020b61271081565b61025c610318366004611e67565b611235565b61020b603281565b60375461027d906001600160a01b031681565b61025c61145b565b60006301ffc9a760e01b6001600160e01b03198316148061037157506001600160e01b03198216630a85bd0160e11b145b8061038b57506001600160e01b03198216629ce20b60e01b145b92915050565b6039546001600160701b0380821692600160701b830490911691600160e01b900463ffffffff1690565b60006103cf6035546001600160a01b031690565b6001600160a01b03166388200bb96103e5610449565b6040518263ffffffff1660e01b815260040161040391815260200190565b602060405180830381865afa158015610420573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104449190611eb5565b905090565b600061045d6035546001600160a01b031690565b60405163add21d2560e01b81523060048201526001600160a01b03919091169063add21d2590602401610403565b6033546040516370a0823160e01b815230600482015260009182916001600160a01b038616906370a0823190602401602060405180830381865afa1580156104d7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104fb9190611eb5565b6105059190611ee4565b6034546040516370a0823160e01b81523060048201529193509061058890670de0b6b3a7640000906001600160a01b038716906370a0823190602401602060405180830381865afa15801561055e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105829190611eb5565b906114ba565b6105929190611f0b565b90509250929050565b6105a36114cd565b60008311806105b3575060008251115b6106105760405162461bcd60e51b815260206004820152602360248201527f536561636f77733a20494e53554646494349454e545f4f55545055545f414d4f60448201526215539560ea1b60648201526084015b60405180910390fd5b60008061061b610391565b5091509150816001600160701b0316851080156106415750806001600160701b03168451105b61068d5760405162461bcd60e51b815260206004820152601f60248201527f536561636f77733a20494e53554646494349454e545f4c4951554944495459006044820152606401610607565b60375460365460009182916001600160a01b039182169190811690871682148015906106cb5750806001600160a01b0316876001600160a01b031614155b61070d5760405162461bcd60e51b8152602060048201526013602482015272536561636f77733a20494e56414c49445f544f60681b6044820152606401610607565b88156107885760405163a9059cbb60e01b81526001600160a01b038881166004830152602482018b905283169063a9059cbb906044016020604051808303816000875af1158015610762573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107869190611f1e565b505b8751156108455760005b885181101561084357816001600160a01b03166342842e0e308a8c85815181106107be576107be611f40565b60209081029190910101516040516001600160e01b031960e086901b1681526001600160a01b0393841660048201529290911660248301526044820152606401600060405180830381600087803b15801561081857600080fd5b505af115801561082c573d6000803e3d6000fd5b50505050808061083b90611f56565b915050610792565b505b61084f828261048b565b90945092506000915061086d9050886001600160701b038716611f0b565b831161087a576000610897565b61088d886001600160701b038716611f0b565b6108979084611f0b565b90506000670de0b6b3a764000088516108b09190611f6f565b6108c3906001600160701b038716611f0b565b83116108d0576000610902565b670de0b6b3a764000088516108e59190611f6f565b6108f8906001600160701b038716611f0b565b6109029084611f0b565b905060008211806109135750600081115b61096a5760405162461bcd60e51b815260206004820152602260248201527f536561636f77733a20494e53554646494349454e545f494e5055545f414d4f55604482015261139560f21b6064820152608401610607565b6000610996610984603854856114ba90919063ffffffff16565b610990876127106114ba565b90611526565b905060006109a6856127106114ba565b90506109ce6109b8600261271061206a565b6105826001600160701b038b8116908b166114ba565b6109d883836114ba565b1015610a135760405162461bcd60e51b815260206004820152600a602482015269536561636f77733a204b60b01b6044820152606401610607565b5050610a2184848888611532565b6001600160a01b038716337fd78ad95fa46c994b6551d0da85fc275fe613ce37657fb8d5e3d130840159d82284610a6085670de0b6b3a7640000611728565b8c516040805193845260208401929092529082018e9052606082015260800160405180910390a3505050505050610a9660018055565b505050565b600054610100900460ff1615808015610abb5750600054600160ff909116105b80610ad55750303b158015610ad5575060005460ff166001145b610b385760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610607565b6000805460ff191660011790558015610b5b576000805461ff0019166101001790555b6064826001600160701b03161480610b7c57506032826001600160701b0316145b610bb75760405162461bcd60e51b815260206004820152600c60248201526b496e76616c6964205f66656560a01b6044820152606401610607565b60358054336001600160a01b0319918216179091556037805482166001600160a01b0387811691909117909155603680549092169085161790556001600160701b038216603855610c0661173a565b8015610c4c576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50505050565b6000806000610c5f610391565b506037546036549294509092506000918291610c87916001600160a01b03918216911661048b565b90925090506000610ca1836001600160701b038716611526565b90506000610cb8836001600160701b038716611526565b90506000610cc46103bb565b905080600003610cf357610cec610ce76001600160701b038581169085166114ba565b611769565b9750610d42565b610d3f6001600160701b0380891690610d0e908616846114ba565b610d18919061208f565b6001600160701b0380891690610d30908616856114ba565b610d3a919061208f565b61184d565b97505b60008811610db05760405162461bcd60e51b815260206004820152603560248201527f536561636f77734552433732315472616465506169723a20494e5355464649436044820152741251539517d3125455525112551657d35253951151605a1b6064820152608401610607565b610dba8989611863565b610dc685858989611532565b604080516001600160701b0380861682528416602082015233917f4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f910160405180910390a250505050505050919050565b600080600080610e25610391565b506037546036549294509092506001600160a01b039081169116600080610e4c848461048b565b915091506000610e646035546001600160a01b031690565b6040516321761c7160e11b81523060048201526001600160a01b0391909116906342ec38e290602401602060405180830381865afa158015610eaa573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ece9190611eb5565b90506000610ee46035546001600160a01b031690565b6001600160a01b0316639cc7f708836040518263ffffffff1660e01b8152600401610f1191815260200190565b602060405180830381865afa158015610f2e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f529190611eb5565b90506000610f5e6103bb565b905080610f6b83876114ba565b610f75919061208f565b9a5080610f8283866114ba565b610f8c919061208f565b995060008b118015610f9e575060008a115b6110085760405162461bcd60e51b815260206004820152603560248201527f536561636f77734552433732315472616465506169723a20494e5355464649436044820152741251539517d3125455525112551657d09554939151605a1b6064820152608401610607565b6110128b8b6118cd565b8d51919c509a508a9061102e90670de0b6b3a764000090611f6f565b146110915760405162461bcd60e51b815260206004820152602d60248201527f536561636f77734552433732315472616465506169723a20494e56414c49445f60448201526c4944535f544f5f52454d4f564560981b6064820152608401610607565b61109b83836119ed565b5060405163a9059cbb60e01b81526001600160a01b038d81166004830152602482018c905287169063a9059cbb906044016020604051808303816000875af11580156110eb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061110f9190611f1e565b5060005b8b518110156111c457856001600160a01b03166342842e0e308f8f858151811061113f5761113f611f40565b60209081029190910101516040516001600160e01b031960e086901b1681526001600160a01b0393841660048201529290911660248301526044820152606401600060405180830381600087803b15801561119957600080fd5b505af11580156111ad573d6000803e3d6000fd5b5050505080806111bc90611f56565b915050611113565b506111cf868661048b565b90945092506111e084848a8a611532565b604080518b8152602081018b90526001600160a01b038e169133917fdccd412f0b1252819cb1fd330b93224ca42612892bb3f4f789976e6d81936496910160405180910390a350505050505050509250929050565b61123d6114cd565b6037546036546001600160a01b03918216911660008061125d848461048b565b86516039549294509092509061129890670de0b6b3a764000090611292908590600160701b90046001600160701b0316611526565b90611728565b146112fb5760405162461bcd60e51b815260206004820152602d60248201527f536561636f77734552433732315472616465506169723a20534b494d5f51554160448201526c09ca892a8b2beaa9c9a82a8869609b1b6064820152608401610607565b6039546001600160a01b0385169063a9059cbb9088906113259086906001600160701b0316611526565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af1158015611370573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113949190611f1e565b5060005b855181101561144957836001600160a01b03166342842e0e30898985815181106113c4576113c4611f40565b60209081029190910101516040516001600160e01b031960e086901b1681526001600160a01b0393841660048201529290911660248301526044820152606401600060405180830381600087803b15801561141e57600080fd5b505af1158015611432573d6000803e3d6000fd5b50505050808061144190611f56565b915050611398565b505050505061145760018055565b5050565b6114636114cd565b6036546037546000918291611484916001600160a01b03908116911661048b565b60395491935091506114ad90839083906001600160701b0380821691600160701b900416611532565b50506114b860018055565b565b60006114c68284611f6f565b9392505050565b60026001540361151f5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610607565b6002600155565b60006114c68284611f0b565b6001600160701b03841180159061155057506001600160701b038311155b61159c5760405162461bcd60e51b815260206004820181905260248201527f536561636f77734552433732315472616465506169723a204f564552464c4f576044820152606401610607565b60006115ad640100000000426120a3565b6039549091506000906115cd90600160e01b900463ffffffff16836120b7565b905060008163ffffffff161180156115ed57506001600160701b03841615155b801561160157506001600160701b03831615155b15611690578063ffffffff166116298561161a86611a25565b6001600160e01b031690611a3e565b6001600160e01b031661163c9190611f6f565b603a600082825461164d91906120d4565b909155505063ffffffff81166116668461161a87611a25565b6001600160e01b03166116799190611f6f565b603b600082825461168a91906120d4565b90915550505b6039805463ffffffff8416600160e01b026001600160e01b036001600160701b03898116600160701b9081026001600160e01b03199095168c83161794909417918216831794859055604080519382169282169290921783529290930490911660208201527f1c411e9a96e071241c2f21f7726b17ae89e3cab4c78be50e062b03a9fffbbad1910160405180910390a1505050505050565b60006114c6828461208f565b60018055565b600054610100900460ff166117615760405162461bcd60e51b8152600401610607906120e7565b6114b8611a53565b60008160000361177b57506000919050565b6000600161178884611a7a565b901c6001901b905060018184816117a1576117a1612079565b048201901c905060018184816117b9576117b9612079565b048201901c905060018184816117d1576117d1612079565b048201901c905060018184816117e9576117e9612079565b048201901c9050600181848161180157611801612079565b048201901c9050600181848161181957611819612079565b048201901c9050600181848161183157611831612079565b048201901c90506114c68182858161184b5761184b612079565b045b600081831061185c57816114c6565b5090919050565b60355460405163f0e88e7f60e01b815260048101849052602481018390526001600160a01b039091169063f0e88e7f906044015b600060405180830381600087803b1580156118b157600080fd5b505af11580156118c5573d6000803e3d6000fd5b505050505050565b600080806118db8585611728565b90506000846034546118ed91906120d4565b9050670de0b6b3a7640000811061199657611914670de0b6b3a76400006105828382611728565b92506119208382611f0b565b60345584831061196657600061193a836105828887611f0b565b90506119468188611f0b565b9450806033600082825461195a9190612132565b909155506119e4915050565b6000611976836105828689611f0b565b905061198281886120d4565b9450806033600082825461195a9190611ee4565b84603460008282546119a891906120d4565b90915550600093508390506119bd86846114ba565b90506119c981886120d4565b945080603360008282546119dd9190611ee4565b9091555050505b50509250929050565b6035546040516387fe861160e01b815260048101849052602481018390526001600160a01b03909116906387fe861190604401611897565b600061038b600160701b6001600160701b03841661215a565b60006114c66001600160701b0383168461218c565b600054610100900460ff166117345760405162461bcd60e51b8152600401610607906120e7565b600080608083901c15611a8f57608092831c92015b604083901c15611aa157604092831c92015b602083901c15611ab357602092831c92015b601083901c15611ac557601092831c92015b600883901c15611ad757600892831c92015b600483901c15611ae957600492831c92015b600283901c15611afb57600292831c92015b600183901c1561038b5760010192915050565b80356001600160a01b0381168114611b2557600080fd5b919050565b60008060008060008060a08789031215611b4357600080fd5b611b4c87611b0e565b9550602087013594506040870135935060608701359250608087013567ffffffffffffffff80821115611b7e57600080fd5b818901915089601f830112611b9257600080fd5b813581811115611ba157600080fd5b8a6020828501011115611bb357600080fd5b6020830194508093505050509295509295509295565b600060208284031215611bdb57600080fd5b81356001600160e01b0319811681146114c657600080fd5b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715611c3257611c32611bf3565b604052919050565b60008060008060808587031215611c5057600080fd5b611c5985611b0e565b93506020611c68818701611b0e565b935060408601359250606086013567ffffffffffffffff80821115611c8c57600080fd5b818801915088601f830112611ca057600080fd5b813581811115611cb257611cb2611bf3565b611cc4601f8201601f19168501611c09565b91508082528984828501011115611cda57600080fd5b808484018584013760008482840101525080935050505092959194509250565b60008060408385031215611d0d57600080fd5b611d1683611b0e565b915061059260208401611b0e565b600082601f830112611d3557600080fd5b8135602067ffffffffffffffff821115611d5157611d51611bf3565b8160051b611d60828201611c09565b9283528481018201928281019087851115611d7a57600080fd5b83870192505b84831015611d9957823582529183019190830190611d80565b979650505050505050565b600080600060608486031215611db957600080fd5b83359250602084013567ffffffffffffffff811115611dd757600080fd5b611de386828701611d24565b925050611df260408501611b0e565b90509250925092565b600080600060608486031215611e1057600080fd5b611e1984611b0e565b9250611e2760208501611b0e565b915060408401356001600160701b0381168114611e4357600080fd5b809150509250925092565b600060208284031215611e6057600080fd5b5035919050565b60008060408385031215611e7a57600080fd5b611e8383611b0e565b9150602083013567ffffffffffffffff811115611e9f57600080fd5b611eab85828601611d24565b9150509250929050565b600060208284031215611ec757600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b8181036000831280158383131683831282161715611f0457611f04611ece565b5092915050565b8181038181111561038b5761038b611ece565b600060208284031215611f3057600080fd5b815180151581146114c657600080fd5b634e487b7160e01b600052603260045260246000fd5b600060018201611f6857611f68611ece565b5060010190565b808202811582820484141761038b5761038b611ece565b600181815b80851115611fc1578160001904821115611fa757611fa7611ece565b80851615611fb457918102915b93841c9390800290611f8b565b509250929050565b600082611fd85750600161038b565b81611fe55750600061038b565b8160018114611ffb576002811461200557612021565b600191505061038b565b60ff84111561201657612016611ece565b50506001821b61038b565b5060208310610133831016604e8410600b8410161715612044575081810a61038b565b61204e8383611f86565b806000190482111561206257612062611ece565b029392505050565b60006114c660ff841683611fc9565b634e487b7160e01b600052601260045260246000fd5b60008261209e5761209e612079565b500490565b6000826120b2576120b2612079565b500690565b63ffffffff828116828216039080821115611f0457611f04611ece565b8082018082111561038b5761038b611ece565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b808201828112600083128015821682158216171561215257612152611ece565b505092915050565b6001600160e01b0382811682821681810283169291811582850482141761218357612183611ece565b50505092915050565b60006001600160e01b03838116806121a6576121a6612079565b9216919091049291505056fea264697066735822122049f6d373326b34ce56a27fbff4ea747891d1635fdc83fc319526bd5b885e397464736f6c63430008120033";

export class SeacowsERC721TradePair__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<SeacowsERC721TradePair> {
    return super.deploy(overrides || {}) as Promise<SeacowsERC721TradePair>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): SeacowsERC721TradePair {
    return super.attach(address) as SeacowsERC721TradePair;
  }
  connect(signer: Signer): SeacowsERC721TradePair__factory {
    return super.connect(signer) as SeacowsERC721TradePair__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SeacowsERC721TradePairInterface {
    return new utils.Interface(_abi) as SeacowsERC721TradePairInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SeacowsERC721TradePair {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as SeacowsERC721TradePair;
  }
}
