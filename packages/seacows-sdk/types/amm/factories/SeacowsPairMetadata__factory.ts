/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  SeacowsPairMetadata,
  SeacowsPairMetadataInterface,
} from "../SeacowsPairMetadata";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "collection",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_operator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_fromTokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_toTokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "onERC3525Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC721Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "positionManager",
    outputs: [
      {
        internalType: "contract ISeacowsPositionManager",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "slot",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610643806100206000396000f3fe608060405234801561001057600080fd5b506004361061009d5760003560e01c80636352211e116100665780636352211e1461013e578063791b98bc146101695780637de1e5361461017a5780639cc7f70814610193578063fc0c546a146101a657600080fd5b80629ce20b146100a257806301ffc9a7146100df578063150b7a021461010257806318160ddd146101205780631a88bc6614610136575b600080fd5b6100c16100b03660046103f6565b629ce20b60e01b9695505050505050565b6040516001600160e01b031990911681526020015b60405180910390f35b6100f26100ed366004610497565b6101b9565b60405190151581526020016100d6565b6100c16101103660046104de565b630a85bd0160e11b949350505050565b61012861020a565b6040519081526020016100d6565b610128610298565b61015161014c3660046105be565b6102da565b6040516001600160a01b0390911681526020016100d6565b6002546001600160a01b0316610151565b600054610151906201000090046001600160a01b031681565b6101286101a13660046105be565b61035c565b600154610151906001600160a01b031681565b60006301ffc9a760e01b6001600160e01b0319831614806101ea57506001600160e01b03198216630a85bd0160e11b145b8061020457506001600160e01b03198216629ce20b60e01b145b92915050565b600061021e6002546001600160a01b031690565b6001600160a01b03166388200bb9610234610298565b6040518263ffffffff1660e01b815260040161025291815260200190565b602060405180830381865afa15801561026f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061029391906105d7565b905090565b60006102ac6002546001600160a01b031690565b60405163add21d2560e01b81523060048201526001600160a01b03919091169063add21d2590602401610252565b60006102ee6002546001600160a01b031690565b6001600160a01b0316636352211e836040518263ffffffff1660e01b815260040161031b91815260200190565b602060405180830381865afa158015610338573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061020491906105f0565b60006103706002546001600160a01b031690565b6001600160a01b0316639cc7f708836040518263ffffffff1660e01b815260040161039d91815260200190565b602060405180830381865afa1580156103ba573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061020491906105d7565b6001600160a01b03811681146103f357600080fd5b50565b60008060008060008060a0878903121561040f57600080fd5b863561041a816103de565b9550602087013594506040870135935060608701359250608087013567ffffffffffffffff8082111561044c57600080fd5b818901915089601f83011261046057600080fd5b81358181111561046f57600080fd5b8a602082850101111561048157600080fd5b6020830194508093505050509295509295509295565b6000602082840312156104a957600080fd5b81356001600160e01b0319811681146104c157600080fd5b9392505050565b634e487b7160e01b600052604160045260246000fd5b600080600080608085870312156104f457600080fd5b84356104ff816103de565b9350602085013561050f816103de565b925060408501359150606085013567ffffffffffffffff8082111561053357600080fd5b818701915087601f83011261054757600080fd5b813581811115610559576105596104c8565b604051601f8201601f19908116603f01168101908382118183101715610581576105816104c8565b816040528281528a602084870101111561059a57600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b6000602082840312156105d057600080fd5b5035919050565b6000602082840312156105e957600080fd5b5051919050565b60006020828403121561060257600080fd5b81516104c1816103de56fea26469706673582212206207dd3e7c37e81df0820a95e9f1ecab812e94e5182b3808a934233e009488ba64736f6c63430008120033";

export class SeacowsPairMetadata__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<SeacowsPairMetadata> {
    return super.deploy(overrides || {}) as Promise<SeacowsPairMetadata>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): SeacowsPairMetadata {
    return super.attach(address) as SeacowsPairMetadata;
  }
  connect(signer: Signer): SeacowsPairMetadata__factory {
    return super.connect(signer) as SeacowsPairMetadata__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SeacowsPairMetadataInterface {
    return new utils.Interface(_abi) as SeacowsPairMetadataInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SeacowsPairMetadata {
    return new Contract(address, _abi, signerOrProvider) as SeacowsPairMetadata;
  }
}
